

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Aug 27 21:39:54 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    33                           	dabs	1,0x7E,2
    34  0000                     
    35                           ; Version 2.20
    36                           ; Generated 12/02/2020 GMT
    37                           ; 
    38                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F877A Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     	;# 
    70  0001                     	;# 
    71  0002                     	;# 
    72  0003                     	;# 
    73  0004                     	;# 
    74  0005                     	;# 
    75  0006                     	;# 
    76  0007                     	;# 
    77  0008                     	;# 
    78  0009                     	;# 
    79  000A                     	;# 
    80  000B                     	;# 
    81  000C                     	;# 
    82  000D                     	;# 
    83  000E                     	;# 
    84  000E                     	;# 
    85  000F                     	;# 
    86  0010                     	;# 
    87  0011                     	;# 
    88  0012                     	;# 
    89  0013                     	;# 
    90  0014                     	;# 
    91  0015                     	;# 
    92  0015                     	;# 
    93  0016                     	;# 
    94  0017                     	;# 
    95  0018                     	;# 
    96  0019                     	;# 
    97  001A                     	;# 
    98  001B                     	;# 
    99  001B                     	;# 
   100  001C                     	;# 
   101  001D                     	;# 
   102  001E                     	;# 
   103  001F                     	;# 
   104  0081                     	;# 
   105  0085                     	;# 
   106  0086                     	;# 
   107  0087                     	;# 
   108  0088                     	;# 
   109  0089                     	;# 
   110  008C                     	;# 
   111  008D                     	;# 
   112  008E                     	;# 
   113  0091                     	;# 
   114  0092                     	;# 
   115  0093                     	;# 
   116  0094                     	;# 
   117  0098                     	;# 
   118  0099                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0094                     	;# 
   177  0098                     	;# 
   178  0099                     	;# 
   179  009C                     	;# 
   180  009D                     	;# 
   181  009E                     	;# 
   182  009F                     	;# 
   183  010C                     	;# 
   184  010D                     	;# 
   185  010E                     	;# 
   186  010F                     	;# 
   187  018C                     	;# 
   188  018D                     	;# 
   189  0000                     	;# 
   190  0001                     	;# 
   191  0002                     	;# 
   192  0003                     	;# 
   193  0004                     	;# 
   194  0005                     	;# 
   195  0006                     	;# 
   196  0007                     	;# 
   197  0008                     	;# 
   198  0009                     	;# 
   199  000A                     	;# 
   200  000B                     	;# 
   201  000C                     	;# 
   202  000D                     	;# 
   203  000E                     	;# 
   204  000E                     	;# 
   205  000F                     	;# 
   206  0010                     	;# 
   207  0011                     	;# 
   208  0012                     	;# 
   209  0013                     	;# 
   210  0014                     	;# 
   211  0015                     	;# 
   212  0015                     	;# 
   213  0016                     	;# 
   214  0017                     	;# 
   215  0018                     	;# 
   216  0019                     	;# 
   217  001A                     	;# 
   218  001B                     	;# 
   219  001B                     	;# 
   220  001C                     	;# 
   221  001D                     	;# 
   222  001E                     	;# 
   223  001F                     	;# 
   224  0081                     	;# 
   225  0085                     	;# 
   226  0086                     	;# 
   227  0087                     	;# 
   228  0088                     	;# 
   229  0089                     	;# 
   230  008C                     	;# 
   231  008D                     	;# 
   232  008E                     	;# 
   233  0091                     	;# 
   234  0092                     	;# 
   235  0093                     	;# 
   236  0094                     	;# 
   237  0098                     	;# 
   238  0099                     	;# 
   239  009C                     	;# 
   240  009D                     	;# 
   241  009E                     	;# 
   242  009F                     	;# 
   243  010C                     	;# 
   244  010D                     	;# 
   245  010E                     	;# 
   246  010F                     	;# 
   247  018C                     	;# 
   248  018D                     	;# 
   249  0000                     	;# 
   250  0001                     	;# 
   251  0002                     	;# 
   252  0003                     	;# 
   253  0004                     	;# 
   254  0005                     	;# 
   255  0006                     	;# 
   256  0007                     	;# 
   257  0008                     	;# 
   258  0009                     	;# 
   259  000A                     	;# 
   260  000B                     	;# 
   261  000C                     	;# 
   262  000D                     	;# 
   263  000E                     	;# 
   264  000E                     	;# 
   265  000F                     	;# 
   266  0010                     	;# 
   267  0011                     	;# 
   268  0012                     	;# 
   269  0013                     	;# 
   270  0014                     	;# 
   271  0015                     	;# 
   272  0015                     	;# 
   273  0016                     	;# 
   274  0017                     	;# 
   275  0018                     	;# 
   276  0019                     	;# 
   277  001A                     	;# 
   278  001B                     	;# 
   279  001B                     	;# 
   280  001C                     	;# 
   281  001D                     	;# 
   282  001E                     	;# 
   283  001F                     	;# 
   284  0081                     	;# 
   285  0085                     	;# 
   286  0086                     	;# 
   287  0087                     	;# 
   288  0088                     	;# 
   289  0089                     	;# 
   290  008C                     	;# 
   291  008D                     	;# 
   292  008E                     	;# 
   293  0091                     	;# 
   294  0092                     	;# 
   295  0093                     	;# 
   296  0094                     	;# 
   297  0098                     	;# 
   298  0099                     	;# 
   299  009C                     	;# 
   300  009D                     	;# 
   301  009E                     	;# 
   302  009F                     	;# 
   303  010C                     	;# 
   304  010D                     	;# 
   305  010E                     	;# 
   306  010F                     	;# 
   307  018C                     	;# 
   308  018D                     	;# 
   309  0000                     	;# 
   310  0001                     	;# 
   311  0002                     	;# 
   312  0003                     	;# 
   313  0004                     	;# 
   314  0005                     	;# 
   315  0006                     	;# 
   316  0007                     	;# 
   317  0008                     	;# 
   318  0009                     	;# 
   319  000A                     	;# 
   320  000B                     	;# 
   321  000C                     	;# 
   322  000D                     	;# 
   323  000E                     	;# 
   324  000E                     	;# 
   325  000F                     	;# 
   326  0010                     	;# 
   327  0011                     	;# 
   328  0012                     	;# 
   329  0013                     	;# 
   330  0014                     	;# 
   331  0015                     	;# 
   332  0015                     	;# 
   333  0016                     	;# 
   334  0017                     	;# 
   335  0018                     	;# 
   336  0019                     	;# 
   337  001A                     	;# 
   338  001B                     	;# 
   339  001B                     	;# 
   340  001C                     	;# 
   341  001D                     	;# 
   342  001E                     	;# 
   343  001F                     	;# 
   344  0081                     	;# 
   345  0085                     	;# 
   346  0086                     	;# 
   347  0087                     	;# 
   348  0088                     	;# 
   349  0089                     	;# 
   350  008C                     	;# 
   351  008D                     	;# 
   352  008E                     	;# 
   353  0091                     	;# 
   354  0092                     	;# 
   355  0093                     	;# 
   356  0094                     	;# 
   357  0098                     	;# 
   358  0099                     	;# 
   359  009C                     	;# 
   360  009D                     	;# 
   361  009E                     	;# 
   362  009F                     	;# 
   363  010C                     	;# 
   364  010D                     	;# 
   365  010E                     	;# 
   366  010F                     	;# 
   367  018C                     	;# 
   368  018D                     	;# 
   369  0000                     	;# 
   370  0001                     	;# 
   371  0002                     	;# 
   372  0003                     	;# 
   373  0004                     	;# 
   374  0005                     	;# 
   375  0006                     	;# 
   376  0007                     	;# 
   377  0008                     	;# 
   378  0009                     	;# 
   379  000A                     	;# 
   380  000B                     	;# 
   381  000C                     	;# 
   382  000D                     	;# 
   383  000E                     	;# 
   384  000E                     	;# 
   385  000F                     	;# 
   386  0010                     	;# 
   387  0011                     	;# 
   388  0012                     	;# 
   389  0013                     	;# 
   390  0014                     	;# 
   391  0015                     	;# 
   392  0015                     	;# 
   393  0016                     	;# 
   394  0017                     	;# 
   395  0018                     	;# 
   396  0019                     	;# 
   397  001A                     	;# 
   398  001B                     	;# 
   399  001B                     	;# 
   400  001C                     	;# 
   401  001D                     	;# 
   402  001E                     	;# 
   403  001F                     	;# 
   404  0081                     	;# 
   405  0085                     	;# 
   406  0086                     	;# 
   407  0087                     	;# 
   408  0088                     	;# 
   409  0089                     	;# 
   410  008C                     	;# 
   411  008D                     	;# 
   412  008E                     	;# 
   413  0091                     	;# 
   414  0092                     	;# 
   415  0093                     	;# 
   416  0094                     	;# 
   417  0098                     	;# 
   418  0099                     	;# 
   419  009C                     	;# 
   420  009D                     	;# 
   421  009E                     	;# 
   422  009F                     	;# 
   423  010C                     	;# 
   424  010D                     	;# 
   425  010E                     	;# 
   426  010F                     	;# 
   427  018C                     	;# 
   428  018D                     	;# 
   429  0000                     	;# 
   430  0001                     	;# 
   431  0002                     	;# 
   432  0003                     	;# 
   433  0004                     	;# 
   434  0005                     	;# 
   435  0006                     	;# 
   436  0007                     	;# 
   437  0008                     	;# 
   438  0009                     	;# 
   439  000A                     	;# 
   440  000B                     	;# 
   441  000C                     	;# 
   442  000D                     	;# 
   443  000E                     	;# 
   444  000E                     	;# 
   445  000F                     	;# 
   446  0010                     	;# 
   447  0011                     	;# 
   448  0012                     	;# 
   449  0013                     	;# 
   450  0014                     	;# 
   451  0015                     	;# 
   452  0015                     	;# 
   453  0016                     	;# 
   454  0017                     	;# 
   455  0018                     	;# 
   456  0019                     	;# 
   457  001A                     	;# 
   458  001B                     	;# 
   459  001B                     	;# 
   460  001C                     	;# 
   461  001D                     	;# 
   462  001E                     	;# 
   463  001F                     	;# 
   464  0081                     	;# 
   465  0085                     	;# 
   466  0086                     	;# 
   467  0087                     	;# 
   468  0088                     	;# 
   469  0089                     	;# 
   470  008C                     	;# 
   471  008D                     	;# 
   472  008E                     	;# 
   473  0091                     	;# 
   474  0092                     	;# 
   475  0093                     	;# 
   476  0094                     	;# 
   477  0098                     	;# 
   478  0099                     	;# 
   479  009C                     	;# 
   480  009D                     	;# 
   481  009E                     	;# 
   482  009F                     	;# 
   483  010C                     	;# 
   484  010D                     	;# 
   485  010E                     	;# 
   486  010F                     	;# 
   487  018C                     	;# 
   488  018D                     	;# 
   489  0000                     	;# 
   490  0001                     	;# 
   491  0002                     	;# 
   492  0003                     	;# 
   493  0004                     	;# 
   494  0005                     	;# 
   495  0006                     	;# 
   496  0007                     	;# 
   497  0008                     	;# 
   498  0009                     	;# 
   499  000A                     	;# 
   500  000B                     	;# 
   501  000C                     	;# 
   502  000D                     	;# 
   503  000E                     	;# 
   504  000E                     	;# 
   505  000F                     	;# 
   506  0010                     	;# 
   507  0011                     	;# 
   508  0012                     	;# 
   509  0013                     	;# 
   510  0014                     	;# 
   511  0015                     	;# 
   512  0015                     	;# 
   513  0016                     	;# 
   514  0017                     	;# 
   515  0018                     	;# 
   516  0019                     	;# 
   517  001A                     	;# 
   518  001B                     	;# 
   519  001B                     	;# 
   520  001C                     	;# 
   521  001D                     	;# 
   522  001E                     	;# 
   523  001F                     	;# 
   524  0081                     	;# 
   525  0085                     	;# 
   526  0086                     	;# 
   527  0087                     	;# 
   528  0088                     	;# 
   529  0089                     	;# 
   530  008C                     	;# 
   531  008D                     	;# 
   532  008E                     	;# 
   533  0091                     	;# 
   534  0092                     	;# 
   535  0093                     	;# 
   536  0094                     	;# 
   537  0098                     	;# 
   538  0099                     	;# 
   539  009C                     	;# 
   540  009D                     	;# 
   541  009E                     	;# 
   542  009F                     	;# 
   543  010C                     	;# 
   544  010D                     	;# 
   545  010E                     	;# 
   546  010F                     	;# 
   547  018C                     	;# 
   548  018D                     	;# 
   549  000B                     _INTCONbits	set	11
   550  0003                     _STATUSbits	set	3
   551  001F                     _ADCON0	set	31
   552  001A                     _RCREG	set	26
   553  000C                     _PIR1bits	set	12
   554  0019                     _TXREG	set	25
   555  0018                     _RCSTAbits	set	24
   556  0009                     _PORTEbits	set	9
   557  0008                     _PORTD	set	8
   558  0012                     _T2CON	set	18
   559  0017                     _CCP1CON	set	23
   560  0007                     _PORTCbits	set	7
   561  0015                     _CCPR1L	set	21
   562  0006                     _PORTBbits	set	6
   563  001E                     _ADRESH	set	30
   564  001F                     _ADCON0bits	set	31
   565  0092                     _TMR2ON	set	146
   566  00BC                     _CCP1Y	set	188
   567  00BD                     _CCP1X	set	189
   568  0039                     _RC1	set	57
   569  0032                     _RB2	set	50
   570  0031                     _RB1	set	49
   571  009F                     _ADCON1	set	159
   572  0098                     _TXSTAbits	set	152
   573  0099                     _SPBRG	set	153
   574  0092                     _PR2	set	146
   575  009F                     _ADCON1bits	set	159
   576  0089                     _TRISEbits	set	137
   577  0088                     _TRISD	set	136
   578  0085                     _TRISAbits	set	133
   579  0086                     _TRISBbits	set	134
   580  0087                     _TRISCbits	set	135
   581  009C                     _CMCONbits	set	156
   582  009E                     _ADRESL	set	158
   583  010C                     _EEDATA	set	268
   584  010D                     _EEADR	set	269
   585  018C                     _EECON1	set	396
   586  018D                     _EECON2	set	397
   587  018C                     _EECON1bits	set	396
   588                           
   589                           	psect	strings
   590  0003                     __pstrings:
   591  0003                     stringtab:
   592  0003                     __stringtab:
   593  0003                     stringcode:	
   594                           ;	String table - string pointers are 1 byte each
   595                           
   596  0003                     stringdir:
   597  0003  3000               	movlw	high stringdir
   598  0004  008A               	movwf	10
   599  0005  0804               	movf	4,w
   600  0006  0A84               	incf	4,f
   601  0007  0782               	addwf	2,f
   602  0008                     __stringbase:
   603  0008  3400               	retlw	0
   604  0009                     __end_of__stringtab:
   605  0009                     STR_4:
   606  0009  3456               	retlw	86	;'V'
   607  000A  3461               	retlw	97	;'a'
   608  000B  346C               	retlw	108	;'l'
   609  000C  346F               	retlw	111	;'o'
   610  000D  3472               	retlw	114	;'r'
   611  000E  3420               	retlw	32	;' '
   612  000F  3441               	retlw	65	;'A'
   613  0010  3474               	retlw	116	;'t'
   614  0011  3475               	retlw	117	;'u'
   615  0012  3461               	retlw	97	;'a'
   616  0013  346C               	retlw	108	;'l'
   617  0014  3469               	retlw	105	;'i'
   618  0015  347A               	retlw	122	;'z'
   619  0016  3461               	retlw	97	;'a'
   620  0017  3464               	retlw	100	;'d'
   621  0018  346F               	retlw	111	;'o'
   622  0019  3400               	retlw	0
   623  001A                     STR_10:
   624  001A  3453               	retlw	83	;'S'
   625  001B  3461               	retlw	97	;'a'
   626  001C  346C               	retlw	108	;'l'
   627  001D  3476               	retlw	118	;'v'
   628  001E  3461               	retlw	97	;'a'
   629  001F  3472               	retlw	114	;'r'
   630  0020  3420               	retlw	32	;' '
   631  0021  3453               	retlw	83	;'S'
   632  0022  3465               	retlw	101	;'e'
   633  0023  3474               	retlw	116	;'t'
   634  0024  3450               	retlw	80	;'P'
   635  0025  346F               	retlw	111	;'o'
   636  0026  3469               	retlw	105	;'i'
   637  0027  346E               	retlw	110	;'n'
   638  0028  3474               	retlw	116	;'t'
   639  0029  3400               	retlw	0
   640  002A                     STR_2:
   641  002A  344D               	retlw	77	;'M'
   642  002B  346F               	retlw	111	;'o'
   643  002C  3464               	retlw	100	;'d'
   644  002D  346F               	retlw	111	;'o'
   645  002E  3420               	retlw	32	;' '
   646  002F  344C               	retlw	76	;'L'
   647  0030  346F               	retlw	111	;'o'
   648  0031  3463               	retlw	99	;'c'
   649  0032  3461               	retlw	97	;'a'
   650  0033  346C               	retlw	108	;'l'
   651  0034  3420               	retlw	32	;' '
   652  0035  342E               	retlw	46	;'.'
   653  0036  342E               	retlw	46	;'.'
   654  0037  342E               	retlw	46	;'.'
   655  0038  3400               	retlw	0
   656  0039                     STR_19:
   657  0039  3450               	retlw	80	;'P'
   658  003A  3472               	retlw	114	;'r'
   659  003B  3465               	retlw	101	;'e'
   660  003C  3473               	retlw	115	;'s'
   661  003D  3473               	retlw	115	;'s'
   662  003E  3469               	retlw	105	;'i'
   663  003F  346F               	retlw	111	;'o'
   664  0040  346E               	retlw	110	;'n'
   665  0041  3465               	retlw	101	;'e'
   666  0042  3420               	retlw	32	;' '
   667  0043  3450               	retlw	80	;'P'
   668  0044  3461               	retlw	97	;'a'
   669  0045  3472               	retlw	114	;'r'
   670  0046  3461               	retlw	97	;'a'
   671  0047  3400               	retlw	0
   672  0048                     STR_3:
   673  0048  3431               	retlw	49	;'1'
   674  0049  342D               	retlw	45	;'-'
   675  004A  3453               	retlw	83	;'S'
   676  004B  3474               	retlw	116	;'t'
   677  004C  3461               	retlw	97	;'a'
   678  004D  3472               	retlw	114	;'r'
   679  004E  3474               	retlw	116	;'t'
   680  004F  3420               	retlw	32	;' '
   681  0050  3420               	retlw	32	;' '
   682  0051  3432               	retlw	50	;'2'
   683  0052  342D               	retlw	45	;'-'
   684  0053  3453               	retlw	83	;'S'
   685  0054  3465               	retlw	101	;'e'
   686  0055  3474               	retlw	116	;'t'
   687  0056  3400               	retlw	0
   688  0057                     STR_6:
   689  0057  3431               	retlw	49	;'1'
   690  0058  342D               	retlw	45	;'-'
   691  0059  3449               	retlw	73	;'I'
   692  005A  346E               	retlw	110	;'n'
   693  005B  3463               	retlw	99	;'c'
   694  005C  3472               	retlw	114	;'r'
   695  005D  3420               	retlw	32	;' '
   696  005E  3420               	retlw	32	;' '
   697  005F  3432               	retlw	50	;'2'
   698  0060  342D               	retlw	45	;'-'
   699  0061  3450               	retlw	80	;'P'
   700  0062  3472               	retlw	114	;'r'
   701  0063  346F               	retlw	111	;'o'
   702  0064  3478               	retlw	120	;'x'
   703  0065  3400               	retlw	0
   704  0066                     STR_16:
   705  0066  344C               	retlw	76	;'L'
   706  0067  3469               	retlw	105	;'i'
   707  0068  3467               	retlw	103	;'g'
   708  0069  3461               	retlw	97	;'a'
   709  006A  3464               	retlw	100	;'d'
   710  006B  346F               	retlw	111	;'o'
   711  006C  3420               	retlw	32	;' '
   712  006D  3420               	retlw	32	;' '
   713  006E  3432               	retlw	50	;'2'
   714  006F  342D               	retlw	45	;'-'
   715  0070  346F               	retlw	111	;'o'
   716  0071  3466               	retlw	102	;'f'
   717  0072  3466               	retlw	102	;'f'
   718  0073  3400               	retlw	0
   719  0074                     STR_20:
   720  0074  3443               	retlw	67	;'C'
   721  0075  346F               	retlw	111	;'o'
   722  0076  346E               	retlw	110	;'n'
   723  0077  3474               	retlw	116	;'t'
   724  0078  3469               	retlw	105	;'i'
   725  0079  346E               	retlw	110	;'n'
   726  007A  3475               	retlw	117	;'u'
   727  007B  3461               	retlw	97	;'a'
   728  007C  3472               	retlw	114	;'r'
   729  007D  342E               	retlw	46	;'.'
   730  007E  342E               	retlw	46	;'.'
   731  007F  342E               	retlw	46	;'.'
   732  0080  3400               	retlw	0
   733  0081                     STR_11:
   734  0081  3450               	retlw	80	;'P'
   735  0082  3461               	retlw	97	;'a'
   736  0083  3472               	retlw	114	;'r'
   737  0084  3461               	retlw	97	;'a'
   738  0085  3420               	retlw	32	;' '
   739  0086  3449               	retlw	73	;'I'
   740  0087  346E               	retlw	110	;'n'
   741  0088  3469               	retlw	105	;'i'
   742  0089  3463               	retlw	99	;'c'
   743  008A  3469               	retlw	105	;'i'
   744  008B  3461               	retlw	97	;'a'
   745  008C  3472               	retlw	114	;'r'
   746  008D  3400               	retlw	0
   747  008E                     STR_5:
   748  008E  3453               	retlw	83	;'S'
   749  008F  3465               	retlw	101	;'e'
   750  0090  3474               	retlw	116	;'t'
   751  0091  3450               	retlw	80	;'P'
   752  0092  346F               	retlw	111	;'o'
   753  0093  3469               	retlw	105	;'i'
   754  0094  346E               	retlw	110	;'n'
   755  0095  3474               	retlw	116	;'t'
   756  0096  343A               	retlw	58	;':'
   757  0097  3420               	retlw	32	;' '
   758  0098  3400               	retlw	0
   759  0099                     STR_9:
   760  0099  3432               	retlw	50	;'2'
   761  009A  342D               	retlw	45	;'-'
   762  009B  3449               	retlw	73	;'I'
   763  009C  346E               	retlw	110	;'n'
   764  009D  3469               	retlw	105	;'i'
   765  009E  3463               	retlw	99	;'c'
   766  009F  3469               	retlw	105	;'i'
   767  00A0  346F               	retlw	111	;'o'
   768  00A1  3400               	retlw	0
   769  00A2                     STR_15:
   770  00A2  3432               	retlw	50	;'2'
   771  00A3  342D               	retlw	45	;'-'
   772  00A4  3456               	retlw	86	;'V'
   773  00A5  346F               	retlw	111	;'o'
   774  00A6  346C               	retlw	108	;'l'
   775  00A7  3474               	retlw	116	;'t'
   776  00A8  3461               	retlw	97	;'a'
   777  00A9  3472               	retlw	114	;'r'
   778  00AA  3400               	retlw	0
   779  00AB                     STR_8:
   780  00AB  3431               	retlw	49	;'1'
   781  00AC  342D               	retlw	45	;'-'
   782  00AD  3453               	retlw	83	;'S'
   783  00AE  3461               	retlw	97	;'a'
   784  00AF  346C               	retlw	108	;'l'
   785  00B0  3476               	retlw	118	;'v'
   786  00B1  3461               	retlw	97	;'a'
   787  00B2  3472               	retlw	114	;'r'
   788  00B3  3400               	retlw	0
   789  00B4                     STR_1:
   790  00B4  3454               	retlw	84	;'T'
   791  00B5  3465               	retlw	101	;'e'
   792  00B6  346D               	retlw	109	;'m'
   793  00B7  3470               	retlw	112	;'p'
   794  00B8  343A               	retlw	58	;':'
   795  00B9  3420               	retlw	32	;' '
   796  00BA  3400               	retlw	0
   797  00BB                     STR_17:
   798  00BB  3454               	retlw	84	;'T'
   799  00BC  343A               	retlw	58	;':'
   800  00BD  3420               	retlw	32	;' '
   801  00BE  3400               	retlw	0
   802  00BF                     STR_18:
   803  00BF  3444               	retlw	68	;'D'
   804  00C0  3443               	retlw	67	;'C'
   805  00C1  343A               	retlw	58	;':'
   806  00C2  3400               	retlw	0
   807  008E                     
   808                           	psect	cinit
   809  07F3                     start_initialization:	
   810                           ; #config settings
   811                           
   812  07F3                     __initialization:
   813                           
   814                           ; Clear objects allocated to BANK0
   815  07F3  1383               	bcf	3,7	;select IRP bank0
   816  07F4  305A               	movlw	low __pbssBANK0
   817  07F5  0084               	movwf	4
   818  07F6  306C               	movlw	low (__pbssBANK0+18)
   819  07F7  120A  118A  20C9  120A  118A  	fcall	clear_ram0
   820  07FC                     end_of_initialization:	
   821                           ;End of C runtime variable initialization code
   822                           
   823  07FC                     __end_of__initialization:
   824  07FC  0183               	clrf	3
   825  07FD  120A  118A  2C26   	ljmp	_main	;jump to C main() function
   826                           
   827                           	psect	bssBANK0
   828  005A                     __pbssBANK0:
   829  005A                     _pi:
   830  005A                     	ds	4
   831  005E                     _dutyCycle:
   832  005E                     	ds	4
   833  0062                     _num_dac:
   834  0062                     	ds	4
   835  0066                     _unidade:
   836  0066                     	ds	2
   837  0068                     _dezena:
   838  0068                     	ds	2
   839  006A                     _setPoint:
   840  006A                     	ds	2
   841                           
   842                           	psect	clrtext
   843  00C9                     clear_ram0:	
   844                           ;	Called with FSR containing the base address, and
   845                           ;	W with the last address+1
   846                           
   847  00C9  0064               	clrwdt	;clear the watchdog before getting into this loop
   848  00CA                     clrloop0:
   849  00CA  0180               	clrf	0	;clear RAM location pointed to by FSR
   850  00CB  0A84               	incf	4,f	;increment pointer
   851  00CC  0604               	xorwf	4,w	;XOR with final address
   852  00CD  1903               	btfsc	3,2	;have we reached the end yet?
   853  00CE  3400               	retlw	0	;all done for this memory range, return
   854  00CF  0604               	xorwf	4,w	;XOR again to restore value
   855  00D0  28CA               	goto	clrloop0	;do the next byte
   856                           
   857                           	psect	cstackCOMMON
   858  0070                     __pcstackCOMMON:
   859  0070                     ?_lcd_cmd:
   860  0070                     ?_lcd_str:	
   861                           ; 1 bytes @ 0x0
   862                           
   863  0070                     ?_lcd_dat:	
   864                           ; 1 bytes @ 0x0
   865                           
   866  0070                     ?_eeprom_read:	
   867                           ; 1 bytes @ 0x0
   868                           
   869  0070                     ??_eeprom_read:	
   870                           ; 1 bytes @ 0x0
   871                           
   872  0070                     ?_eeprom_write:	
   873                           ; 1 bytes @ 0x0
   874                           
   875  0070                     ?_lcd_init:	
   876                           ; 1 bytes @ 0x0
   877                           
   878  0070                     ?_armazenarSet:	
   879                           ; 1 bytes @ 0x0
   880                           
   881  0070                     ?_alterarSetPoint:	
   882                           ; 1 bytes @ 0x0
   883                           
   884  0070                     ?_telaSetPoint:	
   885                           ; 1 bytes @ 0x0
   886                           
   887  0070                     ?_main:	
   888                           ; 1 bytes @ 0x0
   889                           
   890  0070                     ?_lcd_wr:	
   891                           ; 1 bytes @ 0x0
   892                           
   893  0070                     ??_lcd_wr:	
   894                           ; 1 bytes @ 0x0
   895                           
   896  0070                     ?___wmul:	
   897                           ; 1 bytes @ 0x0
   898                           
   899  0070                     ?___lwmod:	
   900                           ; 2 bytes @ 0x0
   901                           
   902  0070                     lcd_wr@val:	
   903                           ; 2 bytes @ 0x0
   904                           
   905  0070                     eeprom_write@value:	
   906                           ; 1 bytes @ 0x0
   907                           
   908  0070                     ___wmul@multiplier:	
   909                           ; 1 bytes @ 0x0
   910                           
   911  0070                     ___lwmod@divisor:	
   912                           ; 2 bytes @ 0x0
   913                           
   914                           
   915                           ; 2 bytes @ 0x0
   916  0070                     	ds	1
   917  0071                     ??_lcd_cmd:
   918  0071                     ??_lcd_dat:	
   919                           ; 1 bytes @ 0x1
   920                           
   921  0071                     ??_eeprom_write:	
   922                           ; 1 bytes @ 0x1
   923                           
   924  0071                     eeprom_read@addr:	
   925                           ; 1 bytes @ 0x1
   926                           
   927                           
   928                           ; 1 bytes @ 0x1
   929  0071                     	ds	1
   930  0072                     eeprom_write@addr:
   931  0072                     ___wmul@multiplicand:	
   932                           ; 1 bytes @ 0x2
   933                           
   934  0072                     ___lwmod@dividend:	
   935                           ; 2 bytes @ 0x2
   936                           
   937                           
   938                           ; 2 bytes @ 0x2
   939  0072                     	ds	1
   940  0073                     lcd_cmd@val:
   941  0073                     lcd_dat@val:	
   942                           ; 1 bytes @ 0x3
   943                           
   944                           
   945                           ; 1 bytes @ 0x3
   946  0073                     	ds	1
   947  0074                     ??_lcd_str:
   948  0074                     ??_lcd_init:	
   949                           ; 1 bytes @ 0x4
   950                           
   951  0074                     ??___wmul:	
   952                           ; 1 bytes @ 0x4
   953                           
   954  0074                     ??___lwmod:	
   955                           ; 1 bytes @ 0x4
   956                           
   957  0074                     ___wmul@product:	
   958                           ; 1 bytes @ 0x4
   959                           
   960                           
   961                           ; 2 bytes @ 0x4
   962  0074                     	ds	1
   963  0075                     lcd_str@i:
   964  0075                     ___lwmod@counter:	
   965                           ; 1 bytes @ 0x5
   966                           
   967                           
   968                           ; 1 bytes @ 0x5
   969  0075                     	ds	1
   970  0076                     ??_armazenarSet:
   971  0076                     ?_verificarTemperatura:	
   972                           ; 1 bytes @ 0x6
   973                           
   974  0076                     ?___lwdiv:	
   975                           ; 2 bytes @ 0x6
   976                           
   977  0076                     ?___aldiv:	
   978                           ; 2 bytes @ 0x6
   979                           
   980  0076                     lcd_str@str:	
   981                           ; 4 bytes @ 0x6
   982                           
   983  0076                     ___lwdiv@divisor:	
   984                           ; 1 bytes @ 0x6
   985                           
   986  0076                     ___aldiv@divisor:	
   987                           ; 2 bytes @ 0x6
   988                           
   989                           
   990                           ; 4 bytes @ 0x6
   991  0076                     	ds	1
   992  0077                     ??_alterarSetPoint:
   993                           
   994                           ; 1 bytes @ 0x7
   995  0077                     	ds	1
   996  0078                     ??_verificarTemperatura:
   997  0078                     ___lwdiv@dividend:	
   998                           ; 1 bytes @ 0x8
   999                           
  1000                           
  1001                           ; 2 bytes @ 0x8
  1002  0078                     	ds	2
  1003  007A                     ??_telaSetPoint:
  1004  007A                     ??___lwdiv:	
  1005                           ; 1 bytes @ 0xA
  1006                           
  1007  007A                     ?_telaGravarEEPROM:	
  1008                           ; 1 bytes @ 0xA
  1009                           
  1010  007A                     verificarTemperatura@temp:	
  1011                           ; 2 bytes @ 0xA
  1012                           
  1013  007A                     ___aldiv@dividend:	
  1014                           ; 2 bytes @ 0xA
  1015                           
  1016                           
  1017                           ; 4 bytes @ 0xA
  1018  007A                     	ds	1
  1019  007B                     ___lwdiv@quotient:
  1020                           
  1021                           ; 2 bytes @ 0xB
  1022  007B                     	ds	2
  1023  007D                     ___lwdiv@counter:
  1024                           
  1025                           ; 1 bytes @ 0xD
  1026  007D                     	ds	1
  1027                           
  1028                           	psect	cstackBANK0
  1029  0020                     __pcstackBANK0:
  1030  0020                     ?_itoa:
  1031  0020                     ??_telaGravarEEPROM:	
  1032                           ; 1 bytes @ 0x0
  1033                           
  1034  0020                     ??___aldiv:	
  1035                           ; 1 bytes @ 0x0
  1036                           
  1037  0020                     telaSetPoint@flag:	
  1038                           ; 1 bytes @ 0x0
  1039                           
  1040  0020                     itoa@val:	
  1041                           ; 2 bytes @ 0x0
  1042                           
  1043                           
  1044                           ; 2 bytes @ 0x0
  1045  0020                     	ds	1
  1046  0021                     ___aldiv@counter:
  1047                           
  1048                           ; 1 bytes @ 0x1
  1049  0021                     	ds	1
  1050  0022                     itoa@str:
  1051  0022                     ___aldiv@sign:	
  1052                           ; 1 bytes @ 0x2
  1053                           
  1054  0022                     telaSetPoint@contD:	
  1055                           ; 1 bytes @ 0x2
  1056                           
  1057                           
  1058                           ; 2 bytes @ 0x2
  1059  0022                     	ds	1
  1060  0023                     ??_itoa:
  1061  0023                     telaGravarEEPROM@contD:	
  1062                           ; 1 bytes @ 0x3
  1063                           
  1064  0023                     ___aldiv@quotient:	
  1065                           ; 2 bytes @ 0x3
  1066                           
  1067                           
  1068                           ; 4 bytes @ 0x3
  1069  0023                     	ds	1
  1070  0024                     ?_imprimirTemp:
  1071  0024                     imprimirTemp@temp:	
  1072                           ; 1 bytes @ 0x4
  1073                           
  1074  0024                     telaSetPoint@contU:	
  1075                           ; 2 bytes @ 0x4
  1076                           
  1077                           
  1078                           ; 2 bytes @ 0x4
  1079  0024                     	ds	1
  1080  0025                     telaGravarEEPROM@contU:
  1081                           
  1082                           ; 2 bytes @ 0x5
  1083  0025                     	ds	1
  1084  0026                     imprimirTemp@linha:
  1085                           
  1086                           ; 2 bytes @ 0x6
  1087  0026                     	ds	1
  1088  0027                     ?_iniciarControlador:
  1089  0027                     telaGravarEEPROM@flag:	
  1090                           ; 2 bytes @ 0x7
  1091                           
  1092                           
  1093                           ; 2 bytes @ 0x7
  1094  0027                     	ds	1
  1095  0028                     ??_imprimirTemp:
  1096                           
  1097                           ; 1 bytes @ 0x8
  1098  0028                     	ds	1
  1099  0029                     ??_iniciarControlador:
  1100                           
  1101                           ; 1 bytes @ 0x9
  1102  0029                     	ds	2
  1103  002B                     imprimirTemp@str:
  1104                           
  1105                           ; 6 bytes @ 0xB
  1106  002B                     	ds	6
  1107  0031                     ?_telaInicio:
  1108  0031                     iniciarControlador@tempAtual:	
  1109                           ; 2 bytes @ 0x11
  1110                           
  1111                           
  1112                           ; 2 bytes @ 0x11
  1113  0031                     	ds	2
  1114  0033                     ??_telaInicio:
  1115  0033                     iniciarControlador@erro:	
  1116                           ; 1 bytes @ 0x13
  1117                           
  1118                           
  1119                           ; 2 bytes @ 0x13
  1120  0033                     	ds	2
  1121  0035                     iniciarControlador@num_dac:
  1122                           
  1123                           ; 4 bytes @ 0x15
  1124  0035                     	ds	1
  1125  0036                     telaInicio@flag:
  1126                           
  1127                           ; 2 bytes @ 0x16
  1128  0036                     	ds	3
  1129  0039                     iniciarControlador@dutyCycle:
  1130                           
  1131                           ; 4 bytes @ 0x19
  1132  0039                     	ds	4
  1133  003D                     ?_telaControlador:
  1134                           
  1135                           ; 2 bytes @ 0x1D
  1136  003D                     	ds	2
  1137  003F                     ??_telaControlador:
  1138                           
  1139                           ; 1 bytes @ 0x1F
  1140  003F                     	ds	3
  1141  0042                     telaControlador@str:
  1142                           
  1143                           ; 6 bytes @ 0x22
  1144  0042                     	ds	6
  1145  0048                     telaControlador@dc:
  1146                           
  1147                           ; 4 bytes @ 0x28
  1148  0048                     	ds	4
  1149  004C                     telaControlador@temp:
  1150                           
  1151                           ; 2 bytes @ 0x2C
  1152  004C                     	ds	2
  1153  004E                     telaControlador@strDC:
  1154                           
  1155                           ; 6 bytes @ 0x2E
  1156  004E                     	ds	6
  1157  0054                     ??_main:
  1158                           
  1159                           ; 1 bytes @ 0x34
  1160  0054                     	ds	2
  1161  0056                     main@setU:
  1162                           
  1163                           ; 2 bytes @ 0x36
  1164  0056                     	ds	2
  1165  0058                     main@flag:
  1166                           
  1167                           ; 2 bytes @ 0x38
  1168  0058                     	ds	2
  1169                           
  1170                           	psect	maintext
  1171  0426                     __pmaintext:	
  1172 ;;
  1173 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1174 ;;
  1175 ;; *************** function _main *****************
  1176 ;; Defined at:
  1177 ;;		line 34 in file "main.c"
  1178 ;; Parameters:    Size  Location     Type
  1179 ;;		None
  1180 ;; Auto vars:     Size  Location     Type
  1181 ;;  flag            2   56[BANK0 ] unsigned int 
  1182 ;;  setU            2   54[BANK0 ] unsigned int 
  1183 ;;  setD            2    0        unsigned int 
  1184 ;; Return value:  Size  Location     Type
  1185 ;;                  1    wreg      void 
  1186 ;; Registers used:
  1187 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1188 ;; Tracked objects:
  1189 ;;		On entry : B00/0
  1190 ;;		On exit  : 0/0
  1191 ;;		Unchanged: 0/0
  1192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1193 ;;      Params:         0       0       0       0       0
  1194 ;;      Locals:         0       4       0       0       0
  1195 ;;      Temps:          0       2       0       0       0
  1196 ;;      Totals:         0       6       0       0       0
  1197 ;;Total ram usage:        6 bytes
  1198 ;; Hardware stack levels required when called: 5
  1199 ;; This function calls:
  1200 ;;		___lwdiv
  1201 ;;		___lwmod
  1202 ;;		_armazenarSet
  1203 ;;		_lcd_cmd
  1204 ;;		_lcd_init
  1205 ;;		_lcd_str
  1206 ;;		_telaControlador
  1207 ;;		_telaGravarEEPROM
  1208 ;;		_telaInicio
  1209 ;;		_telaSetPoint
  1210 ;; This function is called by:
  1211 ;;		Startup code after reset
  1212 ;; This function uses a non-reentrant model
  1213 ;;
  1214                           
  1215                           
  1216                           ;psect for function _main
  1217  0426                     _main:
  1218  0426                     l2152:	
  1219                           ;incstack = 0
  1220                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1221                           
  1222                           
  1223                           ;main.c: 35:     unsigned int flag = -1;
  1224  0426  30FF               	movlw	255
  1225  0427  1283               	bcf	3,5	;RP0=0, select bank0
  1226  0428  1303               	bcf	3,6	;RP1=0, select bank0
  1227  0429  00D8               	movwf	main@flag
  1228  042A  30FF               	movlw	255
  1229  042B  00D9               	movwf	main@flag+1
  1230  042C                     l2154:
  1231                           
  1232                           ;main.c: 36:     unsigned int setU = setPoint%10;
  1233  042C  300A               	movlw	10
  1234  042D  00F0               	movwf	___lwmod@divisor
  1235  042E  3000               	movlw	0
  1236  042F  00F1               	movwf	___lwmod@divisor+1
  1237  0430  086B               	movf	_setPoint+1,w
  1238  0431  00F3               	movwf	___lwmod@dividend+1
  1239  0432  086A               	movf	_setPoint,w
  1240  0433  00F2               	movwf	___lwmod@dividend
  1241  0434  120A  158A  2652  120A  118A  	fcall	___lwmod
  1242  0439  0871               	movf	?___lwmod+1,w
  1243  043A  1283               	bcf	3,5	;RP0=0, select bank0
  1244  043B  1303               	bcf	3,6	;RP1=0, select bank0
  1245  043C  00D7               	movwf	main@setU+1
  1246  043D  0870               	movf	?___lwmod,w
  1247  043E  00D6               	movwf	main@setU
  1248  043F                     l2156:
  1249  043F  300A               	movlw	10
  1250  0440  00F6               	movwf	___lwdiv@divisor
  1251  0441  3000               	movlw	0
  1252  0442  00F7               	movwf	___lwdiv@divisor+1
  1253  0443  0856               	movf	main@setU,w
  1254  0444  026A               	subwf	_setPoint,w
  1255  0445  00F8               	movwf	___lwdiv@dividend
  1256  0446  0857               	movf	main@setU+1,w
  1257  0447  1C03               	skipc
  1258  0448  0A57               	incf	main@setU+1,w
  1259  0449  026B               	subwf	_setPoint+1,w
  1260  044A  00F9               	movwf	___lwdiv@dividend+1
  1261  044B  120A  158A  26CF  120A  118A  	fcall	___lwdiv
  1262  0450                     l2158:
  1263                           
  1264                           ;main.c: 41:     CMCONbits.CM0=1;
  1265  0450  1683               	bsf	3,5	;RP0=1, select bank1
  1266  0451  1303               	bcf	3,6	;RP1=0, select bank1
  1267  0452  141C               	bsf	28,0	;volatile
  1268  0453                     l2160:
  1269                           
  1270                           ;main.c: 42:     CMCONbits.CM1=1;
  1271  0453  149C               	bsf	28,1	;volatile
  1272  0454                     l2162:
  1273                           
  1274                           ;main.c: 43:     CMCONbits.CM2=1;
  1275  0454  151C               	bsf	28,2	;volatile
  1276  0455                     l2164:
  1277                           
  1278                           ;main.c: 45:     TRISCbits.TRISC7 = 1;
  1279  0455  1787               	bsf	7,7	;volatile
  1280  0456                     l2166:
  1281                           
  1282                           ;main.c: 46:     TRISCbits.TRISC1 = 0;
  1283  0456  1087               	bcf	7,1	;volatile
  1284  0457                     l2168:
  1285                           
  1286                           ;main.c: 47:     TRISCbits.TRISC2 = 0;
  1287  0457  1107               	bcf	7,2	;volatile
  1288  0458                     l2170:
  1289                           
  1290                           ;main.c: 48:     TRISCbits.TRISC6 = 0;
  1291  0458  1307               	bcf	7,6	;volatile
  1292  0459                     l2172:
  1293                           
  1294                           ;main.c: 51:     TRISBbits.TRISB1 = 1;
  1295  0459  1486               	bsf	6,1	;volatile
  1296  045A                     l2174:
  1297                           
  1298                           ;main.c: 52:     TRISBbits.TRISB2 = 1;
  1299  045A  1506               	bsf	6,2	;volatile
  1300  045B                     l2176:
  1301                           
  1302                           ;main.c: 55:     TRISAbits.TRISA1 = 0;
  1303  045B  1085               	bcf	5,1	;volatile
  1304  045C                     l2178:
  1305                           
  1306                           ;main.c: 56:     TRISAbits.TRISA0 = 1;
  1307  045C  1405               	bsf	5,0	;volatile
  1308  045D                     l2180:
  1309                           
  1310                           ;main.c: 59:     TRISD=0x00;
  1311  045D  0188               	clrf	8	;volatile
  1312  045E                     l2182:
  1313                           
  1314                           ;main.c: 60:     TRISEbits.TRISE0=0;
  1315  045E  1009               	bcf	9,0	;volatile
  1316  045F                     l2184:
  1317                           
  1318                           ;main.c: 61:     TRISEbits.TRISE1=0;
  1319  045F  1089               	bcf	9,1	;volatile
  1320  0460                     l2186:
  1321                           
  1322                           ;main.c: 64:     TRISAbits.TRISA1=1;
  1323  0460  1485               	bsf	5,1	;volatile
  1324  0461                     l2188:
  1325                           
  1326                           ;main.c: 66:     PORTCbits.RC1 = 0;
  1327  0461  1283               	bcf	3,5	;RP0=0, select bank0
  1328  0462  1303               	bcf	3,6	;RP1=0, select bank0
  1329  0463  1087               	bcf	7,1	;volatile
  1330  0464                     l2190:
  1331                           
  1332                           ;main.c: 67:     PORTCbits.RC2 = 0;
  1333  0464  1107               	bcf	7,2	;volatile
  1334  0465                     l2192:
  1335                           
  1336                           ;main.c: 69:     PORTBbits.RB1 = 1;
  1337  0465  1486               	bsf	6,1	;volatile
  1338  0466                     l2194:
  1339                           
  1340                           ;main.c: 70:     PORTBbits.RB2 = 1;
  1341  0466  1506               	bsf	6,2	;volatile
  1342  0467                     l2196:
  1343                           
  1344                           ;main.c: 72:     lcd_init();
  1345  0467  120A  158A  2713  120A  118A  	fcall	_lcd_init
  1346  046C                     l2198:
  1347                           
  1348                           ;main.c: 75:     ADCON1bits.ADCS2 = 1;
  1349  046C  1683               	bsf	3,5	;RP0=1, select bank1
  1350  046D  1303               	bcf	3,6	;RP1=0, select bank1
  1351  046E  171F               	bsf	31,6	;volatile
  1352  046F                     l2200:
  1353                           
  1354                           ;main.c: 76:     ADCON0bits.ADCS1 = 1;
  1355  046F  1283               	bcf	3,5	;RP0=0, select bank0
  1356  0470  1303               	bcf	3,6	;RP1=0, select bank0
  1357  0471  179F               	bsf	31,7	;volatile
  1358  0472                     l2202:
  1359                           
  1360                           ;main.c: 77:     ADCON0bits.ADCS0 = 0;
  1361  0472  131F               	bcf	31,6	;volatile
  1362  0473                     l2204:
  1363                           
  1364                           ;main.c: 80:     ADCON0bits.CHS = 0b000;
  1365  0473  30C7               	movlw	-57
  1366  0474  059F               	andwf	31,f	;volatile
  1367  0475                     l2206:
  1368                           
  1369                           ;main.c: 83:     ADCON1bits.ADFM = 1;
  1370  0475  1683               	bsf	3,5	;RP0=1, select bank1
  1371  0476  1303               	bcf	3,6	;RP1=0, select bank1
  1372  0477  179F               	bsf	31,7	;volatile
  1373  0478                     l2208:
  1374                           
  1375                           ;main.c: 86:     ADCON1bits.PCFG = 0b0010;
  1376  0478  081F               	movf	31,w	;volatile
  1377  0479  39F0               	andlw	-16
  1378  047A  3802               	iorlw	2
  1379  047B  009F               	movwf	31	;volatile
  1380  047C                     l2210:
  1381                           
  1382                           ;main.c: 89:     ADCON0bits.ADON = 1;
  1383  047C  1283               	bcf	3,5	;RP0=0, select bank0
  1384  047D  1303               	bcf	3,6	;RP1=0, select bank0
  1385  047E  141F               	bsf	31,0	;volatile
  1386  047F                     l2212:
  1387                           
  1388                           ;main.c: 92:     CCP1CON = 0x0F;
  1389  047F  300F               	movlw	15
  1390  0480  0097               	movwf	23	;volatile
  1391  0481                     l2214:
  1392                           
  1393                           ;main.c: 93:     PR2 = 0xF9;
  1394  0481  30F9               	movlw	249
  1395  0482  1683               	bsf	3,5	;RP0=1, select bank1
  1396  0483  1303               	bcf	3,6	;RP1=0, select bank1
  1397  0484  0092               	movwf	18	;volatile
  1398  0485                     l2216:
  1399                           
  1400                           ;main.c: 94:     CCPR1L = 0;
  1401  0485  1283               	bcf	3,5	;RP0=0, select bank0
  1402  0486  1303               	bcf	3,6	;RP1=0, select bank0
  1403  0487  0195               	clrf	21	;volatile
  1404  0488                     l2218:
  1405                           
  1406                           ;main.c: 95:     T2CON = 0x01;
  1407  0488  3001               	movlw	1
  1408  0489  0092               	movwf	18	;volatile
  1409  048A                     l2220:
  1410                           
  1411                           ;main.c: 96:     TMR2ON = 1;
  1412  048A  1512               	bsf	18,2	;volatile
  1413                           
  1414                           ;main.c: 106:     lcd_cmd(0x01);
  1415  048B  3001               	movlw	1
  1416  048C  120A  158A  2571  120A  118A  	fcall	_lcd_cmd
  1417                           
  1418                           ;main.c: 107:     lcd_cmd(0x80);
  1419  0491  3080               	movlw	128
  1420  0492  120A  158A  2571  120A  118A  	fcall	_lcd_cmd
  1421  0497                     l2222:
  1422                           
  1423                           ;main.c: 108:     lcd_str("Pressione Para");
  1424  0497  3031               	movlw	(low ((STR_19-__stringbase)| (0+32768)))& (0+255)
  1425  0498  120A  158A  252A  120A  118A  	fcall	_lcd_str
  1426  049D                     l2224:
  1427                           
  1428                           ;main.c: 109:     lcd_cmd(0xC0);
  1429  049D  30C0               	movlw	192
  1430  049E  120A  158A  2571  120A  118A  	fcall	_lcd_cmd
  1431                           
  1432                           ;main.c: 110:     lcd_str("Continuar...");
  1433  04A3  306C               	movlw	(low ((STR_20-__stringbase)| (0+32768)))& (0+255)
  1434  04A4  120A  158A  252A  120A  118A  	fcall	_lcd_str
  1435  04A9                     l2226:
  1436                           
  1437                           ;main.c: 112:     _delay((unsigned long)((20)*(4000000/4000.0)));
  1438  04A9  301A               	movlw	26
  1439  04AA  1283               	bcf	3,5	;RP0=0, select bank0
  1440  04AB  1303               	bcf	3,6	;RP1=0, select bank0
  1441  04AC  00D5               	movwf	??_main+1
  1442  04AD  30F7               	movlw	247
  1443  04AE  00D4               	movwf	??_main
  1444  04AF                     u1667:
  1445  04AF  0BD4               	decfsz	??_main,f
  1446  04B0  2CAF               	goto	u1667
  1447  04B1  0BD5               	decfsz	??_main+1,f
  1448  04B2  2CAF               	goto	u1667
  1449  04B3  2CB4               	nop2
  1450  04B4                     l157:
  1451  04B4  1283               	bcf	3,5	;RP0=0, select bank0
  1452  04B5  1303               	bcf	3,6	;RP1=0, select bank0
  1453  04B6  1C86               	btfss	6,1	;volatile
  1454  04B7  2CB9               	goto	u1601
  1455  04B8  2CBA               	goto	u1600
  1456  04B9                     u1601:
  1457  04B9  2CBE               	goto	l2230
  1458  04BA                     u1600:
  1459  04BA                     l2228:
  1460  04BA  1906               	btfsc	6,2	;volatile
  1461  04BB  2CBD               	goto	u1611
  1462  04BC  2CBE               	goto	u1610
  1463  04BD                     u1611:
  1464  04BD  2CB4               	goto	l157
  1465  04BE                     u1610:
  1466  04BE                     l2230:
  1467                           
  1468                           ;main.c: 121:        if(flag == -1){
  1469  04BE  0A58               	incf	main@flag,w
  1470  04BF  1D03               	skipz
  1471  04C0  2CC5               	goto	u1621
  1472  04C1  0A59               	incf	main@flag+1,w
  1473  04C2  1D03               	btfss	3,2
  1474  04C3  2CC5               	goto	u1621
  1475  04C4  2CC6               	goto	u1620
  1476  04C5                     u1621:
  1477  04C5  2CD1               	goto	l2234
  1478  04C6                     u1620:
  1479  04C6                     l2232:
  1480                           
  1481                           ;main.c: 122:             flag = telaGravarEEPROM();
  1482  04C6  120A  118A  2514  120A  118A  	fcall	_telaGravarEEPROM
  1483  04CB  087B               	movf	?_telaGravarEEPROM+1,w
  1484  04CC  1283               	bcf	3,5	;RP0=0, select bank0
  1485  04CD  1303               	bcf	3,6	;RP1=0, select bank0
  1486  04CE  00D9               	movwf	main@flag+1
  1487  04CF  087A               	movf	?_telaGravarEEPROM,w
  1488  04D0  00D8               	movwf	main@flag
  1489  04D1                     l2234:
  1490                           
  1491                           ;main.c: 125:         if(flag == 0){
  1492  04D1  0858               	movf	main@flag,w
  1493  04D2  0459               	iorwf	main@flag+1,w
  1494  04D3  1D03               	btfss	3,2
  1495  04D4  2CD6               	goto	u1631
  1496  04D5  2CD7               	goto	u1630
  1497  04D6                     u1631:
  1498  04D6  2CE3               	goto	l2238
  1499  04D7                     u1630:
  1500  04D7                     l2236:
  1501                           
  1502                           ;main.c: 126:             flag = telaInicio();
  1503  04D7  120A  118A  21D2  120A  118A  	fcall	_telaInicio
  1504  04DC  1283               	bcf	3,5	;RP0=0, select bank0
  1505  04DD  1303               	bcf	3,6	;RP1=0, select bank0
  1506  04DE  0832               	movf	?_telaInicio+1,w
  1507  04DF  00D9               	movwf	main@flag+1
  1508  04E0  0831               	movf	?_telaInicio,w
  1509  04E1  00D8               	movwf	main@flag
  1510                           
  1511                           ;main.c: 127:         }
  1512  04E2  2CB4               	goto	l157
  1513  04E3                     l2238:
  1514  04E3  3002               	movlw	2
  1515  04E4  0658               	xorwf	main@flag,w
  1516  04E5  0459               	iorwf	main@flag+1,w
  1517  04E6  1D03               	btfss	3,2
  1518  04E7  2CE9               	goto	u1641
  1519  04E8  2CEA               	goto	u1640
  1520  04E9                     u1641:
  1521  04E9  2CF9               	goto	l2246
  1522  04EA                     u1640:
  1523  04EA                     l2240:
  1524                           
  1525                           ;main.c: 129:             telaSetPoint();
  1526  04EA  120A  118A  233D  120A  118A  	fcall	_telaSetPoint
  1527  04EF                     l2242:
  1528                           
  1529                           ;main.c: 130:             flag = 0;
  1530  04EF  1283               	bcf	3,5	;RP0=0, select bank0
  1531  04F0  1303               	bcf	3,6	;RP1=0, select bank0
  1532  04F1  01D8               	clrf	main@flag
  1533  04F2  01D9               	clrf	main@flag+1
  1534  04F3                     l2244:
  1535                           
  1536                           ;main.c: 131:             armazenarSet();
  1537  04F3  120A  158A  261E  120A  118A  	fcall	_armazenarSet
  1538                           
  1539                           ;main.c: 132:         }
  1540  04F8  2CB4               	goto	l157
  1541  04F9                     l2246:
  1542  04F9  0358               	decf	main@flag,w
  1543  04FA  0459               	iorwf	main@flag+1,w
  1544  04FB  1D03               	btfss	3,2
  1545  04FC  2CFE               	goto	u1651
  1546  04FD  2CFF               	goto	u1650
  1547  04FE                     u1651:
  1548  04FE  2D10               	goto	l164
  1549  04FF                     u1650:
  1550  04FF                     l2248:
  1551                           
  1552                           ;main.c: 134:             armazenarSet();
  1553  04FF  120A  158A  261E  120A  118A  	fcall	_armazenarSet
  1554  0504                     l2250:
  1555                           
  1556                           ;main.c: 135:             flag = telaControlador();
  1557  0504  120A  118A  2277  120A  118A  	fcall	_telaControlador
  1558  0509  1283               	bcf	3,5	;RP0=0, select bank0
  1559  050A  1303               	bcf	3,6	;RP1=0, select bank0
  1560  050B  083E               	movf	?_telaControlador+1,w
  1561  050C  00D9               	movwf	main@flag+1
  1562  050D  083D               	movf	?_telaControlador,w
  1563  050E  00D8               	movwf	main@flag
  1564  050F  2CB4               	goto	l157
  1565  0510                     l164:
  1566  0510  2CB4               	goto	l157
  1567  0511  120A  118A  2800   	ljmp	start
  1568  0514                     __end_of_main:
  1569                           
  1570                           	psect	text1
  1571  033D                     __ptext1:	
  1572 ;; *************** function _telaSetPoint *****************
  1573 ;; Defined at:
  1574 ;;		line 76 in file "./function.h"
  1575 ;; Parameters:    Size  Location     Type
  1576 ;;		None
  1577 ;; Auto vars:     Size  Location     Type
  1578 ;;  contU           2    4[BANK0 ] int 
  1579 ;;  contD           2    2[BANK0 ] int 
  1580 ;;  flag            2    0[BANK0 ] int 
  1581 ;; Return value:  Size  Location     Type
  1582 ;;                  1    wreg      void 
  1583 ;; Registers used:
  1584 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1585 ;; Tracked objects:
  1586 ;;		On entry : 0/0
  1587 ;;		On exit  : 0/0
  1588 ;;		Unchanged: 0/0
  1589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1590 ;;      Params:         0       0       0       0       0
  1591 ;;      Locals:         0       6       0       0       0
  1592 ;;      Temps:          3       0       0       0       0
  1593 ;;      Totals:         3       6       0       0       0
  1594 ;;Total ram usage:        9 bytes
  1595 ;; Hardware stack levels used: 1
  1596 ;; Hardware stack levels required when called: 4
  1597 ;; This function calls:
  1598 ;;		_alterarSetPoint
  1599 ;;		_eeprom_write
  1600 ;;		_lcd_cmd
  1601 ;;		_lcd_dat
  1602 ;;		_lcd_str
  1603 ;; This function is called by:
  1604 ;;		_main
  1605 ;; This function uses a non-reentrant model
  1606 ;;
  1607                           
  1608                           
  1609                           ;psect for function _telaSetPoint
  1610  033D                     _telaSetPoint:
  1611  033D                     l1926:	
  1612                           ;incstack = 0
  1613                           ; Regs used in _telaSetPoint: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1614                           
  1615                           
  1616                           ;./function.h: 77:     int contD = 0;
  1617  033D  1283               	bcf	3,5	;RP0=0, select bank0
  1618  033E  1303               	bcf	3,6	;RP1=0, select bank0
  1619  033F  01A2               	clrf	telaSetPoint@contD
  1620  0340  01A3               	clrf	telaSetPoint@contD+1
  1621                           
  1622                           ;./function.h: 78:     int contU = 0;
  1623  0341  01A4               	clrf	telaSetPoint@contU
  1624  0342  01A5               	clrf	telaSetPoint@contU+1
  1625                           
  1626                           ;./function.h: 79:     int flag = 0;
  1627  0343  01A0               	clrf	telaSetPoint@flag
  1628  0344  01A1               	clrf	telaSetPoint@flag+1
  1629  0345                     l1928:
  1630                           
  1631                           ;./function.h: 81:     lcd_cmd(0x01);
  1632  0345  3001               	movlw	1
  1633  0346  120A  158A  2571  120A  118A  	fcall	_lcd_cmd
  1634  034B                     l1930:
  1635                           
  1636                           ;./function.h: 82:     lcd_cmd(0x80 +1);
  1637  034B  3081               	movlw	129
  1638  034C  120A  158A  2571  120A  118A  	fcall	_lcd_cmd
  1639  0351                     l1932:
  1640                           
  1641                           ;./function.h: 83:     lcd_str("1-Incr  2-Prox");
  1642  0351  304F               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1643  0352  120A  158A  252A  120A  118A  	fcall	_lcd_str
  1644  0357                     l1934:
  1645                           
  1646                           ;./function.h: 84:     _delay((unsigned long)((200)*(4000000/4000.0)));
  1647  0357  3002               	movlw	2
  1648  0358  00FC               	movwf	??_telaSetPoint+2
  1649  0359  3004               	movlw	4
  1650  035A  00FB               	movwf	??_telaSetPoint+1
  1651  035B  30BA               	movlw	186
  1652  035C  00FA               	movwf	??_telaSetPoint
  1653  035D                     u1677:
  1654  035D  0BFA               	decfsz	??_telaSetPoint,f
  1655  035E  2B5D               	goto	u1677
  1656  035F  0BFB               	decfsz	??_telaSetPoint+1,f
  1657  0360  2B5D               	goto	u1677
  1658  0361  0BFC               	decfsz	??_telaSetPoint+2,f
  1659  0362  2B5D               	goto	u1677
  1660  0363  0000               	nop
  1661                           
  1662                           ;./function.h: 86:     while(flag == 0){
  1663  0364  2BB8               	goto	l1964
  1664  0365                     l1936:
  1665                           
  1666                           ;./function.h: 87:         lcd_cmd(0xC0 +2);
  1667  0365  30C2               	movlw	194
  1668  0366  120A  158A  2571  120A  118A  	fcall	_lcd_cmd
  1669  036B                     l1938:
  1670                           
  1671                           ;./function.h: 88:         lcd_str("SetPoint: ");
  1672  036B  3086               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1673  036C  120A  158A  252A  120A  118A  	fcall	_lcd_str
  1674  0371                     l1940:
  1675                           
  1676                           ;./function.h: 89:         lcd_dat(contD + 0x30);
  1677  0371  1283               	bcf	3,5	;RP0=0, select bank0
  1678  0372  1303               	bcf	3,6	;RP1=0, select bank0
  1679  0373  0822               	movf	telaSetPoint@contD,w
  1680  0374  3E30               	addlw	48
  1681  0375  120A  158A  2597  120A  118A  	fcall	_lcd_dat
  1682  037A                     l1942:
  1683                           
  1684                           ;./function.h: 90:         lcd_dat(contU + 0x30);
  1685  037A  1283               	bcf	3,5	;RP0=0, select bank0
  1686  037B  1303               	bcf	3,6	;RP1=0, select bank0
  1687  037C  0824               	movf	telaSetPoint@contU,w
  1688  037D  3E30               	addlw	48
  1689  037E  120A  158A  2597  120A  118A  	fcall	_lcd_dat
  1690  0383                     l1944:
  1691                           
  1692                           ;./function.h: 91:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1693  0383  300D               	movlw	13
  1694  0384  00FB               	movwf	??_telaSetPoint+1
  1695  0385  30FB               	movlw	251
  1696  0386  00FA               	movwf	??_telaSetPoint
  1697  0387                     u1687:
  1698  0387  0BFA               	decfsz	??_telaSetPoint,f
  1699  0388  2B87               	goto	u1687
  1700  0389  0BFB               	decfsz	??_telaSetPoint+1,f
  1701  038A  2B87               	goto	u1687
  1702  038B  2B8C               	nop2
  1703  038C                     l1946:
  1704                           
  1705                           ;./function.h: 92:         if(PORTBbits.RB1 == 0) contU++;
  1706  038C  1283               	bcf	3,5	;RP0=0, select bank0
  1707  038D  1303               	bcf	3,6	;RP1=0, select bank0
  1708  038E  1886               	btfsc	6,1	;volatile
  1709  038F  2B91               	goto	u1391
  1710  0390  2B92               	goto	u1390
  1711  0391                     u1391:
  1712  0391  2B98               	goto	l1950
  1713  0392                     u1390:
  1714  0392                     l1948:
  1715  0392  3001               	movlw	1
  1716  0393  07A4               	addwf	telaSetPoint@contU,f
  1717  0394  1803               	skipnc
  1718  0395  0AA5               	incf	telaSetPoint@contU+1,f
  1719  0396  3000               	movlw	0
  1720  0397  07A5               	addwf	telaSetPoint@contU+1,f
  1721  0398                     l1950:
  1722                           
  1723                           ;./function.h: 93:         if(contU == 10){
  1724  0398  300A               	movlw	10
  1725  0399  0624               	xorwf	telaSetPoint@contU,w
  1726  039A  0425               	iorwf	telaSetPoint@contU+1,w
  1727  039B  1D03               	btfss	3,2
  1728  039C  2B9E               	goto	u1401
  1729  039D  2B9F               	goto	u1400
  1730  039E                     u1401:
  1731  039E  2BB0               	goto	l1960
  1732  039F                     u1400:
  1733  039F                     l1952:
  1734                           
  1735                           ;./function.h: 94:             contU = 0;
  1736  039F  01A4               	clrf	telaSetPoint@contU
  1737  03A0  01A5               	clrf	telaSetPoint@contU+1
  1738  03A1                     l1954:
  1739                           
  1740                           ;./function.h: 95:             contD++;
  1741  03A1  3001               	movlw	1
  1742  03A2  07A2               	addwf	telaSetPoint@contD,f
  1743  03A3  1803               	skipnc
  1744  03A4  0AA3               	incf	telaSetPoint@contD+1,f
  1745  03A5  3000               	movlw	0
  1746  03A6  07A3               	addwf	telaSetPoint@contD+1,f
  1747  03A7                     l1956:
  1748                           
  1749                           ;./function.h: 96:             if(contD == 10) contD = 0;
  1750  03A7  300A               	movlw	10
  1751  03A8  0622               	xorwf	telaSetPoint@contD,w
  1752  03A9  0423               	iorwf	telaSetPoint@contD+1,w
  1753  03AA  1D03               	btfss	3,2
  1754  03AB  2BAD               	goto	u1411
  1755  03AC  2BAE               	goto	u1410
  1756  03AD                     u1411:
  1757  03AD  2BB0               	goto	l1960
  1758  03AE                     u1410:
  1759  03AE                     l1958:
  1760  03AE  01A2               	clrf	telaSetPoint@contD
  1761  03AF  01A3               	clrf	telaSetPoint@contD+1
  1762  03B0                     l1960:
  1763                           
  1764                           ;./function.h: 98:         if(PORTBbits.RB2 == 0) flag = 2;
  1765  03B0  1906               	btfsc	6,2	;volatile
  1766  03B1  2BB3               	goto	u1421
  1767  03B2  2BB4               	goto	u1420
  1768  03B3                     u1421:
  1769  03B3  2BB8               	goto	l1964
  1770  03B4                     u1420:
  1771  03B4                     l1962:
  1772  03B4  3002               	movlw	2
  1773  03B5  00A0               	movwf	telaSetPoint@flag
  1774  03B6  3000               	movlw	0
  1775  03B7  00A1               	movwf	telaSetPoint@flag+1
  1776  03B8                     l1964:
  1777                           
  1778                           ;./function.h: 86:     while(flag == 0){
  1779  03B8  1283               	bcf	3,5	;RP0=0, select bank0
  1780  03B9  1303               	bcf	3,6	;RP1=0, select bank0
  1781  03BA  0820               	movf	telaSetPoint@flag,w
  1782  03BB  0421               	iorwf	telaSetPoint@flag+1,w
  1783  03BC  1903               	btfsc	3,2
  1784  03BD  2BBF               	goto	u1431
  1785  03BE  2BC0               	goto	u1430
  1786  03BF                     u1431:
  1787  03BF  2B65               	goto	l1936
  1788  03C0                     u1430:
  1789  03C0                     l1966:
  1790                           
  1791                           ;./function.h: 100:     flag = 0;
  1792  03C0  01A0               	clrf	telaSetPoint@flag
  1793  03C1  01A1               	clrf	telaSetPoint@flag+1
  1794  03C2                     l1968:
  1795                           
  1796                           ;./function.h: 101:     lcd_cmd(0x01);
  1797  03C2  3001               	movlw	1
  1798  03C3  120A  158A  2571  120A  118A  	fcall	_lcd_cmd
  1799  03C8                     l1970:
  1800                           
  1801                           ;./function.h: 102:     lcd_cmd(0x80 +1);
  1802  03C8  3081               	movlw	129
  1803  03C9  120A  158A  2571  120A  118A  	fcall	_lcd_cmd
  1804  03CE                     l1972:
  1805                           
  1806                           ;./function.h: 103:     lcd_str("1-Salvar");
  1807  03CE  30A3               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1808  03CF  120A  158A  252A  120A  118A  	fcall	_lcd_str
  1809  03D4                     l1974:
  1810                           
  1811                           ;./function.h: 104:     lcd_cmd(0xC0 +1);
  1812  03D4  30C1               	movlw	193
  1813  03D5  120A  158A  2571  120A  118A  	fcall	_lcd_cmd
  1814  03DA                     l1976:
  1815                           
  1816                           ;./function.h: 105:     lcd_str("2-Inicio");
  1817  03DA  3091               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1818  03DB  120A  158A  252A  120A  118A  	fcall	_lcd_str
  1819  03E0                     l1978:
  1820                           
  1821                           ;./function.h: 106:     _delay((unsigned long)((500)*(4000000/4000.0)));
  1822  03E0  3003               	movlw	3
  1823  03E1  00FC               	movwf	??_telaSetPoint+2
  1824  03E2  308A               	movlw	138
  1825  03E3  00FB               	movwf	??_telaSetPoint+1
  1826  03E4  3055               	movlw	85
  1827  03E5  00FA               	movwf	??_telaSetPoint
  1828  03E6                     u1697:
  1829  03E6  0BFA               	decfsz	??_telaSetPoint,f
  1830  03E7  2BE6               	goto	u1697
  1831  03E8  0BFB               	decfsz	??_telaSetPoint+1,f
  1832  03E9  2BE6               	goto	u1697
  1833  03EA  0BFC               	decfsz	??_telaSetPoint+2,f
  1834  03EB  2BE6               	goto	u1697
  1835  03EC  2BED               	nop2
  1836                           
  1837                           ;./function.h: 107:     while(flag == 0){
  1838  03ED  2C1D               	goto	l1990
  1839  03EE                     l108:
  1840                           
  1841                           ;./function.h: 108:         if(RB1 == 0){
  1842  03EE  1886               	btfsc	6,1	;volatile
  1843  03EF  2BF1               	goto	u1441
  1844  03F0  2BF2               	goto	u1440
  1845  03F1                     u1441:
  1846  03F1  2C15               	goto	l1986
  1847  03F2                     u1440:
  1848  03F2                     l1980:
  1849                           
  1850                           ;./function.h: 109:             eeprom_write(0x0A, (contU+0x30));
  1851  03F2  0824               	movf	telaSetPoint@contU,w
  1852  03F3  3E30               	addlw	48
  1853  03F4  00FA               	movwf	??_telaSetPoint
  1854  03F5  087A               	movf	??_telaSetPoint,w
  1855  03F6  00F0               	movwf	eeprom_write@value
  1856  03F7  300A               	movlw	10
  1857  03F8  120A  158A  25BD  120A  118A  	fcall	_eeprom_write
  1858                           
  1859                           ;./function.h: 110:             eeprom_write(0x2A, (contD+0x30));
  1860  03FD  1283               	bcf	3,5	;RP0=0, select bank0
  1861  03FE  1303               	bcf	3,6	;RP1=0, select bank0
  1862  03FF  0822               	movf	telaSetPoint@contD,w
  1863  0400  3E30               	addlw	48
  1864  0401  00FA               	movwf	??_telaSetPoint
  1865  0402  087A               	movf	??_telaSetPoint,w
  1866  0403  00F0               	movwf	eeprom_write@value
  1867  0404  302A               	movlw	42
  1868  0405  120A  158A  25BD  120A  118A  	fcall	_eeprom_write
  1869  040A                     l1982:
  1870                           
  1871                           ;./function.h: 111:             alterarSetPoint();
  1872  040A  120A  158A  268C  120A  118A  	fcall	_alterarSetPoint
  1873  040F                     l1984:
  1874                           
  1875                           ;./function.h: 112:             flag = 1;
  1876  040F  3001               	movlw	1
  1877  0410  1283               	bcf	3,5	;RP0=0, select bank0
  1878  0411  1303               	bcf	3,6	;RP1=0, select bank0
  1879  0412  00A0               	movwf	telaSetPoint@flag
  1880  0413  3000               	movlw	0
  1881  0414  00A1               	movwf	telaSetPoint@flag+1
  1882  0415                     l1986:
  1883                           
  1884                           ;./function.h: 114:         if(RB2 == 0){
  1885  0415  1906               	btfsc	6,2	;volatile
  1886  0416  2C18               	goto	u1451
  1887  0417  2C19               	goto	u1450
  1888  0418                     u1451:
  1889  0418  2C1D               	goto	l1990
  1890  0419                     u1450:
  1891  0419                     l1988:
  1892                           
  1893                           ;./function.h: 115:             flag = 1;
  1894  0419  3001               	movlw	1
  1895  041A  00A0               	movwf	telaSetPoint@flag
  1896  041B  3000               	movlw	0
  1897  041C  00A1               	movwf	telaSetPoint@flag+1
  1898  041D                     l1990:
  1899                           
  1900                           ;./function.h: 107:     while(flag == 0){
  1901  041D  1283               	bcf	3,5	;RP0=0, select bank0
  1902  041E  1303               	bcf	3,6	;RP1=0, select bank0
  1903  041F  0820               	movf	telaSetPoint@flag,w
  1904  0420  0421               	iorwf	telaSetPoint@flag+1,w
  1905  0421  1903               	btfsc	3,2
  1906  0422  2C24               	goto	u1461
  1907  0423  2C25               	goto	u1460
  1908  0424                     u1461:
  1909  0424  2BEE               	goto	l108
  1910  0425                     u1460:
  1911  0425                     l112:
  1912  0425  0008               	return
  1913  0426                     __end_of_telaSetPoint:
  1914                           
  1915                           	psect	text2
  1916  01D2                     __ptext2:	
  1917 ;; *************** function _telaInicio *****************
  1918 ;; Defined at:
  1919 ;;		line 37 in file "./function.h"
  1920 ;; Parameters:    Size  Location     Type
  1921 ;;		None
  1922 ;; Auto vars:     Size  Location     Type
  1923 ;;  flag            2   22[BANK0 ] int 
  1924 ;; Return value:  Size  Location     Type
  1925 ;;                  2   17[BANK0 ] int 
  1926 ;; Registers used:
  1927 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1928 ;; Tracked objects:
  1929 ;;		On entry : 0/0
  1930 ;;		On exit  : 0/0
  1931 ;;		Unchanged: 0/0
  1932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1933 ;;      Params:         0       2       0       0       0
  1934 ;;      Locals:         0       2       0       0       0
  1935 ;;      Temps:          0       3       0       0       0
  1936 ;;      Totals:         0       7       0       0       0
  1937 ;;Total ram usage:        7 bytes
  1938 ;; Hardware stack levels used: 1
  1939 ;; Hardware stack levels required when called: 4
  1940 ;; This function calls:
  1941 ;;		_armazenarSet
  1942 ;;		_imprimirTemp
  1943 ;;		_lcd_cmd
  1944 ;;		_lcd_dat
  1945 ;;		_lcd_str
  1946 ;;		_verificarTemperatura
  1947 ;; This function is called by:
  1948 ;;		_main
  1949 ;; This function uses a non-reentrant model
  1950 ;;
  1951                           
  1952                           
  1953                           ;psect for function _telaInicio
  1954  01D2                     _telaInicio:
  1955  01D2                     l1880:	
  1956                           ;incstack = 0
  1957                           ; Regs used in _telaInicio: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1958                           
  1959                           
  1960                           ;./function.h: 38:     int flag = 0;
  1961  01D2  1283               	bcf	3,5	;RP0=0, select bank0
  1962  01D3  1303               	bcf	3,6	;RP1=0, select bank0
  1963  01D4  01B6               	clrf	telaInicio@flag
  1964  01D5  01B7               	clrf	telaInicio@flag+1
  1965  01D6                     l1882:
  1966                           
  1967                           ;./function.h: 39:     armazenarSet();
  1968  01D6  120A  158A  261E  120A  118A  	fcall	_armazenarSet
  1969  01DB                     l1884:
  1970                           
  1971                           ;./function.h: 41:     lcd_cmd(0x01);
  1972  01DB  3001               	movlw	1
  1973  01DC  120A  158A  2571  120A  118A  	fcall	_lcd_cmd
  1974  01E1                     l1886:
  1975                           
  1976                           ;./function.h: 42:     lcd_cmd(0x80);
  1977  01E1  3080               	movlw	128
  1978  01E2  120A  158A  2571  120A  118A  	fcall	_lcd_cmd
  1979  01E7                     l1888:
  1980                           
  1981                           ;./function.h: 43:     lcd_dat(dezena + 0x30);
  1982  01E7  1283               	bcf	3,5	;RP0=0, select bank0
  1983  01E8  1303               	bcf	3,6	;RP1=0, select bank0
  1984  01E9  0868               	movf	_dezena,w
  1985  01EA  3E30               	addlw	48
  1986  01EB  120A  158A  2597  120A  118A  	fcall	_lcd_dat
  1987  01F0                     l1890:
  1988                           
  1989                           ;./function.h: 44:     lcd_dat(unidade + 0x30);
  1990  01F0  1283               	bcf	3,5	;RP0=0, select bank0
  1991  01F1  1303               	bcf	3,6	;RP1=0, select bank0
  1992  01F2  0866               	movf	_unidade,w
  1993  01F3  3E30               	addlw	48
  1994  01F4  120A  158A  2597  120A  118A  	fcall	_lcd_dat
  1995  01F9                     l1892:
  1996                           
  1997                           ;./function.h: 45:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  1998  01F9  3006               	movlw	6
  1999  01FA  1283               	bcf	3,5	;RP0=0, select bank0
  2000  01FB  1303               	bcf	3,6	;RP1=0, select bank0
  2001  01FC  00B5               	movwf	??_telaInicio+2
  2002  01FD  3013               	movlw	19
  2003  01FE  00B4               	movwf	??_telaInicio+1
  2004  01FF  30AD               	movlw	173
  2005  0200  00B3               	movwf	??_telaInicio
  2006  0201                     u1707:
  2007  0201  0BB3               	decfsz	??_telaInicio,f
  2008  0202  2A01               	goto	u1707
  2009  0203  0BB4               	decfsz	??_telaInicio+1,f
  2010  0204  2A01               	goto	u1707
  2011  0205  0BB5               	decfsz	??_telaInicio+2,f
  2012  0206  2A01               	goto	u1707
  2013  0207                     l1894:
  2014                           
  2015                           ;./function.h: 47:     lcd_cmd(0x01);
  2016  0207  3001               	movlw	1
  2017  0208  120A  158A  2571  120A  118A  	fcall	_lcd_cmd
  2018  020D                     l1896:
  2019                           
  2020                           ;./function.h: 48:     lcd_cmd(0x80 +1);
  2021  020D  3081               	movlw	129
  2022  020E  120A  158A  2571  120A  118A  	fcall	_lcd_cmd
  2023  0213                     l1898:
  2024                           
  2025                           ;./function.h: 49:     lcd_str("Modo Local ...");
  2026  0213  3022               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2027  0214  120A  158A  252A  120A  118A  	fcall	_lcd_str
  2028  0219                     l1900:
  2029                           
  2030                           ;./function.h: 50:     _delay((unsigned long)((500)*(4000000/4000.0)));
  2031  0219  3003               	movlw	3
  2032  021A  1283               	bcf	3,5	;RP0=0, select bank0
  2033  021B  1303               	bcf	3,6	;RP1=0, select bank0
  2034  021C  00B5               	movwf	??_telaInicio+2
  2035  021D  308A               	movlw	138
  2036  021E  00B4               	movwf	??_telaInicio+1
  2037  021F  3055               	movlw	85
  2038  0220  00B3               	movwf	??_telaInicio
  2039  0221                     u1717:
  2040  0221  0BB3               	decfsz	??_telaInicio,f
  2041  0222  2A21               	goto	u1717
  2042  0223  0BB4               	decfsz	??_telaInicio+1,f
  2043  0224  2A21               	goto	u1717
  2044  0225  0BB5               	decfsz	??_telaInicio+2,f
  2045  0226  2A21               	goto	u1717
  2046  0227                     l1902:
  2047                           
  2048                           ;./function.h: 52:     lcd_cmd(0x01);
  2049  0227  3001               	movlw	1
  2050  0228  120A  158A  2571  120A  118A  	fcall	_lcd_cmd
  2051                           
  2052                           ;./function.h: 53:     while(flag == 0){
  2053  022D  2A6A               	goto	l1920
  2054  022E                     l1904:
  2055                           
  2056                           ;./function.h: 54:     imprimirTemp(verificarTemperatura(), 1);
  2057  022E  120A  158A  25EA  120A  118A  	fcall	_verificarTemperatura
  2058  0233  0877               	movf	?_verificarTemperatura+1,w
  2059  0234  1283               	bcf	3,5	;RP0=0, select bank0
  2060  0235  1303               	bcf	3,6	;RP1=0, select bank0
  2061  0236  00A5               	movwf	imprimirTemp@temp+1
  2062  0237  0876               	movf	?_verificarTemperatura,w
  2063  0238  00A4               	movwf	imprimirTemp@temp
  2064  0239  3001               	movlw	1
  2065  023A  00A6               	movwf	imprimirTemp@linha
  2066  023B  3000               	movlw	0
  2067  023C  00A7               	movwf	imprimirTemp@linha+1
  2068  023D  120A  118A  20D1  120A  118A  	fcall	_imprimirTemp
  2069  0242                     l1906:
  2070                           
  2071                           ;./function.h: 55:     lcd_cmd(0xC0 +1);
  2072  0242  30C1               	movlw	193
  2073  0243  120A  158A  2571  120A  118A  	fcall	_lcd_cmd
  2074  0248                     l1908:
  2075                           
  2076                           ;./function.h: 56:     lcd_str("1-Start  2-Set");
  2077  0248  3040               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2078  0249  120A  158A  252A  120A  118A  	fcall	_lcd_str
  2079  024E                     l1910:
  2080                           
  2081                           ;./function.h: 57:     _delay((unsigned long)((10)*(4000000/4000.0)));
  2082  024E  300D               	movlw	13
  2083  024F  1283               	bcf	3,5	;RP0=0, select bank0
  2084  0250  1303               	bcf	3,6	;RP1=0, select bank0
  2085  0251  00B4               	movwf	??_telaInicio+1
  2086  0252  30FB               	movlw	251
  2087  0253  00B3               	movwf	??_telaInicio
  2088  0254                     u1727:
  2089  0254  0BB3               	decfsz	??_telaInicio,f
  2090  0255  2A54               	goto	u1727
  2091  0256  0BB4               	decfsz	??_telaInicio+1,f
  2092  0257  2A54               	goto	u1727
  2093  0258                     l1912:
  2094                           
  2095                           ;./function.h: 58:     if(PORTBbits.RB1 == 0) flag = 1;
  2096  0258  1283               	bcf	3,5	;RP0=0, select bank0
  2097  0259  1303               	bcf	3,6	;RP1=0, select bank0
  2098  025A  1886               	btfsc	6,1	;volatile
  2099  025B  2A5D               	goto	u1361
  2100  025C  2A5E               	goto	u1360
  2101  025D                     u1361:
  2102  025D  2A62               	goto	l1916
  2103  025E                     u1360:
  2104  025E                     l1914:
  2105  025E  3001               	movlw	1
  2106  025F  00B6               	movwf	telaInicio@flag
  2107  0260  3000               	movlw	0
  2108  0261  00B7               	movwf	telaInicio@flag+1
  2109  0262                     l1916:
  2110                           
  2111                           ;./function.h: 59:     if(PORTBbits.RB2 == 0) flag = 2;
  2112  0262  1906               	btfsc	6,2	;volatile
  2113  0263  2A65               	goto	u1371
  2114  0264  2A66               	goto	u1370
  2115  0265                     u1371:
  2116  0265  2A6A               	goto	l1920
  2117  0266                     u1370:
  2118  0266                     l1918:
  2119  0266  3002               	movlw	2
  2120  0267  00B6               	movwf	telaInicio@flag
  2121  0268  3000               	movlw	0
  2122  0269  00B7               	movwf	telaInicio@flag+1
  2123  026A                     l1920:
  2124                           
  2125                           ;./function.h: 53:     while(flag == 0){
  2126  026A  1283               	bcf	3,5	;RP0=0, select bank0
  2127  026B  1303               	bcf	3,6	;RP1=0, select bank0
  2128  026C  0836               	movf	telaInicio@flag,w
  2129  026D  0437               	iorwf	telaInicio@flag+1,w
  2130  026E  1903               	btfsc	3,2
  2131  026F  2A71               	goto	u1381
  2132  0270  2A72               	goto	u1380
  2133  0271                     u1381:
  2134  0271  2A2E               	goto	l1904
  2135  0272                     u1380:
  2136  0272                     l1922:
  2137                           
  2138                           ;./function.h: 61:     return flag;
  2139  0272  0837               	movf	telaInicio@flag+1,w
  2140  0273  00B2               	movwf	?_telaInicio+1
  2141  0274  0836               	movf	telaInicio@flag,w
  2142  0275  00B1               	movwf	?_telaInicio
  2143  0276                     l94:
  2144  0276  0008               	return
  2145  0277                     __end_of_telaInicio:
  2146                           
  2147                           	psect	text3
  2148  00D1                     __ptext3:	
  2149 ;; *************** function _imprimirTemp *****************
  2150 ;; Defined at:
  2151 ;;		line 18 in file "./function.h"
  2152 ;; Parameters:    Size  Location     Type
  2153 ;;  temp            2    4[BANK0 ] int 
  2154 ;;  linha           2    6[BANK0 ] int 
  2155 ;; Auto vars:     Size  Location     Type
  2156 ;;  str             6   11[BANK0 ] unsigned char [6]
  2157 ;; Return value:  Size  Location     Type
  2158 ;;                  1    wreg      void 
  2159 ;; Registers used:
  2160 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2161 ;; Tracked objects:
  2162 ;;		On entry : 0/0
  2163 ;;		On exit  : 0/0
  2164 ;;		Unchanged: 0/0
  2165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2166 ;;      Params:         0       4       0       0       0
  2167 ;;      Locals:         0       6       0       0       0
  2168 ;;      Temps:          0       3       0       0       0
  2169 ;;      Totals:         0      13       0       0       0
  2170 ;;Total ram usage:       13 bytes
  2171 ;; Hardware stack levels used: 1
  2172 ;; Hardware stack levels required when called: 3
  2173 ;; This function calls:
  2174 ;;		_itoa
  2175 ;;		_lcd_cmd
  2176 ;;		_lcd_dat
  2177 ;;		_lcd_str
  2178 ;; This function is called by:
  2179 ;;		_telaInicio
  2180 ;; This function uses a non-reentrant model
  2181 ;;
  2182                           
  2183                           
  2184                           ;psect for function _imprimirTemp
  2185  00D1                     _imprimirTemp:
  2186  00D1                     l1778:	
  2187                           ;incstack = 0
  2188                           ; Regs used in _imprimirTemp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2189                           
  2190                           
  2191                           ;./function.h: 19:     char str[6];;./function.h: 20:     itoa(temp,str);
  2192  00D1  1283               	bcf	3,5	;RP0=0, select bank0
  2193  00D2  1303               	bcf	3,6	;RP1=0, select bank0
  2194  00D3  0825               	movf	imprimirTemp@temp+1,w
  2195  00D4  00A1               	movwf	itoa@val+1
  2196  00D5  0824               	movf	imprimirTemp@temp,w
  2197  00D6  00A0               	movwf	itoa@val
  2198  00D7  302B               	movlw	(low (imprimirTemp@str| 0))& (0+255)
  2199  00D8  00A8               	movwf	??_imprimirTemp
  2200  00D9  0828               	movf	??_imprimirTemp,w
  2201  00DA  00A2               	movwf	itoa@str
  2202  00DB  120A  118A  212E  120A  118A  	fcall	_itoa
  2203  00E0                     l1780:
  2204                           
  2205                           ;./function.h: 21:     if(linha)lcd_cmd(0x80 + 2);
  2206  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  2207  00E1  1303               	bcf	3,6	;RP1=0, select bank0
  2208  00E2  0826               	movf	imprimirTemp@linha,w
  2209  00E3  0427               	iorwf	imprimirTemp@linha+1,w
  2210  00E4  1903               	btfsc	3,2
  2211  00E5  28E7               	goto	u1181
  2212  00E6  28E8               	goto	u1180
  2213  00E7                     u1181:
  2214  00E7  28EF               	goto	l1784
  2215  00E8                     u1180:
  2216  00E8                     l1782:
  2217  00E8  3082               	movlw	130
  2218  00E9  120A  158A  2571  120A  118A  	fcall	_lcd_cmd
  2219  00EE  28F5               	goto	l1786
  2220  00EF                     l1784:
  2221  00EF  30C2               	movlw	194
  2222  00F0  120A  158A  2571  120A  118A  	fcall	_lcd_cmd
  2223  00F5                     l1786:
  2224                           
  2225                           ;./function.h: 23:     lcd_str("Temp: ");
  2226  00F5  30AC               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2227  00F6  120A  158A  252A  120A  118A  	fcall	_lcd_str
  2228  00FB                     l1788:
  2229                           
  2230                           ;./function.h: 24:     lcd_dat(str[2]);
  2231  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  2232  00FC  1303               	bcf	3,6	;RP1=0, select bank0
  2233  00FD  082D               	movf	imprimirTemp@str+2,w
  2234  00FE  120A  158A  2597  120A  118A  	fcall	_lcd_dat
  2235  0103                     l1790:
  2236                           
  2237                           ;./function.h: 25:     lcd_dat(str[3]);
  2238  0103  1283               	bcf	3,5	;RP0=0, select bank0
  2239  0104  1303               	bcf	3,6	;RP1=0, select bank0
  2240  0105  082E               	movf	imprimirTemp@str+3,w
  2241  0106  120A  158A  2597  120A  118A  	fcall	_lcd_dat
  2242  010B                     l1792:
  2243                           
  2244                           ;./function.h: 26:     lcd_dat(',');
  2245  010B  302C               	movlw	44
  2246  010C  120A  158A  2597  120A  118A  	fcall	_lcd_dat
  2247  0111                     l1794:
  2248                           
  2249                           ;./function.h: 27:     lcd_dat(str[4]);
  2250  0111  1283               	bcf	3,5	;RP0=0, select bank0
  2251  0112  1303               	bcf	3,6	;RP1=0, select bank0
  2252  0113  082F               	movf	imprimirTemp@str+4,w
  2253  0114  120A  158A  2597  120A  118A  	fcall	_lcd_dat
  2254  0119                     l1796:
  2255                           
  2256                           ;./function.h: 28:     lcd_dat('C');
  2257  0119  3043               	movlw	67
  2258  011A  120A  158A  2597  120A  118A  	fcall	_lcd_dat
  2259  011F                     l1798:
  2260                           
  2261                           ;./function.h: 29:     _delay((unsigned long)((500)*(4000000/4000.0)));
  2262  011F  3003               	movlw	3
  2263  0120  1283               	bcf	3,5	;RP0=0, select bank0
  2264  0121  1303               	bcf	3,6	;RP1=0, select bank0
  2265  0122  00AA               	movwf	??_imprimirTemp+2
  2266  0123  308A               	movlw	138
  2267  0124  00A9               	movwf	??_imprimirTemp+1
  2268  0125  3055               	movlw	85
  2269  0126  00A8               	movwf	??_imprimirTemp
  2270  0127                     u1737:
  2271  0127  0BA8               	decfsz	??_imprimirTemp,f
  2272  0128  2927               	goto	u1737
  2273  0129  0BA9               	decfsz	??_imprimirTemp+1,f
  2274  012A  2927               	goto	u1737
  2275  012B  0BAA               	decfsz	??_imprimirTemp+2,f
  2276  012C  2927               	goto	u1737
  2277  012D                     l83:
  2278  012D  0008               	return
  2279  012E                     __end_of_imprimirTemp:
  2280                           
  2281                           	psect	text4
  2282  0514                     __ptext4:	
  2283 ;; *************** function _telaGravarEEPROM *****************
  2284 ;; Defined at:
  2285 ;;		line 121 in file "./function.h"
  2286 ;; Parameters:    Size  Location     Type
  2287 ;;		None
  2288 ;; Auto vars:     Size  Location     Type
  2289 ;;  flag            2    7[BANK0 ] int 
  2290 ;;  contU           2    5[BANK0 ] int 
  2291 ;;  contD           2    3[BANK0 ] int 
  2292 ;; Return value:  Size  Location     Type
  2293 ;;                  2   10[COMMON] int 
  2294 ;; Registers used:
  2295 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2296 ;; Tracked objects:
  2297 ;;		On entry : 0/0
  2298 ;;		On exit  : 0/0
  2299 ;;		Unchanged: 0/0
  2300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2301 ;;      Params:         2       0       0       0       0
  2302 ;;      Locals:         0       6       0       0       0
  2303 ;;      Temps:          0       3       0       0       0
  2304 ;;      Totals:         2       9       0       0       0
  2305 ;;Total ram usage:       11 bytes
  2306 ;; Hardware stack levels used: 1
  2307 ;; Hardware stack levels required when called: 4
  2308 ;; This function calls:
  2309 ;;		_alterarSetPoint
  2310 ;;		_eeprom_write
  2311 ;;		_lcd_cmd
  2312 ;;		_lcd_dat
  2313 ;;		_lcd_str
  2314 ;; This function is called by:
  2315 ;;		_main
  2316 ;; This function uses a non-reentrant model
  2317 ;;
  2318                           
  2319                           
  2320                           ;psect for function _telaGravarEEPROM
  2321  0514                     _telaGravarEEPROM:
  2322  0514                     l1992:	
  2323                           ;incstack = 0
  2324                           ; Regs used in _telaGravarEEPROM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2325                           
  2326                           
  2327                           ;./function.h: 122:     int contD = 0;
  2328  0514  1283               	bcf	3,5	;RP0=0, select bank0
  2329  0515  1303               	bcf	3,6	;RP1=0, select bank0
  2330  0516  01A3               	clrf	telaGravarEEPROM@contD
  2331  0517  01A4               	clrf	telaGravarEEPROM@contD+1
  2332                           
  2333                           ;./function.h: 123:     int contU = 0;
  2334  0518  01A5               	clrf	telaGravarEEPROM@contU
  2335  0519  01A6               	clrf	telaGravarEEPROM@contU+1
  2336                           
  2337                           ;./function.h: 124:     int flag = 0;
  2338  051A  01A7               	clrf	telaGravarEEPROM@flag
  2339  051B  01A8               	clrf	telaGravarEEPROM@flag+1
  2340  051C                     l1994:
  2341                           
  2342                           ;./function.h: 126:     lcd_cmd(0x01);
  2343  051C  3001               	movlw	1
  2344  051D  120A  158A  2571  120A  118A  	fcall	_lcd_cmd
  2345  0522                     l1996:
  2346                           
  2347                           ;./function.h: 127:     lcd_cmd(0x80);
  2348  0522  3080               	movlw	128
  2349  0523  120A  158A  2571  120A  118A  	fcall	_lcd_cmd
  2350  0528                     l1998:
  2351                           
  2352                           ;./function.h: 128:     lcd_str("Salvar SetPoint");
  2353  0528  3012               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2354  0529  120A  158A  252A  120A  118A  	fcall	_lcd_str
  2355  052E                     l2000:
  2356                           
  2357                           ;./function.h: 129:     lcd_cmd(0xC0);
  2358  052E  30C0               	movlw	192
  2359  052F  120A  158A  2571  120A  118A  	fcall	_lcd_cmd
  2360  0534                     l2002:
  2361                           
  2362                           ;./function.h: 130:     lcd_str("Para Iniciar");
  2363  0534  3079               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  2364  0535  120A  158A  252A  120A  118A  	fcall	_lcd_str
  2365  053A                     l2004:
  2366                           
  2367                           ;./function.h: 131:     _delay((unsigned long)((1250)*(4000000/4000.0)));
  2368  053A  3007               	movlw	7
  2369  053B  1283               	bcf	3,5	;RP0=0, select bank0
  2370  053C  1303               	bcf	3,6	;RP1=0, select bank0
  2371  053D  00A2               	movwf	??_telaGravarEEPROM+2
  2372  053E  3058               	movlw	88
  2373  053F  00A1               	movwf	??_telaGravarEEPROM+1
  2374  0540  3059               	movlw	89
  2375  0541  00A0               	movwf	??_telaGravarEEPROM
  2376  0542                     u1747:
  2377  0542  0BA0               	decfsz	??_telaGravarEEPROM,f
  2378  0543  2D42               	goto	u1747
  2379  0544  0BA1               	decfsz	??_telaGravarEEPROM+1,f
  2380  0545  2D42               	goto	u1747
  2381  0546  0BA2               	decfsz	??_telaGravarEEPROM+2,f
  2382  0547  2D42               	goto	u1747
  2383                           
  2384                           ;./function.h: 133:     while(flag != 1){
  2385  0548  2E0F               	goto	l2068
  2386  0549                     l2006:
  2387                           
  2388                           ;./function.h: 134:     lcd_cmd(0x01);
  2389  0549  3001               	movlw	1
  2390  054A  120A  158A  2571  120A  118A  	fcall	_lcd_cmd
  2391                           
  2392                           ;./function.h: 135:     lcd_cmd(0x80 +1);
  2393  054F  3081               	movlw	129
  2394  0550  120A  158A  2571  120A  118A  	fcall	_lcd_cmd
  2395  0555                     l2008:
  2396                           
  2397                           ;./function.h: 136:     lcd_str("1-Incr  2-Prox");
  2398  0555  304F               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2399  0556  120A  158A  252A  120A  118A  	fcall	_lcd_str
  2400                           
  2401                           ;./function.h: 138:     while(flag != 1){
  2402  055B  2DB0               	goto	l2038
  2403  055C                     l2010:
  2404                           
  2405                           ;./function.h: 139:         lcd_cmd(0xC0 +2);
  2406  055C  30C2               	movlw	194
  2407  055D  120A  158A  2571  120A  118A  	fcall	_lcd_cmd
  2408  0562                     l2012:
  2409                           
  2410                           ;./function.h: 140:         lcd_str("SetPoint: ");
  2411  0562  3086               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2412  0563  120A  158A  252A  120A  118A  	fcall	_lcd_str
  2413  0568                     l2014:
  2414                           
  2415                           ;./function.h: 141:         lcd_dat(contD + 0x30);
  2416  0568  1283               	bcf	3,5	;RP0=0, select bank0
  2417  0569  1303               	bcf	3,6	;RP1=0, select bank0
  2418  056A  0823               	movf	telaGravarEEPROM@contD,w
  2419  056B  3E30               	addlw	48
  2420  056C  120A  158A  2597  120A  118A  	fcall	_lcd_dat
  2421  0571                     l2016:
  2422                           
  2423                           ;./function.h: 142:         lcd_dat(contU + 0x30);
  2424  0571  1283               	bcf	3,5	;RP0=0, select bank0
  2425  0572  1303               	bcf	3,6	;RP1=0, select bank0
  2426  0573  0825               	movf	telaGravarEEPROM@contU,w
  2427  0574  3E30               	addlw	48
  2428  0575  120A  158A  2597  120A  118A  	fcall	_lcd_dat
  2429  057A                     l2018:
  2430                           
  2431                           ;./function.h: 143:         _delay((unsigned long)((10)*(4000000/4000.0)));
  2432  057A  300D               	movlw	13
  2433  057B  1283               	bcf	3,5	;RP0=0, select bank0
  2434  057C  1303               	bcf	3,6	;RP1=0, select bank0
  2435  057D  00A1               	movwf	??_telaGravarEEPROM+1
  2436  057E  30FB               	movlw	251
  2437  057F  00A0               	movwf	??_telaGravarEEPROM
  2438  0580                     u1757:
  2439  0580  0BA0               	decfsz	??_telaGravarEEPROM,f
  2440  0581  2D80               	goto	u1757
  2441  0582  0BA1               	decfsz	??_telaGravarEEPROM+1,f
  2442  0583  2D80               	goto	u1757
  2443  0584                     l2020:
  2444                           
  2445                           ;./function.h: 144:         if(PORTBbits.RB1 == 0) contU++;
  2446  0584  1283               	bcf	3,5	;RP0=0, select bank0
  2447  0585  1303               	bcf	3,6	;RP1=0, select bank0
  2448  0586  1886               	btfsc	6,1	;volatile
  2449  0587  2D89               	goto	u1471
  2450  0588  2D8A               	goto	u1470
  2451  0589                     u1471:
  2452  0589  2D90               	goto	l2024
  2453  058A                     u1470:
  2454  058A                     l2022:
  2455  058A  3001               	movlw	1
  2456  058B  07A5               	addwf	telaGravarEEPROM@contU,f
  2457  058C  1803               	skipnc
  2458  058D  0AA6               	incf	telaGravarEEPROM@contU+1,f
  2459  058E  3000               	movlw	0
  2460  058F  07A6               	addwf	telaGravarEEPROM@contU+1,f
  2461  0590                     l2024:
  2462                           
  2463                           ;./function.h: 145:         if(contU == 10){
  2464  0590  300A               	movlw	10
  2465  0591  0625               	xorwf	telaGravarEEPROM@contU,w
  2466  0592  0426               	iorwf	telaGravarEEPROM@contU+1,w
  2467  0593  1D03               	btfss	3,2
  2468  0594  2D96               	goto	u1481
  2469  0595  2D97               	goto	u1480
  2470  0596                     u1481:
  2471  0596  2DA8               	goto	l2034
  2472  0597                     u1480:
  2473  0597                     l2026:
  2474                           
  2475                           ;./function.h: 146:             contU = 0;
  2476  0597  01A5               	clrf	telaGravarEEPROM@contU
  2477  0598  01A6               	clrf	telaGravarEEPROM@contU+1
  2478  0599                     l2028:
  2479                           
  2480                           ;./function.h: 147:             contD++;
  2481  0599  3001               	movlw	1
  2482  059A  07A3               	addwf	telaGravarEEPROM@contD,f
  2483  059B  1803               	skipnc
  2484  059C  0AA4               	incf	telaGravarEEPROM@contD+1,f
  2485  059D  3000               	movlw	0
  2486  059E  07A4               	addwf	telaGravarEEPROM@contD+1,f
  2487  059F                     l2030:
  2488                           
  2489                           ;./function.h: 148:             if(contD == 10) contD = 0;
  2490  059F  300A               	movlw	10
  2491  05A0  0623               	xorwf	telaGravarEEPROM@contD,w
  2492  05A1  0424               	iorwf	telaGravarEEPROM@contD+1,w
  2493  05A2  1D03               	btfss	3,2
  2494  05A3  2DA5               	goto	u1491
  2495  05A4  2DA6               	goto	u1490
  2496  05A5                     u1491:
  2497  05A5  2DA8               	goto	l2034
  2498  05A6                     u1490:
  2499  05A6                     l2032:
  2500  05A6  01A3               	clrf	telaGravarEEPROM@contD
  2501  05A7  01A4               	clrf	telaGravarEEPROM@contD+1
  2502  05A8                     l2034:
  2503                           
  2504                           ;./function.h: 150:         if(PORTBbits.RB2 == 0) flag = 1;
  2505  05A8  1906               	btfsc	6,2	;volatile
  2506  05A9  2DAB               	goto	u1501
  2507  05AA  2DAC               	goto	u1500
  2508  05AB                     u1501:
  2509  05AB  2DB0               	goto	l2038
  2510  05AC                     u1500:
  2511  05AC                     l2036:
  2512  05AC  3001               	movlw	1
  2513  05AD  00A7               	movwf	telaGravarEEPROM@flag
  2514  05AE  3000               	movlw	0
  2515  05AF  00A8               	movwf	telaGravarEEPROM@flag+1
  2516  05B0                     l2038:
  2517                           
  2518                           ;./function.h: 138:     while(flag != 1){
  2519  05B0  1283               	bcf	3,5	;RP0=0, select bank0
  2520  05B1  1303               	bcf	3,6	;RP1=0, select bank0
  2521  05B2  0327               	decf	telaGravarEEPROM@flag,w
  2522  05B3  0428               	iorwf	telaGravarEEPROM@flag+1,w
  2523  05B4  1D03               	btfss	3,2
  2524  05B5  2DB7               	goto	u1511
  2525  05B6  2DB8               	goto	u1510
  2526  05B7                     u1511:
  2527  05B7  2D5C               	goto	l2010
  2528  05B8                     u1510:
  2529  05B8                     l2040:
  2530                           
  2531                           ;./function.h: 152:     flag = 0;
  2532  05B8  01A7               	clrf	telaGravarEEPROM@flag
  2533  05B9  01A8               	clrf	telaGravarEEPROM@flag+1
  2534  05BA                     l2042:
  2535                           
  2536                           ;./function.h: 153:     lcd_cmd(0x01);
  2537  05BA  3001               	movlw	1
  2538  05BB  120A  158A  2571  120A  118A  	fcall	_lcd_cmd
  2539  05C0                     l2044:
  2540                           
  2541                           ;./function.h: 154:     lcd_cmd(0x80 +1);
  2542  05C0  3081               	movlw	129
  2543  05C1  120A  158A  2571  120A  118A  	fcall	_lcd_cmd
  2544  05C6                     l2046:
  2545                           
  2546                           ;./function.h: 155:     lcd_str("1-Salvar");
  2547  05C6  30A3               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2548  05C7  120A  158A  252A  120A  118A  	fcall	_lcd_str
  2549  05CC                     l2048:
  2550                           
  2551                           ;./function.h: 156:     lcd_cmd(0xC0 +1);
  2552  05CC  30C1               	movlw	193
  2553  05CD  120A  158A  2571  120A  118A  	fcall	_lcd_cmd
  2554  05D2                     l2050:
  2555                           
  2556                           ;./function.h: 157:     lcd_str("2-Voltar");
  2557  05D2  309A               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  2558  05D3  120A  158A  252A  120A  118A  	fcall	_lcd_str
  2559  05D8                     l2052:
  2560                           
  2561                           ;./function.h: 158:     _delay((unsigned long)((500)*(4000000/4000.0)));
  2562  05D8  3003               	movlw	3
  2563  05D9  1283               	bcf	3,5	;RP0=0, select bank0
  2564  05DA  1303               	bcf	3,6	;RP1=0, select bank0
  2565  05DB  00A2               	movwf	??_telaGravarEEPROM+2
  2566  05DC  308A               	movlw	138
  2567  05DD  00A1               	movwf	??_telaGravarEEPROM+1
  2568  05DE  3055               	movlw	85
  2569  05DF  00A0               	movwf	??_telaGravarEEPROM
  2570  05E0                     u1767:
  2571  05E0  0BA0               	decfsz	??_telaGravarEEPROM,f
  2572  05E1  2DE0               	goto	u1767
  2573  05E2  0BA1               	decfsz	??_telaGravarEEPROM+1,f
  2574  05E3  2DE0               	goto	u1767
  2575  05E4  0BA2               	decfsz	??_telaGravarEEPROM+2,f
  2576  05E5  2DE0               	goto	u1767
  2577                           
  2578                           ;./function.h: 159:     while(flag == 0){
  2579  05E6  2DFE               	goto	l2062
  2580  05E7                     l125:
  2581                           
  2582                           ;./function.h: 160:         if(RB1 == 0){
  2583  05E7  1886               	btfsc	6,1	;volatile
  2584  05E8  2DEA               	goto	u1521
  2585  05E9  2DEB               	goto	u1520
  2586  05EA                     u1521:
  2587  05EA  2DF6               	goto	l2058
  2588  05EB                     u1520:
  2589  05EB                     l2054:
  2590                           
  2591                           ;./function.h: 161:             alterarSetPoint();
  2592  05EB  120A  158A  268C  120A  118A  	fcall	_alterarSetPoint
  2593  05F0                     l2056:
  2594                           
  2595                           ;./function.h: 162:             flag = 1;
  2596  05F0  3001               	movlw	1
  2597  05F1  1283               	bcf	3,5	;RP0=0, select bank0
  2598  05F2  1303               	bcf	3,6	;RP1=0, select bank0
  2599  05F3  00A7               	movwf	telaGravarEEPROM@flag
  2600  05F4  3000               	movlw	0
  2601  05F5  00A8               	movwf	telaGravarEEPROM@flag+1
  2602  05F6                     l2058:
  2603                           
  2604                           ;./function.h: 164:         if(RB2 == 0){
  2605  05F6  1906               	btfsc	6,2	;volatile
  2606  05F7  2DF9               	goto	u1531
  2607  05F8  2DFA               	goto	u1530
  2608  05F9                     u1531:
  2609  05F9  2DFE               	goto	l2062
  2610  05FA                     u1530:
  2611  05FA                     l2060:
  2612                           
  2613                           ;./function.h: 165:             flag = 2;
  2614  05FA  3002               	movlw	2
  2615  05FB  00A7               	movwf	telaGravarEEPROM@flag
  2616  05FC  3000               	movlw	0
  2617  05FD  00A8               	movwf	telaGravarEEPROM@flag+1
  2618  05FE                     l2062:
  2619                           
  2620                           ;./function.h: 159:     while(flag == 0){
  2621  05FE  1283               	bcf	3,5	;RP0=0, select bank0
  2622  05FF  1303               	bcf	3,6	;RP1=0, select bank0
  2623  0600  0827               	movf	telaGravarEEPROM@flag,w
  2624  0601  0428               	iorwf	telaGravarEEPROM@flag+1,w
  2625  0602  1903               	btfsc	3,2
  2626  0603  2E05               	goto	u1541
  2627  0604  2E06               	goto	u1540
  2628  0605                     u1541:
  2629  0605  2DE7               	goto	l125
  2630  0606                     u1540:
  2631  0606                     l2064:
  2632                           
  2633                           ;./function.h: 168:     if(flag == 2)
  2634  0606  3002               	movlw	2
  2635  0607  0627               	xorwf	telaGravarEEPROM@flag,w
  2636  0608  0428               	iorwf	telaGravarEEPROM@flag+1,w
  2637  0609  1D03               	btfss	3,2
  2638  060A  2E0C               	goto	u1551
  2639  060B  2E0D               	goto	u1550
  2640  060C                     u1551:
  2641  060C  2E0F               	goto	l2068
  2642  060D                     u1550:
  2643  060D                     l2066:
  2644                           
  2645                           ;./function.h: 169:     flag = 0;
  2646  060D  01A7               	clrf	telaGravarEEPROM@flag
  2647  060E  01A8               	clrf	telaGravarEEPROM@flag+1
  2648  060F                     l2068:
  2649                           
  2650                           ;./function.h: 133:     while(flag != 1){
  2651  060F  1283               	bcf	3,5	;RP0=0, select bank0
  2652  0610  1303               	bcf	3,6	;RP1=0, select bank0
  2653  0611  0327               	decf	telaGravarEEPROM@flag,w
  2654  0612  0428               	iorwf	telaGravarEEPROM@flag+1,w
  2655  0613  1D03               	btfss	3,2
  2656  0614  2E16               	goto	u1561
  2657  0615  2E17               	goto	u1560
  2658  0616                     u1561:
  2659  0616  2D49               	goto	l2006
  2660  0617                     u1560:
  2661  0617                     l2070:
  2662                           
  2663                           ;./function.h: 171:     eeprom_write(0x0A, (contU+0x30));
  2664  0617  0825               	movf	telaGravarEEPROM@contU,w
  2665  0618  3E30               	addlw	48
  2666  0619  00A0               	movwf	??_telaGravarEEPROM
  2667  061A  0820               	movf	??_telaGravarEEPROM,w
  2668  061B  00F0               	movwf	eeprom_write@value
  2669  061C  300A               	movlw	10
  2670  061D  120A  158A  25BD  120A  118A  	fcall	_eeprom_write
  2671                           
  2672                           ;./function.h: 172:     eeprom_write(0x2A, (contD+0x30));
  2673  0622  1283               	bcf	3,5	;RP0=0, select bank0
  2674  0623  1303               	bcf	3,6	;RP1=0, select bank0
  2675  0624  0823               	movf	telaGravarEEPROM@contD,w
  2676  0625  3E30               	addlw	48
  2677  0626  00A0               	movwf	??_telaGravarEEPROM
  2678  0627  0820               	movf	??_telaGravarEEPROM,w
  2679  0628  00F0               	movwf	eeprom_write@value
  2680  0629  302A               	movlw	42
  2681  062A  120A  158A  25BD  120A  118A  	fcall	_eeprom_write
  2682  062F                     l2072:
  2683                           
  2684                           ;./function.h: 173:     return 0;
  2685  062F  01FA               	clrf	?_telaGravarEEPROM
  2686  0630  01FB               	clrf	?_telaGravarEEPROM+1
  2687  0631                     l131:
  2688  0631  0008               	return
  2689  0632                     __end_of_telaGravarEEPROM:
  2690                           
  2691                           	psect	text5
  2692  0DBD                     __ptext5:	
  2693 ;; *************** function _eeprom_write *****************
  2694 ;; Defined at:
  2695 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\pic\__eewrite.c"
  2696 ;; Parameters:    Size  Location     Type
  2697 ;;  addr            1    wreg     unsigned char 
  2698 ;;  value           1    0[COMMON] unsigned char 
  2699 ;; Auto vars:     Size  Location     Type
  2700 ;;  addr            1    2[COMMON] unsigned char 
  2701 ;; Return value:  Size  Location     Type
  2702 ;;                  1    wreg      void 
  2703 ;; Registers used:
  2704 ;;		wreg, status,2, status,0
  2705 ;; Tracked objects:
  2706 ;;		On entry : 0/0
  2707 ;;		On exit  : 0/0
  2708 ;;		Unchanged: 0/0
  2709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2710 ;;      Params:         1       0       0       0       0
  2711 ;;      Locals:         1       0       0       0       0
  2712 ;;      Temps:          1       0       0       0       0
  2713 ;;      Totals:         3       0       0       0       0
  2714 ;;Total ram usage:        3 bytes
  2715 ;; Hardware stack levels used: 1
  2716 ;; This function calls:
  2717 ;;		Nothing
  2718 ;; This function is called by:
  2719 ;;		_telaSetPoint
  2720 ;;		_telaGravarEEPROM
  2721 ;; This function uses a non-reentrant model
  2722 ;;
  2723                           
  2724                           
  2725                           ;psect for function _eeprom_write
  2726  0DBD                     _eeprom_write:
  2727                           
  2728                           ;incstack = 0
  2729                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  2730                           ;eeprom_write@addr stored from wreg
  2731  0DBD  00F2               	movwf	eeprom_write@addr
  2732  0DBE                     l389:	
  2733                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\pic\__eewrite.c: 6: eeprom_write(u
      +                          nsigned char addr, unsigned char value);C:\Program Files\Microchip\xc8\v2.32\pic\sources
      +                          \c90\pic\__eewrite.c: 7: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\pic\__ee
      +                          write.c: 8:  do{ while (EECON1bits.WR) { continue; } EEADR = (addr); EEDATA = (value); E
      +                          ECON1 &= 0x3F; STATUSbits.CARRY = 0; if (INTCONbits.GIE) { STATUSbits.CARRY = 1; } INTCO
      +                          Nbits.GIE = 0; EECON1bits.WREN = 1; EECON2 = 0x55; EECON2 = 0xAA; EECON1bits.WR = 1; EEC
      +                          ON1bits.WREN = 0; if (STATUSbits.CARRY) { INTCONbits.GIE = 1; } } while (0);
  2734                           
  2735  0DBE                     l390:
  2736  0DBE  1683               	bsf	3,5	;RP0=1, select bank3
  2737  0DBF  1703               	bsf	3,6	;RP1=1, select bank3
  2738  0DC0  188C               	btfsc	12,1	;volsfr
  2739  0DC1  2DC3               	goto	u1191
  2740  0DC2  2DC4               	goto	u1190
  2741  0DC3                     u1191:
  2742  0DC3  2DBE               	goto	l390
  2743  0DC4                     u1190:
  2744  0DC4                     l1812:
  2745  0DC4  0872               	movf	eeprom_write@addr,w
  2746  0DC5  1283               	bcf	3,5	;RP0=0, select bank2
  2747  0DC6  1703               	bsf	3,6	;RP1=1, select bank2
  2748  0DC7  008D               	movwf	13	;volatile
  2749  0DC8  0870               	movf	eeprom_write@value,w
  2750  0DC9  008C               	movwf	12	;volatile
  2751  0DCA                     l1814:
  2752  0DCA  303F               	movlw	63
  2753  0DCB  00F1               	movwf	??_eeprom_write
  2754  0DCC  0871               	movf	??_eeprom_write,w
  2755  0DCD  1683               	bsf	3,5	;RP0=1, select bank3
  2756  0DCE  1703               	bsf	3,6	;RP1=1, select bank3
  2757  0DCF  058C               	andwf	12,f	;volsfr
  2758  0DD0                     l1816:
  2759  0DD0  1283               	bcf	3,5	;RP0=0, select bank0
  2760  0DD1  1303               	bcf	3,6	;RP1=0, select bank0
  2761  0DD2  1003               	bcf	3,0	;volatile
  2762  0DD3                     l1818:
  2763  0DD3  1F8B               	btfss	11,7	;volatile
  2764  0DD4  2DD6               	goto	u1201
  2765  0DD5  2DD7               	goto	u1200
  2766  0DD6                     u1201:
  2767  0DD6  2DD8               	goto	l393
  2768  0DD7                     u1200:
  2769  0DD7                     l1820:
  2770  0DD7  1403               	bsf	3,0	;volatile
  2771  0DD8                     l393:
  2772  0DD8  138B               	bcf	11,7	;volatile
  2773  0DD9  1683               	bsf	3,5	;RP0=1, select bank3
  2774  0DDA  1703               	bsf	3,6	;RP1=1, select bank3
  2775  0DDB  150C               	bsf	12,2	;volsfr
  2776  0DDC                     l1822:
  2777  0DDC  3055               	movlw	85
  2778  0DDD  008D               	movwf	13	;volsfr
  2779  0DDE  30AA               	movlw	170
  2780  0DDF  008D               	movwf	13	;volsfr
  2781  0DE0                     l1824:
  2782  0DE0  148C               	bsf	12,1	;volsfr
  2783  0DE1                     l1826:
  2784  0DE1  110C               	bcf	12,2	;volsfr
  2785  0DE2                     l1828:
  2786  0DE2  1283               	bcf	3,5	;RP0=0, select bank0
  2787  0DE3  1303               	bcf	3,6	;RP1=0, select bank0
  2788  0DE4  1C03               	btfss	3,0	;volatile
  2789  0DE5  2DE7               	goto	u1211
  2790  0DE6  2DE8               	goto	u1210
  2791  0DE7                     u1211:
  2792  0DE7  2DE9               	goto	l396
  2793  0DE8                     u1210:
  2794  0DE8                     l1830:
  2795  0DE8  178B               	bsf	11,7	;volatile
  2796  0DE9                     l396:
  2797  0DE9  0008               	return
  2798  0DEA                     __end_of_eeprom_write:
  2799                           
  2800                           	psect	text6
  2801  0E8C                     __ptext6:	
  2802 ;; *************** function _alterarSetPoint *****************
  2803 ;; Defined at:
  2804 ;;		line 64 in file "./function.h"
  2805 ;; Parameters:    Size  Location     Type
  2806 ;;		None
  2807 ;; Auto vars:     Size  Location     Type
  2808 ;;		None
  2809 ;; Return value:  Size  Location     Type
  2810 ;;                  1    wreg      void 
  2811 ;; Registers used:
  2812 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2813 ;; Tracked objects:
  2814 ;;		On entry : 0/0
  2815 ;;		On exit  : 0/0
  2816 ;;		Unchanged: 0/0
  2817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2818 ;;      Params:         0       0       0       0       0
  2819 ;;      Locals:         0       0       0       0       0
  2820 ;;      Temps:          3       0       0       0       0
  2821 ;;      Totals:         3       0       0       0       0
  2822 ;;Total ram usage:        3 bytes
  2823 ;; Hardware stack levels used: 1
  2824 ;; Hardware stack levels required when called: 3
  2825 ;; This function calls:
  2826 ;;		_armazenarSet
  2827 ;;		_lcd_cmd
  2828 ;;		_lcd_dat
  2829 ;;		_lcd_str
  2830 ;; This function is called by:
  2831 ;;		_telaSetPoint
  2832 ;;		_telaGravarEEPROM
  2833 ;; This function uses a non-reentrant model
  2834 ;;
  2835                           
  2836                           
  2837                           ;psect for function _alterarSetPoint
  2838  0E8C                     _alterarSetPoint:
  2839  0E8C                     l1800:	
  2840                           ;incstack = 0
  2841                           ; Regs used in _alterarSetPoint: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2842                           
  2843                           
  2844                           ;./function.h: 65:     armazenarSet();
  2845  0E8C  120A  158A  261E  120A  158A  	fcall	_armazenarSet
  2846                           
  2847                           ;./function.h: 66:     lcd_cmd(0x01);
  2848  0E91  3001               	movlw	1
  2849  0E92  120A  158A  2571  120A  158A  	fcall	_lcd_cmd
  2850                           
  2851                           ;./function.h: 67:     lcd_cmd(0x80);
  2852  0E97  3080               	movlw	128
  2853  0E98  120A  158A  2571  120A  158A  	fcall	_lcd_cmd
  2854  0E9D                     l1802:
  2855                           
  2856                           ;./function.h: 68:     lcd_str("Valor Atualizado");
  2857  0E9D  3001               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2858  0E9E  120A  158A  252A  120A  158A  	fcall	_lcd_str
  2859  0EA3                     l1804:
  2860                           
  2861                           ;./function.h: 69:      lcd_cmd(0xC0 +1);
  2862  0EA3  30C1               	movlw	193
  2863  0EA4  120A  158A  2571  120A  158A  	fcall	_lcd_cmd
  2864                           
  2865                           ;./function.h: 70:     lcd_str("SetPoint: ");
  2866  0EA9  3086               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2867  0EAA  120A  158A  252A  120A  158A  	fcall	_lcd_str
  2868  0EAF                     l1806:
  2869                           
  2870                           ;./function.h: 71:     lcd_dat(dezena+0x30);
  2871  0EAF  1283               	bcf	3,5	;RP0=0, select bank0
  2872  0EB0  1303               	bcf	3,6	;RP1=0, select bank0
  2873  0EB1  0868               	movf	_dezena,w
  2874  0EB2  3E30               	addlw	48
  2875  0EB3  120A  158A  2597  120A  158A  	fcall	_lcd_dat
  2876  0EB8                     l1808:
  2877                           
  2878                           ;./function.h: 72:     lcd_dat(unidade+0x30);
  2879  0EB8  1283               	bcf	3,5	;RP0=0, select bank0
  2880  0EB9  1303               	bcf	3,6	;RP1=0, select bank0
  2881  0EBA  0866               	movf	_unidade,w
  2882  0EBB  3E30               	addlw	48
  2883  0EBC  120A  158A  2597  120A  158A  	fcall	_lcd_dat
  2884  0EC1                     l1810:
  2885                           
  2886                           ;./function.h: 73:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  2887  0EC1  3006               	movlw	6
  2888  0EC2  00F9               	movwf	??_alterarSetPoint+2
  2889  0EC3  3013               	movlw	19
  2890  0EC4  00F8               	movwf	??_alterarSetPoint+1
  2891  0EC5  30AD               	movlw	173
  2892  0EC6  00F7               	movwf	??_alterarSetPoint
  2893  0EC7                     u1777:
  2894  0EC7  0BF7               	decfsz	??_alterarSetPoint,f
  2895  0EC8  2EC7               	goto	u1777
  2896  0EC9  0BF8               	decfsz	??_alterarSetPoint+1,f
  2897  0ECA  2EC7               	goto	u1777
  2898  0ECB  0BF9               	decfsz	??_alterarSetPoint+2,f
  2899  0ECC  2EC7               	goto	u1777
  2900  0ECD  2ECE               	nop2
  2901  0ECE                     l97:
  2902  0ECE  0008               	return
  2903  0ECF                     __end_of_alterarSetPoint:
  2904                           
  2905                           	psect	text7
  2906  0E1E                     __ptext7:	
  2907 ;; *************** function _armazenarSet *****************
  2908 ;; Defined at:
  2909 ;;		line 31 in file "./function.h"
  2910 ;; Parameters:    Size  Location     Type
  2911 ;;		None
  2912 ;; Auto vars:     Size  Location     Type
  2913 ;;		None
  2914 ;; Return value:  Size  Location     Type
  2915 ;;                  1    wreg      void 
  2916 ;; Registers used:
  2917 ;;		wreg, status,2, status,0, pclath, cstack
  2918 ;; Tracked objects:
  2919 ;;		On entry : 0/0
  2920 ;;		On exit  : 0/0
  2921 ;;		Unchanged: 0/0
  2922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2923 ;;      Params:         0       0       0       0       0
  2924 ;;      Locals:         0       0       0       0       0
  2925 ;;      Temps:          0       0       0       0       0
  2926 ;;      Totals:         0       0       0       0       0
  2927 ;;Total ram usage:        0 bytes
  2928 ;; Hardware stack levels used: 1
  2929 ;; Hardware stack levels required when called: 1
  2930 ;; This function calls:
  2931 ;;		___wmul
  2932 ;;		_eeprom_read
  2933 ;; This function is called by:
  2934 ;;		_telaInicio
  2935 ;;		_alterarSetPoint
  2936 ;;		_main
  2937 ;; This function uses a non-reentrant model
  2938 ;;
  2939                           
  2940                           
  2941                           ;psect for function _armazenarSet
  2942  0E1E                     _armazenarSet:
  2943  0E1E                     l1736:	
  2944                           ;incstack = 0
  2945                           ; Regs used in _armazenarSet: [wreg+status,2+status,0+pclath+cstack]
  2946                           
  2947                           
  2948                           ;./function.h: 32:     dezena = eeprom_read(0x2A) - 0x30;
  2949  0E1E  302A               	movlw	42
  2950  0E1F  120A  158A  2513  120A  158A  	fcall	_eeprom_read
  2951  0E24  3ED0               	addlw	208
  2952  0E25  1283               	bcf	3,5	;RP0=0, select bank0
  2953  0E26  1303               	bcf	3,6	;RP1=0, select bank0
  2954  0E27  00E8               	movwf	_dezena
  2955  0E28  30FF               	movlw	255
  2956  0E29  1803               	skipnc
  2957  0E2A  3000               	movlw	0
  2958  0E2B  00E9               	movwf	_dezena+1
  2959                           
  2960                           ;./function.h: 33:     unidade = eeprom_read(0x0A) - 0x30;
  2961  0E2C  300A               	movlw	10
  2962  0E2D  120A  158A  2513  120A  158A  	fcall	_eeprom_read
  2963  0E32  3ED0               	addlw	208
  2964  0E33  1283               	bcf	3,5	;RP0=0, select bank0
  2965  0E34  1303               	bcf	3,6	;RP1=0, select bank0
  2966  0E35  00E6               	movwf	_unidade
  2967  0E36  30FF               	movlw	255
  2968  0E37  1803               	skipnc
  2969  0E38  3000               	movlw	0
  2970  0E39  00E7               	movwf	_unidade+1
  2971                           
  2972                           ;./function.h: 34:     setPoint = dezena*10 + unidade;
  2973  0E3A  0869               	movf	_dezena+1,w
  2974  0E3B  00F1               	movwf	___wmul@multiplier+1
  2975  0E3C  0868               	movf	_dezena,w
  2976  0E3D  00F0               	movwf	___wmul@multiplier
  2977  0E3E  300A               	movlw	10
  2978  0E3F  00F2               	movwf	___wmul@multiplicand
  2979  0E40  3000               	movlw	0
  2980  0E41  00F3               	movwf	___wmul@multiplicand+1
  2981  0E42  120A  158A  254C  120A  158A  	fcall	___wmul
  2982  0E47  1283               	bcf	3,5	;RP0=0, select bank0
  2983  0E48  1303               	bcf	3,6	;RP1=0, select bank0
  2984  0E49  0866               	movf	_unidade,w
  2985  0E4A  0770               	addwf	?___wmul,w
  2986  0E4B  00EA               	movwf	_setPoint
  2987  0E4C  0867               	movf	_unidade+1,w
  2988  0E4D  1803               	skipnc
  2989  0E4E  0A67               	incf	_unidade+1,w
  2990  0E4F  0771               	addwf	?___wmul+1,w
  2991  0E50  00EB               	movwf	_setPoint+1
  2992  0E51                     l86:
  2993  0E51  0008               	return
  2994  0E52                     __end_of_armazenarSet:
  2995                           
  2996                           	psect	text8
  2997  0D13                     __ptext8:	
  2998 ;; *************** function _eeprom_read *****************
  2999 ;; Defined at:
  3000 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\pic\__eeread.c"
  3001 ;; Parameters:    Size  Location     Type
  3002 ;;  addr            1    wreg     unsigned char 
  3003 ;; Auto vars:     Size  Location     Type
  3004 ;;  addr            1    1[COMMON] unsigned char 
  3005 ;; Return value:  Size  Location     Type
  3006 ;;                  1    wreg      unsigned char 
  3007 ;; Registers used:
  3008 ;;		wreg, status,2, status,0
  3009 ;; Tracked objects:
  3010 ;;		On entry : 0/0
  3011 ;;		On exit  : 0/0
  3012 ;;		Unchanged: 0/0
  3013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3014 ;;      Params:         0       0       0       0       0
  3015 ;;      Locals:         1       0       0       0       0
  3016 ;;      Temps:          1       0       0       0       0
  3017 ;;      Totals:         2       0       0       0       0
  3018 ;;Total ram usage:        2 bytes
  3019 ;; Hardware stack levels used: 1
  3020 ;; This function calls:
  3021 ;;		Nothing
  3022 ;; This function is called by:
  3023 ;;		_armazenarSet
  3024 ;; This function uses a non-reentrant model
  3025 ;;
  3026                           
  3027                           
  3028                           ;psect for function _eeprom_read
  3029  0D13                     _eeprom_read:
  3030                           
  3031                           ;incstack = 0
  3032                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  3033                           ;eeprom_read@addr stored from wreg
  3034  0D13  00F1               	movwf	eeprom_read@addr
  3035  0D14                     l370:	
  3036                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\pic\__eeread.c: 6: eeprom_read(uns
      +                          igned char addr);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\pic\__eeread.c: 7:
      +                           {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\pic\__eeread.c: 8:  do
  3037                           
  3038  0D14  0064               	clrwdt	;# 
  3039  0D15  1683               	bsf	3,5	;RP0=1, select bank3
  3040  0D16  1703               	bsf	3,6	;RP1=1, select bank3
  3041  0D17  188C               	btfsc	12,1	;volsfr
  3042  0D18  2D1A               	goto	u881
  3043  0D19  2D1B               	goto	u880
  3044  0D1A                     u881:
  3045  0D1A  2D14               	goto	l370
  3046  0D1B                     u880:
  3047  0D1B                     l1634:
  3048                           
  3049                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\pic\__eeread.c: 18:  return ( EEAD
      +                          R = addr, EECON1 &= 0x3F, EECON1bits.RD = 1, EEDATA);
  3050  0D1B  0871               	movf	eeprom_read@addr,w
  3051  0D1C  1283               	bcf	3,5	;RP0=0, select bank2
  3052  0D1D  1703               	bsf	3,6	;RP1=1, select bank2
  3053  0D1E  008D               	movwf	13	;volatile
  3054  0D1F  303F               	movlw	63
  3055  0D20  00F0               	movwf	??_eeprom_read
  3056  0D21  0870               	movf	??_eeprom_read,w
  3057  0D22  1683               	bsf	3,5	;RP0=1, select bank3
  3058  0D23  1703               	bsf	3,6	;RP1=1, select bank3
  3059  0D24  058C               	andwf	12,f	;volsfr
  3060  0D25  140C               	bsf	12,0	;volsfr
  3061  0D26  1283               	bcf	3,5	;RP0=0, select bank2
  3062  0D27  1703               	bsf	3,6	;RP1=1, select bank2
  3063  0D28  080C               	movf	12,w	;volatile
  3064  0D29                     l372:
  3065  0D29  0008               	return
  3066  0D2A                     __end_of_eeprom_read:
  3067                           
  3068                           	psect	text9
  3069  0277                     __ptext9:	
  3070 ;; *************** function _telaControlador *****************
  3071 ;; Defined at:
  3072 ;;		line 224 in file "./function.h"
  3073 ;; Parameters:    Size  Location     Type
  3074 ;;		None
  3075 ;; Auto vars:     Size  Location     Type
  3076 ;;  strDC           6   46[BANK0 ] unsigned char [6]
  3077 ;;  str             6   34[BANK0 ] unsigned char [6]
  3078 ;;  dc              4   40[BANK0 ] long 
  3079 ;;  temp            2   44[BANK0 ] int 
  3080 ;; Return value:  Size  Location     Type
  3081 ;;                  2   29[BANK0 ] int 
  3082 ;; Registers used:
  3083 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3084 ;; Tracked objects:
  3085 ;;		On entry : 0/0
  3086 ;;		On exit  : 0/0
  3087 ;;		Unchanged: 0/0
  3088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3089 ;;      Params:         0       2       0       0       0
  3090 ;;      Locals:         0      18       0       0       0
  3091 ;;      Temps:          0       3       0       0       0
  3092 ;;      Totals:         0      23       0       0       0
  3093 ;;Total ram usage:       23 bytes
  3094 ;; Hardware stack levels used: 1
  3095 ;; Hardware stack levels required when called: 3
  3096 ;; This function calls:
  3097 ;;		_iniciarControlador
  3098 ;;		_itoa
  3099 ;;		_lcd_cmd
  3100 ;;		_lcd_dat
  3101 ;;		_lcd_str
  3102 ;;		_verificarTemperatura
  3103 ;; This function is called by:
  3104 ;;		_main
  3105 ;; This function uses a non-reentrant model
  3106 ;;
  3107                           
  3108                           
  3109                           ;psect for function _telaControlador
  3110  0277                     _telaControlador:
  3111  0277                     l2076:	
  3112                           ;incstack = 0
  3113                           ; Regs used in _telaControlador: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3114                           
  3115                           
  3116                           ;./function.h: 226:     char str[6];;./function.h: 227:     char strDC[6];;./function.h:
      +                           228:     int temp;;./function.h: 229:     long int dc;;./function.h: 231:     lcd_cmd(0
      +                          x01);
  3117  0277  3001               	movlw	1
  3118  0278  120A  158A  2571  120A  118A  	fcall	_lcd_cmd
  3119                           
  3120                           ;./function.h: 233:     while(RB2){
  3121  027D  2B36               	goto	l146
  3122  027E                     l2078:
  3123                           
  3124                           ;./function.h: 234:         temp = verificarTemperatura();
  3125  027E  120A  158A  25EA  120A  118A  	fcall	_verificarTemperatura
  3126  0283  0877               	movf	?_verificarTemperatura+1,w
  3127  0284  1283               	bcf	3,5	;RP0=0, select bank0
  3128  0285  1303               	bcf	3,6	;RP1=0, select bank0
  3129  0286  00CD               	movwf	telaControlador@temp+1
  3130  0287  0876               	movf	?_verificarTemperatura,w
  3131  0288  00CC               	movwf	telaControlador@temp
  3132  0289                     l2080:
  3133                           
  3134                           ;./function.h: 235:         dc = iniciarControlador();
  3135  0289  120A  118A  2632  120A  118A  	fcall	_iniciarControlador
  3136  028E  1283               	bcf	3,5	;RP0=0, select bank0
  3137  028F  1303               	bcf	3,6	;RP1=0, select bank0
  3138  0290  0827               	movf	?_iniciarControlador,w
  3139  0291  00C8               	movwf	telaControlador@dc
  3140  0292  0828               	movf	?_iniciarControlador+1,w
  3141  0293  00C9               	movwf	telaControlador@dc+1
  3142  0294  3000               	movlw	0
  3143  0295  1BC9               	btfsc	telaControlador@dc+1,7
  3144  0296  30FF               	movlw	255
  3145  0297  00CA               	movwf	telaControlador@dc+2
  3146  0298  00CB               	movwf	telaControlador@dc+3
  3147  0299                     l2082:
  3148                           
  3149                           ;./function.h: 237:         itoa(temp,str);
  3150  0299  084D               	movf	telaControlador@temp+1,w
  3151  029A  00A1               	movwf	itoa@val+1
  3152  029B  084C               	movf	telaControlador@temp,w
  3153  029C  00A0               	movwf	itoa@val
  3154  029D  3042               	movlw	(low (telaControlador@str| 0))& (0+255)
  3155  029E  00BF               	movwf	??_telaControlador
  3156  029F  083F               	movf	??_telaControlador,w
  3157  02A0  00A2               	movwf	itoa@str
  3158  02A1  120A  118A  212E  120A  118A  	fcall	_itoa
  3159  02A6                     l2084:
  3160                           
  3161                           ;./function.h: 238:         itoa(dc,strDC);
  3162  02A6  1283               	bcf	3,5	;RP0=0, select bank0
  3163  02A7  1303               	bcf	3,6	;RP1=0, select bank0
  3164  02A8  0849               	movf	telaControlador@dc+1,w
  3165  02A9  00A1               	movwf	itoa@val+1
  3166  02AA  0848               	movf	telaControlador@dc,w
  3167  02AB  00A0               	movwf	itoa@val
  3168  02AC  304E               	movlw	(low (telaControlador@strDC| 0))& (0+255)
  3169  02AD  00BF               	movwf	??_telaControlador
  3170  02AE  083F               	movf	??_telaControlador,w
  3171  02AF  00A2               	movwf	itoa@str
  3172  02B0  120A  118A  212E  120A  118A  	fcall	_itoa
  3173  02B5                     l2086:
  3174                           
  3175                           ;./function.h: 240:         lcd_cmd(0x80 +1);
  3176  02B5  3081               	movlw	129
  3177  02B6  120A  158A  2571  120A  118A  	fcall	_lcd_cmd
  3178  02BB                     l2088:
  3179                           
  3180                           ;./function.h: 241:         lcd_str("Ligado  2-off");
  3181  02BB  305E               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
  3182  02BC  120A  158A  252A  120A  118A  	fcall	_lcd_str
  3183  02C1                     l2090:
  3184                           
  3185                           ;./function.h: 243:         lcd_cmd(0xC0);
  3186  02C1  30C0               	movlw	192
  3187  02C2  120A  158A  2571  120A  118A  	fcall	_lcd_cmd
  3188  02C7                     l2092:
  3189                           
  3190                           ;./function.h: 244:         lcd_str("T: ");
  3191  02C7  30B3               	movlw	(low ((STR_17-__stringbase)| (0+32768)))& (0+255)
  3192  02C8  120A  158A  252A  120A  118A  	fcall	_lcd_str
  3193  02CD                     l2094:
  3194                           
  3195                           ;./function.h: 245:         lcd_dat(str[2]);
  3196  02CD  1283               	bcf	3,5	;RP0=0, select bank0
  3197  02CE  1303               	bcf	3,6	;RP1=0, select bank0
  3198  02CF  0844               	movf	telaControlador@str+2,w
  3199  02D0  120A  158A  2597  120A  118A  	fcall	_lcd_dat
  3200  02D5                     l2096:
  3201                           
  3202                           ;./function.h: 246:         lcd_dat(str[3]);
  3203  02D5  1283               	bcf	3,5	;RP0=0, select bank0
  3204  02D6  1303               	bcf	3,6	;RP1=0, select bank0
  3205  02D7  0845               	movf	telaControlador@str+3,w
  3206  02D8  120A  158A  2597  120A  118A  	fcall	_lcd_dat
  3207  02DD                     l2098:
  3208                           
  3209                           ;./function.h: 247:         lcd_dat(',');
  3210  02DD  302C               	movlw	44
  3211  02DE  120A  158A  2597  120A  118A  	fcall	_lcd_dat
  3212  02E3                     l2100:
  3213                           
  3214                           ;./function.h: 248:         lcd_dat(str[4]);
  3215  02E3  1283               	bcf	3,5	;RP0=0, select bank0
  3216  02E4  1303               	bcf	3,6	;RP1=0, select bank0
  3217  02E5  0846               	movf	telaControlador@str+4,w
  3218  02E6  120A  158A  2597  120A  118A  	fcall	_lcd_dat
  3219  02EB                     l2102:
  3220                           
  3221                           ;./function.h: 249:         lcd_dat('C ');
  3222  02EB  3020               	movlw	32
  3223  02EC  120A  158A  2597  120A  118A  	fcall	_lcd_dat
  3224  02F1                     l2104:
  3225                           
  3226                           ;./function.h: 251:         if(strDC[0] == 1){
  3227  02F1  1283               	bcf	3,5	;RP0=0, select bank0
  3228  02F2  1303               	bcf	3,6	;RP1=0, select bank0
  3229  02F3  034E               	decf	telaControlador@strDC,w
  3230  02F4  1D03               	btfss	3,2
  3231  02F5  2AF7               	goto	u1571
  3232  02F6  2AF8               	goto	u1570
  3233  02F7                     u1571:
  3234  02F7  2AF9               	goto	l2108
  3235  02F8                     u1570:
  3236  02F8                     l2106:
  3237                           
  3238                           ;./function.h: 252:             strDC[1] = 0;
  3239  02F8  01CF               	clrf	telaControlador@strDC+1
  3240  02F9                     l2108:
  3241                           
  3242                           ;./function.h: 254:         lcd_str("DC:");
  3243  02F9  30B7               	movlw	(low ((STR_18-__stringbase)| (0+32768)))& (0+255)
  3244  02FA  120A  158A  252A  120A  118A  	fcall	_lcd_str
  3245  02FF                     l2110:
  3246                           
  3247                           ;./function.h: 255:         lcd_dat(strDC[1]);
  3248  02FF  1283               	bcf	3,5	;RP0=0, select bank0
  3249  0300  1303               	bcf	3,6	;RP1=0, select bank0
  3250  0301  084F               	movf	telaControlador@strDC+1,w
  3251  0302  120A  158A  2597  120A  118A  	fcall	_lcd_dat
  3252  0307                     l2112:
  3253                           
  3254                           ;./function.h: 256:         lcd_dat(strDC[2]);
  3255  0307  1283               	bcf	3,5	;RP0=0, select bank0
  3256  0308  1303               	bcf	3,6	;RP1=0, select bank0
  3257  0309  0850               	movf	telaControlador@strDC+2,w
  3258  030A  120A  158A  2597  120A  118A  	fcall	_lcd_dat
  3259  030F                     l2114:
  3260                           
  3261                           ;./function.h: 257:         lcd_dat(strDC[3]);
  3262  030F  1283               	bcf	3,5	;RP0=0, select bank0
  3263  0310  1303               	bcf	3,6	;RP1=0, select bank0
  3264  0311  0851               	movf	telaControlador@strDC+3,w
  3265  0312  120A  158A  2597  120A  118A  	fcall	_lcd_dat
  3266  0317                     l2116:
  3267                           
  3268                           ;./function.h: 258:         lcd_dat('%');
  3269  0317  3025               	movlw	37
  3270  0318  120A  158A  2597  120A  118A  	fcall	_lcd_dat
  3271  031D                     l2118:
  3272                           
  3273                           ;./function.h: 259:         _delay((unsigned long)((500)*(4000000/4000.0)));
  3274  031D  3003               	movlw	3
  3275  031E  1283               	bcf	3,5	;RP0=0, select bank0
  3276  031F  1303               	bcf	3,6	;RP1=0, select bank0
  3277  0320  00C1               	movwf	??_telaControlador+2
  3278  0321  308A               	movlw	138
  3279  0322  00C0               	movwf	??_telaControlador+1
  3280  0323  3055               	movlw	85
  3281  0324  00BF               	movwf	??_telaControlador
  3282  0325                     u1787:
  3283  0325  0BBF               	decfsz	??_telaControlador,f
  3284  0326  2B25               	goto	u1787
  3285  0327  0BC0               	decfsz	??_telaControlador+1,f
  3286  0328  2B25               	goto	u1787
  3287  0329  0BC1               	decfsz	??_telaControlador+2,f
  3288  032A  2B25               	goto	u1787
  3289  032B                     l2120:
  3290                           
  3291                           ;./function.h: 260:         if(RB2 == 0){
  3292  032B  1283               	bcf	3,5	;RP0=0, select bank0
  3293  032C  1303               	bcf	3,6	;RP1=0, select bank0
  3294  032D  1906               	btfsc	6,2	;volatile
  3295  032E  2B30               	goto	u1581
  3296  032F  2B31               	goto	u1580
  3297  0330                     u1581:
  3298  0330  2B36               	goto	l146
  3299  0331                     u1580:
  3300  0331                     l2122:
  3301                           
  3302                           ;./function.h: 261:             RC1 = 0;
  3303  0331  1087               	bcf	7,1	;volatile
  3304  0332                     l2124:
  3305                           
  3306                           ;./function.h: 262:             CCPR1L = 0;
  3307  0332  0195               	clrf	21	;volatile
  3308                           
  3309                           ;./function.h: 263:             return 0;
  3310  0333  01BD               	clrf	?_telaControlador
  3311  0334  01BE               	clrf	?_telaControlador+1
  3312  0335  2B3C               	goto	l150
  3313  0336                     l146:	
  3314                           ;./function.h: 265:     }
  3315                           
  3316                           
  3317                           ;./function.h: 233:     while(RB2){
  3318  0336  1283               	bcf	3,5	;RP0=0, select bank0
  3319  0337  1303               	bcf	3,6	;RP1=0, select bank0
  3320  0338  1906               	btfsc	6,2	;volatile
  3321  0339  2B3B               	goto	u1591
  3322  033A  2B3C               	goto	u1590
  3323  033B                     u1591:
  3324  033B  2A7E               	goto	l2078
  3325  033C                     u1590:
  3326  033C                     l150:
  3327  033C  0008               	return
  3328  033D                     __end_of_telaControlador:
  3329                           
  3330                           	psect	text10
  3331  0D2A                     __ptext10:	
  3332 ;; *************** function _lcd_str *****************
  3333 ;; Defined at:
  3334 ;;		line 70 in file "lcd.c"
  3335 ;; Parameters:    Size  Location     Type
  3336 ;;  str             1    wreg     PTR const unsigned char 
  3337 ;;		 -> STR_20(13), STR_19(15), STR_18(4), STR_17(4), 
  3338 ;;		 -> STR_16(14), STR_15(9), STR_14(9), STR_13(11), 
  3339 ;;		 -> STR_12(15), STR_11(13), STR_10(16), STR_9(9), 
  3340 ;;		 -> STR_8(9), STR_7(11), STR_6(15), STR_5(11), 
  3341 ;;		 -> STR_4(17), STR_3(15), STR_2(15), STR_1(7), 
  3342 ;; Auto vars:     Size  Location     Type
  3343 ;;  str             1    6[COMMON] PTR const unsigned char 
  3344 ;;		 -> STR_20(13), STR_19(15), STR_18(4), STR_17(4), 
  3345 ;;		 -> STR_16(14), STR_15(9), STR_14(9), STR_13(11), 
  3346 ;;		 -> STR_12(15), STR_11(13), STR_10(16), STR_9(9), 
  3347 ;;		 -> STR_8(9), STR_7(11), STR_6(15), STR_5(11), 
  3348 ;;		 -> STR_4(17), STR_3(15), STR_2(15), STR_1(7), 
  3349 ;;  i               1    5[COMMON] unsigned char 
  3350 ;; Return value:  Size  Location     Type
  3351 ;;                  1    wreg      void 
  3352 ;; Registers used:
  3353 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3354 ;; Tracked objects:
  3355 ;;		On entry : 0/0
  3356 ;;		On exit  : 0/0
  3357 ;;		Unchanged: 0/0
  3358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3359 ;;      Params:         0       0       0       0       0
  3360 ;;      Locals:         2       0       0       0       0
  3361 ;;      Temps:          1       0       0       0       0
  3362 ;;      Totals:         3       0       0       0       0
  3363 ;;Total ram usage:        3 bytes
  3364 ;; Hardware stack levels used: 1
  3365 ;; Hardware stack levels required when called: 2
  3366 ;; This function calls:
  3367 ;;		_lcd_dat
  3368 ;; This function is called by:
  3369 ;;		_imprimirTemp
  3370 ;;		_telaInicio
  3371 ;;		_alterarSetPoint
  3372 ;;		_telaSetPoint
  3373 ;;		_telaGravarEEPROM
  3374 ;;		_telaControlador
  3375 ;;		_main
  3376 ;; This function uses a non-reentrant model
  3377 ;;
  3378                           
  3379                           
  3380                           ;psect for function _lcd_str
  3381  0D2A                     _lcd_str:
  3382                           
  3383                           ;incstack = 0
  3384                           ; Regs used in _lcd_str: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3385                           ;lcd_str@str stored from wreg
  3386  0D2A  00F6               	movwf	lcd_str@str
  3387  0D2B                     l1728:
  3388                           
  3389                           ;lcd.c: 70: void lcd_str(const char* str);lcd.c: 71: {;lcd.c: 72:  unsigned char i=0;
  3390  0D2B  01F5               	clrf	lcd_str@i
  3391                           
  3392                           ;lcd.c: 74:  while(str[i] != 0 )
  3393  0D2C  2D3E               	goto	l1734
  3394  0D2D                     l1730:
  3395                           
  3396                           ;lcd.c: 75:  {;lcd.c: 76:    lcd_dat(str[i]);
  3397  0D2D  0875               	movf	lcd_str@i,w
  3398  0D2E  0776               	addwf	lcd_str@str,w
  3399  0D2F  0084               	movwf	4
  3400  0D30  120A  118A  2003  120A  158A  	fcall	stringdir
  3401  0D35  120A  158A  2597  120A  158A  	fcall	_lcd_dat
  3402  0D3A                     l1732:
  3403                           
  3404                           ;lcd.c: 77:    i++;
  3405  0D3A  3001               	movlw	1
  3406  0D3B  00F4               	movwf	??_lcd_str
  3407  0D3C  0874               	movf	??_lcd_str,w
  3408  0D3D  07F5               	addwf	lcd_str@i,f
  3409  0D3E                     l1734:
  3410                           
  3411                           ;lcd.c: 74:  while(str[i] != 0 )
  3412  0D3E  0875               	movf	lcd_str@i,w
  3413  0D3F  0776               	addwf	lcd_str@str,w
  3414  0D40  0084               	movwf	4
  3415  0D41  120A  118A  2003  120A  158A  	fcall	stringdir
  3416  0D46  3A00               	xorlw	0
  3417  0D47  1D03               	skipz
  3418  0D48  2D4A               	goto	u1071
  3419  0D49  2D4B               	goto	u1070
  3420  0D4A                     u1071:
  3421  0D4A  2D2D               	goto	l1730
  3422  0D4B                     u1070:
  3423  0D4B                     l194:
  3424  0D4B  0008               	return
  3425  0D4C                     __end_of_lcd_str:
  3426                           
  3427                           	psect	text11
  3428  0D97                     __ptext11:	
  3429 ;; *************** function _lcd_dat *****************
  3430 ;; Defined at:
  3431 ;;		line 40 in file "lcd.c"
  3432 ;; Parameters:    Size  Location     Type
  3433 ;;  val             1    wreg     unsigned char 
  3434 ;; Auto vars:     Size  Location     Type
  3435 ;;  val             1    3[COMMON] unsigned char 
  3436 ;; Return value:  Size  Location     Type
  3437 ;;                  1    wreg      void 
  3438 ;; Registers used:
  3439 ;;		wreg, status,2, status,0, pclath, cstack
  3440 ;; Tracked objects:
  3441 ;;		On entry : 0/0
  3442 ;;		On exit  : 0/0
  3443 ;;		Unchanged: 0/0
  3444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3445 ;;      Params:         0       0       0       0       0
  3446 ;;      Locals:         1       0       0       0       0
  3447 ;;      Temps:          2       0       0       0       0
  3448 ;;      Totals:         3       0       0       0       0
  3449 ;;Total ram usage:        3 bytes
  3450 ;; Hardware stack levels used: 1
  3451 ;; Hardware stack levels required when called: 1
  3452 ;; This function calls:
  3453 ;;		_lcd_wr
  3454 ;; This function is called by:
  3455 ;;		_imprimirTemp
  3456 ;;		_telaInicio
  3457 ;;		_alterarSetPoint
  3458 ;;		_telaSetPoint
  3459 ;;		_telaGravarEEPROM
  3460 ;;		_telaControlador
  3461 ;;		_lcd_str
  3462 ;; This function uses a non-reentrant model
  3463 ;;
  3464                           
  3465                           
  3466                           ;psect for function _lcd_dat
  3467  0D97                     _lcd_dat:
  3468                           
  3469                           ;incstack = 0
  3470                           ; Regs used in _lcd_dat: [wreg+status,2+status,0+pclath+cstack]
  3471                           ;lcd_dat@val stored from wreg
  3472  0D97  00F3               	movwf	lcd_dat@val
  3473  0D98                     l1620:
  3474                           
  3475                           ;lcd.c: 40: void lcd_dat(unsigned char val);lcd.c: 41: {;lcd.c: 42:  PORTEbits.RE1=1;
  3476  0D98  1283               	bcf	3,5	;RP0=0, select bank0
  3477  0D99  1303               	bcf	3,6	;RP1=0, select bank0
  3478  0D9A  1489               	bsf	9,1	;volatile
  3479  0D9B                     l1622:
  3480                           
  3481                           ;lcd.c: 43:         lcd_wr(val);
  3482  0D9B  0873               	movf	lcd_dat@val,w
  3483  0D9C  120A  118A  20C3  120A  158A  	fcall	_lcd_wr
  3484  0DA1                     l1624:
  3485                           
  3486                           ;lcd.c: 44:         PORTEbits.RE0=1;
  3487  0DA1  1283               	bcf	3,5	;RP0=0, select bank0
  3488  0DA2  1303               	bcf	3,6	;RP1=0, select bank0
  3489  0DA3  1409               	bsf	9,0	;volatile
  3490  0DA4                     l1626:
  3491                           
  3492                           ;lcd.c: 45:         _delay((unsigned long)((3)*(4000000/4000.0)));
  3493  0DA4  3004               	movlw	4
  3494  0DA5  00F2               	movwf	??_lcd_dat+1
  3495  0DA6  30E4               	movlw	228
  3496  0DA7  00F1               	movwf	??_lcd_dat
  3497  0DA8                     u1797:
  3498  0DA8  0BF1               	decfsz	??_lcd_dat,f
  3499  0DA9  2DA8               	goto	u1797
  3500  0DAA  0BF2               	decfsz	??_lcd_dat+1,f
  3501  0DAB  2DA8               	goto	u1797
  3502  0DAC  0000               	nop
  3503  0DAD                     l1628:
  3504                           
  3505                           ;lcd.c: 46:         PORTEbits.RE1=0;
  3506  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  3507  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  3508  0DAF  1089               	bcf	9,1	;volatile
  3509  0DB0                     l1630:
  3510                           
  3511                           ;lcd.c: 47:         _delay((unsigned long)((3)*(4000000/4000.0)));
  3512  0DB0  3004               	movlw	4
  3513  0DB1  00F2               	movwf	??_lcd_dat+1
  3514  0DB2  30E4               	movlw	228
  3515  0DB3  00F1               	movwf	??_lcd_dat
  3516  0DB4                     u1807:
  3517  0DB4  0BF1               	decfsz	??_lcd_dat,f
  3518  0DB5  2DB4               	goto	u1807
  3519  0DB6  0BF2               	decfsz	??_lcd_dat+1,f
  3520  0DB7  2DB4               	goto	u1807
  3521  0DB8  0000               	nop
  3522  0DB9                     l1632:
  3523                           
  3524                           ;lcd.c: 48:  PORTEbits.RE1=1;
  3525  0DB9  1283               	bcf	3,5	;RP0=0, select bank0
  3526  0DBA  1303               	bcf	3,6	;RP1=0, select bank0
  3527  0DBB  1489               	bsf	9,1	;volatile
  3528  0DBC                     l185:
  3529  0DBC  0008               	return
  3530  0DBD                     __end_of_lcd_dat:
  3531                           
  3532                           	psect	text12
  3533  012E                     __ptext12:	
  3534 ;; *************** function _itoa *****************
  3535 ;; Defined at:
  3536 ;;		line 19 in file "itoa.c"
  3537 ;; Parameters:    Size  Location     Type
  3538 ;;  val             2    0[BANK0 ] unsigned int 
  3539 ;;  str             1    2[BANK0 ] PTR unsigned char 
  3540 ;;		 -> telaControlador@strDC(6), telaControlador@str(6), imprimirTemp@str(6), 
  3541 ;; Auto vars:     Size  Location     Type
  3542 ;;		None
  3543 ;; Return value:  Size  Location     Type
  3544 ;;                  1    wreg      void 
  3545 ;; Registers used:
  3546 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3547 ;; Tracked objects:
  3548 ;;		On entry : 0/0
  3549 ;;		On exit  : 0/0
  3550 ;;		Unchanged: 0/0
  3551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3552 ;;      Params:         0       3       0       0       0
  3553 ;;      Locals:         0       0       0       0       0
  3554 ;;      Temps:          0       1       0       0       0
  3555 ;;      Totals:         0       4       0       0       0
  3556 ;;Total ram usage:        4 bytes
  3557 ;; Hardware stack levels used: 1
  3558 ;; Hardware stack levels required when called: 1
  3559 ;; This function calls:
  3560 ;;		___lwdiv
  3561 ;;		___lwmod
  3562 ;; This function is called by:
  3563 ;;		_imprimirTemp
  3564 ;;		_telaControlador
  3565 ;; This function uses a non-reentrant model
  3566 ;;
  3567                           
  3568                           
  3569                           ;psect for function _itoa
  3570  012E                     _itoa:
  3571  012E                     l1710:	
  3572                           ;incstack = 0
  3573                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3574                           
  3575                           
  3576                           ;itoa.c: 19: void itoa(unsigned int val, char* str );itoa.c: 20: {;itoa.c: 21:   str[0]=
      +                          (val/10000)+0x30;
  3577  012E  3010               	movlw	16
  3578  012F  00F6               	movwf	___lwdiv@divisor
  3579  0130  3027               	movlw	39
  3580  0131  00F7               	movwf	___lwdiv@divisor+1
  3581  0132  1283               	bcf	3,5	;RP0=0, select bank0
  3582  0133  1303               	bcf	3,6	;RP1=0, select bank0
  3583  0134  0821               	movf	itoa@val+1,w
  3584  0135  00F9               	movwf	___lwdiv@dividend+1
  3585  0136  0820               	movf	itoa@val,w
  3586  0137  00F8               	movwf	___lwdiv@dividend
  3587  0138  120A  158A  26CF  120A  118A  	fcall	___lwdiv
  3588  013D  0876               	movf	?___lwdiv,w
  3589  013E  3E30               	addlw	48
  3590  013F  1283               	bcf	3,5	;RP0=0, select bank0
  3591  0140  1303               	bcf	3,6	;RP1=0, select bank0
  3592  0141  00A3               	movwf	??_itoa
  3593  0142  0822               	movf	itoa@str,w
  3594  0143  0084               	movwf	4
  3595  0144  0823               	movf	??_itoa,w
  3596  0145  1383               	bcf	3,7	;select IRP bank0
  3597  0146  0080               	movwf	0
  3598                           
  3599                           ;itoa.c: 22:   str[1]=((val%10000)/1000)+0x30;
  3600  0147  30E8               	movlw	232
  3601  0148  00F6               	movwf	___lwdiv@divisor
  3602  0149  3003               	movlw	3
  3603  014A  00F7               	movwf	___lwdiv@divisor+1
  3604  014B  0821               	movf	itoa@val+1,w
  3605  014C  00F3               	movwf	___lwmod@dividend+1
  3606  014D  0820               	movf	itoa@val,w
  3607  014E  00F2               	movwf	___lwmod@dividend
  3608  014F  3010               	movlw	16
  3609  0150  00F0               	movwf	___lwmod@divisor
  3610  0151  3027               	movlw	39
  3611  0152  00F1               	movwf	___lwmod@divisor+1
  3612  0153  120A  158A  2652  120A  118A  	fcall	___lwmod
  3613  0158  0871               	movf	?___lwmod+1,w
  3614  0159  00F9               	movwf	___lwdiv@dividend+1
  3615  015A  0870               	movf	?___lwmod,w
  3616  015B  00F8               	movwf	___lwdiv@dividend
  3617  015C  120A  158A  26CF  120A  118A  	fcall	___lwdiv
  3618  0161  0876               	movf	?___lwdiv,w
  3619  0162  3E30               	addlw	48
  3620  0163  1283               	bcf	3,5	;RP0=0, select bank0
  3621  0164  1303               	bcf	3,6	;RP1=0, select bank0
  3622  0165  00A3               	movwf	??_itoa
  3623  0166  0A22               	incf	itoa@str,w
  3624  0167  0084               	movwf	4
  3625  0168  0823               	movf	??_itoa,w
  3626  0169  1383               	bcf	3,7	;select IRP bank0
  3627  016A  0080               	movwf	0
  3628                           
  3629                           ;itoa.c: 23:   str[2]=((val%1000)/100)+0x30;
  3630  016B  3064               	movlw	100
  3631  016C  00F6               	movwf	___lwdiv@divisor
  3632  016D  3000               	movlw	0
  3633  016E  00F7               	movwf	___lwdiv@divisor+1
  3634  016F  0821               	movf	itoa@val+1,w
  3635  0170  00F3               	movwf	___lwmod@dividend+1
  3636  0171  0820               	movf	itoa@val,w
  3637  0172  00F2               	movwf	___lwmod@dividend
  3638  0173  30E8               	movlw	232
  3639  0174  00F0               	movwf	___lwmod@divisor
  3640  0175  3003               	movlw	3
  3641  0176  00F1               	movwf	___lwmod@divisor+1
  3642  0177  120A  158A  2652  120A  118A  	fcall	___lwmod
  3643  017C  0871               	movf	?___lwmod+1,w
  3644  017D  00F9               	movwf	___lwdiv@dividend+1
  3645  017E  0870               	movf	?___lwmod,w
  3646  017F  00F8               	movwf	___lwdiv@dividend
  3647  0180  120A  158A  26CF  120A  118A  	fcall	___lwdiv
  3648  0185  0876               	movf	?___lwdiv,w
  3649  0186  3E30               	addlw	48
  3650  0187  1283               	bcf	3,5	;RP0=0, select bank0
  3651  0188  1303               	bcf	3,6	;RP1=0, select bank0
  3652  0189  00A3               	movwf	??_itoa
  3653  018A  0822               	movf	itoa@str,w
  3654  018B  3E02               	addlw	2
  3655  018C  0084               	movwf	4
  3656  018D  0823               	movf	??_itoa,w
  3657  018E  1383               	bcf	3,7	;select IRP bank0
  3658  018F  0080               	movwf	0
  3659                           
  3660                           ;itoa.c: 24:   str[3]=((val%100)/10)+0x30;
  3661  0190  300A               	movlw	10
  3662  0191  00F6               	movwf	___lwdiv@divisor
  3663  0192  3000               	movlw	0
  3664  0193  00F7               	movwf	___lwdiv@divisor+1
  3665  0194  0821               	movf	itoa@val+1,w
  3666  0195  00F3               	movwf	___lwmod@dividend+1
  3667  0196  0820               	movf	itoa@val,w
  3668  0197  00F2               	movwf	___lwmod@dividend
  3669  0198  3064               	movlw	100
  3670  0199  00F0               	movwf	___lwmod@divisor
  3671  019A  3000               	movlw	0
  3672  019B  00F1               	movwf	___lwmod@divisor+1
  3673  019C  120A  158A  2652  120A  118A  	fcall	___lwmod
  3674  01A1  0871               	movf	?___lwmod+1,w
  3675  01A2  00F9               	movwf	___lwdiv@dividend+1
  3676  01A3  0870               	movf	?___lwmod,w
  3677  01A4  00F8               	movwf	___lwdiv@dividend
  3678  01A5  120A  158A  26CF  120A  118A  	fcall	___lwdiv
  3679  01AA  0876               	movf	?___lwdiv,w
  3680  01AB  3E30               	addlw	48
  3681  01AC  1283               	bcf	3,5	;RP0=0, select bank0
  3682  01AD  1303               	bcf	3,6	;RP1=0, select bank0
  3683  01AE  00A3               	movwf	??_itoa
  3684  01AF  0822               	movf	itoa@str,w
  3685  01B0  3E03               	addlw	3
  3686  01B1  0084               	movwf	4
  3687  01B2  0823               	movf	??_itoa,w
  3688  01B3  1383               	bcf	3,7	;select IRP bank0
  3689  01B4  0080               	movwf	0
  3690                           
  3691                           ;itoa.c: 25:   str[4]=(val%10)+0x30;
  3692  01B5  300A               	movlw	10
  3693  01B6  00F0               	movwf	___lwmod@divisor
  3694  01B7  3000               	movlw	0
  3695  01B8  00F1               	movwf	___lwmod@divisor+1
  3696  01B9  0821               	movf	itoa@val+1,w
  3697  01BA  00F3               	movwf	___lwmod@dividend+1
  3698  01BB  0820               	movf	itoa@val,w
  3699  01BC  00F2               	movwf	___lwmod@dividend
  3700  01BD  120A  158A  2652  120A  118A  	fcall	___lwmod
  3701  01C2  0870               	movf	?___lwmod,w
  3702  01C3  3E30               	addlw	48
  3703  01C4  1283               	bcf	3,5	;RP0=0, select bank0
  3704  01C5  1303               	bcf	3,6	;RP1=0, select bank0
  3705  01C6  00A3               	movwf	??_itoa
  3706  01C7  0822               	movf	itoa@str,w
  3707  01C8  3E04               	addlw	4
  3708  01C9  0084               	movwf	4
  3709  01CA  0823               	movf	??_itoa,w
  3710  01CB  1383               	bcf	3,7	;select IRP bank0
  3711  01CC  0080               	movwf	0
  3712  01CD                     l1712:
  3713                           
  3714                           ;itoa.c: 26:   str[5]=0;
  3715  01CD  0822               	movf	itoa@str,w
  3716  01CE  3E05               	addlw	5
  3717  01CF  0084               	movwf	4
  3718  01D0  0180               	clrf	0
  3719  01D1                     l197:
  3720  01D1  0008               	return
  3721  01D2                     __end_of_itoa:
  3722                           
  3723                           	psect	text13
  3724  0E52                     __ptext13:	
  3725 ;; *************** function ___lwmod *****************
  3726 ;; Defined at:
  3727 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  3728 ;; Parameters:    Size  Location     Type
  3729 ;;  divisor         2    0[COMMON] unsigned int 
  3730 ;;  dividend        2    2[COMMON] unsigned int 
  3731 ;; Auto vars:     Size  Location     Type
  3732 ;;  counter         1    5[COMMON] unsigned char 
  3733 ;; Return value:  Size  Location     Type
  3734 ;;                  2    0[COMMON] unsigned int 
  3735 ;; Registers used:
  3736 ;;		wreg, status,2, status,0
  3737 ;; Tracked objects:
  3738 ;;		On entry : 0/0
  3739 ;;		On exit  : 0/0
  3740 ;;		Unchanged: 0/0
  3741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3742 ;;      Params:         4       0       0       0       0
  3743 ;;      Locals:         1       0       0       0       0
  3744 ;;      Temps:          1       0       0       0       0
  3745 ;;      Totals:         6       0       0       0       0
  3746 ;;Total ram usage:        6 bytes
  3747 ;; Hardware stack levels used: 1
  3748 ;; This function calls:
  3749 ;;		Nothing
  3750 ;; This function is called by:
  3751 ;;		_main
  3752 ;;		_itoa
  3753 ;; This function uses a non-reentrant model
  3754 ;;
  3755                           
  3756                           
  3757                           ;psect for function ___lwmod
  3758  0E52                     ___lwmod:
  3759  0E52                     l1678:	
  3760                           ;incstack = 0
  3761                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3762                           
  3763  0E52  0870               	movf	___lwmod@divisor,w
  3764  0E53  0471               	iorwf	___lwmod@divisor+1,w
  3765  0E54  1903               	btfsc	3,2
  3766  0E55  2E57               	goto	u1001
  3767  0E56  2E58               	goto	u1000
  3768  0E57                     u1001:
  3769  0E57  2E87               	goto	l1696
  3770  0E58                     u1000:
  3771  0E58                     l1680:
  3772  0E58  01F5               	clrf	___lwmod@counter
  3773  0E59  0AF5               	incf	___lwmod@counter,f
  3774  0E5A  2E66               	goto	l1686
  3775  0E5B                     l1682:
  3776  0E5B  3001               	movlw	1
  3777  0E5C                     u1015:
  3778  0E5C  1003               	clrc
  3779  0E5D  0DF0               	rlf	___lwmod@divisor,f
  3780  0E5E  0DF1               	rlf	___lwmod@divisor+1,f
  3781  0E5F  3EFF               	addlw	-1
  3782  0E60  1D03               	skipz
  3783  0E61  2E5C               	goto	u1015
  3784  0E62                     l1684:
  3785  0E62  3001               	movlw	1
  3786  0E63  00F4               	movwf	??___lwmod
  3787  0E64  0874               	movf	??___lwmod,w
  3788  0E65  07F5               	addwf	___lwmod@counter,f
  3789  0E66                     l1686:
  3790  0E66  1FF1               	btfss	___lwmod@divisor+1,7
  3791  0E67  2E69               	goto	u1021
  3792  0E68  2E6A               	goto	u1020
  3793  0E69                     u1021:
  3794  0E69  2E5B               	goto	l1682
  3795  0E6A                     u1020:
  3796  0E6A                     l1688:
  3797  0E6A  0871               	movf	___lwmod@divisor+1,w
  3798  0E6B  0273               	subwf	___lwmod@dividend+1,w
  3799  0E6C  1D03               	skipz
  3800  0E6D  2E70               	goto	u1035
  3801  0E6E  0870               	movf	___lwmod@divisor,w
  3802  0E6F  0272               	subwf	___lwmod@dividend,w
  3803  0E70                     u1035:
  3804  0E70  1C03               	skipc
  3805  0E71  2E73               	goto	u1031
  3806  0E72  2E74               	goto	u1030
  3807  0E73                     u1031:
  3808  0E73  2E7A               	goto	l1692
  3809  0E74                     u1030:
  3810  0E74                     l1690:
  3811  0E74  0870               	movf	___lwmod@divisor,w
  3812  0E75  02F2               	subwf	___lwmod@dividend,f
  3813  0E76  0871               	movf	___lwmod@divisor+1,w
  3814  0E77  1C03               	skipc
  3815  0E78  03F3               	decf	___lwmod@dividend+1,f
  3816  0E79  02F3               	subwf	___lwmod@dividend+1,f
  3817  0E7A                     l1692:
  3818  0E7A  3001               	movlw	1
  3819  0E7B                     u1045:
  3820  0E7B  1003               	clrc
  3821  0E7C  0CF1               	rrf	___lwmod@divisor+1,f
  3822  0E7D  0CF0               	rrf	___lwmod@divisor,f
  3823  0E7E  3EFF               	addlw	-1
  3824  0E7F  1D03               	skipz
  3825  0E80  2E7B               	goto	u1045
  3826  0E81                     l1694:
  3827  0E81  3001               	movlw	1
  3828  0E82  02F5               	subwf	___lwmod@counter,f
  3829  0E83  1D03               	btfss	3,2
  3830  0E84  2E86               	goto	u1051
  3831  0E85  2E87               	goto	u1050
  3832  0E86                     u1051:
  3833  0E86  2E6A               	goto	l1688
  3834  0E87                     u1050:
  3835  0E87                     l1696:
  3836  0E87  0873               	movf	___lwmod@dividend+1,w
  3837  0E88  00F1               	movwf	?___lwmod+1
  3838  0E89  0872               	movf	___lwmod@dividend,w
  3839  0E8A  00F0               	movwf	?___lwmod
  3840  0E8B                     l682:
  3841  0E8B  0008               	return
  3842  0E8C                     __end_of___lwmod:
  3843                           
  3844                           	psect	text14
  3845  0ECF                     __ptext14:	
  3846 ;; *************** function ___lwdiv *****************
  3847 ;; Defined at:
  3848 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  3849 ;; Parameters:    Size  Location     Type
  3850 ;;  divisor         2    6[COMMON] unsigned int 
  3851 ;;  dividend        2    8[COMMON] unsigned int 
  3852 ;; Auto vars:     Size  Location     Type
  3853 ;;  quotient        2   11[COMMON] unsigned int 
  3854 ;;  counter         1   13[COMMON] unsigned char 
  3855 ;; Return value:  Size  Location     Type
  3856 ;;                  2    6[COMMON] unsigned int 
  3857 ;; Registers used:
  3858 ;;		wreg, status,2, status,0
  3859 ;; Tracked objects:
  3860 ;;		On entry : 0/0
  3861 ;;		On exit  : 0/0
  3862 ;;		Unchanged: 0/0
  3863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3864 ;;      Params:         4       0       0       0       0
  3865 ;;      Locals:         3       0       0       0       0
  3866 ;;      Temps:          1       0       0       0       0
  3867 ;;      Totals:         8       0       0       0       0
  3868 ;;Total ram usage:        8 bytes
  3869 ;; Hardware stack levels used: 1
  3870 ;; This function calls:
  3871 ;;		Nothing
  3872 ;; This function is called by:
  3873 ;;		_main
  3874 ;;		_itoa
  3875 ;; This function uses a non-reentrant model
  3876 ;;
  3877                           
  3878                           
  3879                           ;psect for function ___lwdiv
  3880  0ECF                     ___lwdiv:
  3881  0ECF                     l1652:	
  3882                           ;incstack = 0
  3883                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3884                           
  3885  0ECF  01FB               	clrf	___lwdiv@quotient
  3886  0ED0  01FC               	clrf	___lwdiv@quotient+1
  3887  0ED1                     l1654:
  3888  0ED1  0876               	movf	___lwdiv@divisor,w
  3889  0ED2  0477               	iorwf	___lwdiv@divisor+1,w
  3890  0ED3  1903               	btfsc	3,2
  3891  0ED4  2ED6               	goto	u931
  3892  0ED5  2ED7               	goto	u930
  3893  0ED6                     u931:
  3894  0ED6  2F0E               	goto	l1674
  3895  0ED7                     u930:
  3896  0ED7                     l1656:
  3897  0ED7  01FD               	clrf	___lwdiv@counter
  3898  0ED8  0AFD               	incf	___lwdiv@counter,f
  3899  0ED9  2EE5               	goto	l1662
  3900  0EDA                     l1658:
  3901  0EDA  3001               	movlw	1
  3902  0EDB                     u945:
  3903  0EDB  1003               	clrc
  3904  0EDC  0DF6               	rlf	___lwdiv@divisor,f
  3905  0EDD  0DF7               	rlf	___lwdiv@divisor+1,f
  3906  0EDE  3EFF               	addlw	-1
  3907  0EDF  1D03               	skipz
  3908  0EE0  2EDB               	goto	u945
  3909  0EE1                     l1660:
  3910  0EE1  3001               	movlw	1
  3911  0EE2  00FA               	movwf	??___lwdiv
  3912  0EE3  087A               	movf	??___lwdiv,w
  3913  0EE4  07FD               	addwf	___lwdiv@counter,f
  3914  0EE5                     l1662:
  3915  0EE5  1FF7               	btfss	___lwdiv@divisor+1,7
  3916  0EE6  2EE8               	goto	u951
  3917  0EE7  2EE9               	goto	u950
  3918  0EE8                     u951:
  3919  0EE8  2EDA               	goto	l1658
  3920  0EE9                     u950:
  3921  0EE9                     l1664:
  3922  0EE9  3001               	movlw	1
  3923  0EEA                     u965:
  3924  0EEA  1003               	clrc
  3925  0EEB  0DFB               	rlf	___lwdiv@quotient,f
  3926  0EEC  0DFC               	rlf	___lwdiv@quotient+1,f
  3927  0EED  3EFF               	addlw	-1
  3928  0EEE  1D03               	skipz
  3929  0EEF  2EEA               	goto	u965
  3930  0EF0  0877               	movf	___lwdiv@divisor+1,w
  3931  0EF1  0279               	subwf	___lwdiv@dividend+1,w
  3932  0EF2  1D03               	skipz
  3933  0EF3  2EF6               	goto	u975
  3934  0EF4  0876               	movf	___lwdiv@divisor,w
  3935  0EF5  0278               	subwf	___lwdiv@dividend,w
  3936  0EF6                     u975:
  3937  0EF6  1C03               	skipc
  3938  0EF7  2EF9               	goto	u971
  3939  0EF8  2EFA               	goto	u970
  3940  0EF9                     u971:
  3941  0EF9  2F01               	goto	l1670
  3942  0EFA                     u970:
  3943  0EFA                     l1666:
  3944  0EFA  0876               	movf	___lwdiv@divisor,w
  3945  0EFB  02F8               	subwf	___lwdiv@dividend,f
  3946  0EFC  0877               	movf	___lwdiv@divisor+1,w
  3947  0EFD  1C03               	skipc
  3948  0EFE  03F9               	decf	___lwdiv@dividend+1,f
  3949  0EFF  02F9               	subwf	___lwdiv@dividend+1,f
  3950  0F00                     l1668:
  3951  0F00  147B               	bsf	___lwdiv@quotient,0
  3952  0F01                     l1670:
  3953  0F01  3001               	movlw	1
  3954  0F02                     u985:
  3955  0F02  1003               	clrc
  3956  0F03  0CF7               	rrf	___lwdiv@divisor+1,f
  3957  0F04  0CF6               	rrf	___lwdiv@divisor,f
  3958  0F05  3EFF               	addlw	-1
  3959  0F06  1D03               	skipz
  3960  0F07  2F02               	goto	u985
  3961  0F08                     l1672:
  3962  0F08  3001               	movlw	1
  3963  0F09  02FD               	subwf	___lwdiv@counter,f
  3964  0F0A  1D03               	btfss	3,2
  3965  0F0B  2F0D               	goto	u991
  3966  0F0C  2F0E               	goto	u990
  3967  0F0D                     u991:
  3968  0F0D  2EE9               	goto	l1664
  3969  0F0E                     u990:
  3970  0F0E                     l1674:
  3971  0F0E  087C               	movf	___lwdiv@quotient+1,w
  3972  0F0F  00F7               	movwf	?___lwdiv+1
  3973  0F10  087B               	movf	___lwdiv@quotient,w
  3974  0F11  00F6               	movwf	?___lwdiv
  3975  0F12                     l672:
  3976  0F12  0008               	return
  3977  0F13                     __end_of___lwdiv:
  3978                           
  3979                           	psect	text15
  3980  0632                     __ptext15:	
  3981 ;; *************** function _iniciarControlador *****************
  3982 ;; Defined at:
  3983 ;;		line 176 in file "./function.h"
  3984 ;; Parameters:    Size  Location     Type
  3985 ;;		None
  3986 ;; Auto vars:     Size  Location     Type
  3987 ;;  dutyCycle       4   25[BANK0 ] long 
  3988 ;;  num_dac         4   21[BANK0 ] long 
  3989 ;;  erro            2   19[BANK0 ] int 
  3990 ;;  ki              2    0        int 
  3991 ;;  kp              2    0        int 
  3992 ;;  tempAtual       2   17[BANK0 ] int 
  3993 ;; Return value:  Size  Location     Type
  3994 ;;                  2    7[BANK0 ] int 
  3995 ;; Registers used:
  3996 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3997 ;; Tracked objects:
  3998 ;;		On entry : 0/0
  3999 ;;		On exit  : 0/0
  4000 ;;		Unchanged: 0/0
  4001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4002 ;;      Params:         0       2       0       0       0
  4003 ;;      Locals:         0      12       0       0       0
  4004 ;;      Temps:          0       8       0       0       0
  4005 ;;      Totals:         0      22       0       0       0
  4006 ;;Total ram usage:       22 bytes
  4007 ;; Hardware stack levels used: 1
  4008 ;; Hardware stack levels required when called: 2
  4009 ;; This function calls:
  4010 ;;		___aldiv
  4011 ;;		___wmul
  4012 ;;		_verificarTemperatura
  4013 ;; This function is called by:
  4014 ;;		_telaControlador
  4015 ;; This function uses a non-reentrant model
  4016 ;;
  4017                           
  4018                           
  4019                           ;psect for function _iniciarControlador
  4020  0632                     _iniciarControlador:
  4021  0632                     l1832:	
  4022                           ;incstack = 0
  4023                           ; Regs used in _iniciarControlador: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4024                           
  4025                           
  4026                           ;./function.h: 177:     int tempAtual = verificarTemperatura();
  4027  0632  120A  158A  25EA  120A  118A  	fcall	_verificarTemperatura
  4028  0637  0877               	movf	?_verificarTemperatura+1,w
  4029  0638  1283               	bcf	3,5	;RP0=0, select bank0
  4030  0639  1303               	bcf	3,6	;RP1=0, select bank0
  4031  063A  00B2               	movwf	iniciarControlador@tempAtual+1
  4032  063B  0876               	movf	?_verificarTemperatura,w
  4033  063C  00B1               	movwf	iniciarControlador@tempAtual
  4034  063D                     l1834:
  4035  063D                     l1836:
  4036                           
  4037                           ;./function.h: 181:     long int num_dac;;./function.h: 182:     long int dutyCycle;;./f
      +                          unction.h: 184:     erro = setPoint*10 - tempAtual;
  4038  063D  086B               	movf	_setPoint+1,w
  4039  063E  00F1               	movwf	___wmul@multiplier+1
  4040  063F  086A               	movf	_setPoint,w
  4041  0640  00F0               	movwf	___wmul@multiplier
  4042  0641  300A               	movlw	10
  4043  0642  00F2               	movwf	___wmul@multiplicand
  4044  0643  3000               	movlw	0
  4045  0644  00F3               	movwf	___wmul@multiplicand+1
  4046  0645  120A  158A  254C  120A  118A  	fcall	___wmul
  4047  064A  1283               	bcf	3,5	;RP0=0, select bank0
  4048  064B  1303               	bcf	3,6	;RP1=0, select bank0
  4049  064C  0831               	movf	iniciarControlador@tempAtual,w
  4050  064D  0270               	subwf	?___wmul,w
  4051  064E  00B3               	movwf	iniciarControlador@erro
  4052  064F  0832               	movf	iniciarControlador@tempAtual+1,w
  4053  0650  1C03               	skipc
  4054  0651  0A32               	incf	iniciarControlador@tempAtual+1,w
  4055  0652  0271               	subwf	?___wmul+1,w
  4056  0653  00B4               	movwf	iniciarControlador@erro+1
  4057  0654                     l1838:
  4058                           
  4059                           ;./function.h: 186:     if(pi < 100000){
  4060  0654  1BDD               	btfsc	_pi+3,7
  4061  0655  2E69               	goto	u1220
  4062  0656  085D               	movf	_pi+3,w
  4063  0657  1D03               	btfss	3,2
  4064  0658  2E68               	goto	u1221
  4065  0659  3001               	movlw	1
  4066  065A  025C               	subwf	_pi+2,w
  4067  065B  1D03               	skipz
  4068  065C  2E65               	goto	u1223
  4069  065D  3086               	movlw	134
  4070  065E  025B               	subwf	_pi+1,w
  4071  065F  1D03               	skipz
  4072  0660  2E65               	goto	u1223
  4073  0661  30A0               	movlw	160
  4074  0662  025A               	subwf	_pi,w
  4075  0663  1D03               	skipz
  4076  0664  2E65               	goto	u1223
  4077  0665                     u1223:
  4078  0665  1803               	btfsc	3,0
  4079  0666  2E68               	goto	u1221
  4080  0667  2E69               	goto	u1220
  4081  0668                     u1221:
  4082  0668  2E9B               	goto	l1842
  4083  0669                     u1220:
  4084  0669                     l1840:
  4085                           
  4086                           ;./function.h: 187:         pi += erro * ki;
  4087  0669  1283               	bcf	3,5	;RP0=0, select bank0
  4088  066A  1303               	bcf	3,6	;RP1=0, select bank0
  4089  066B  0834               	movf	iniciarControlador@erro+1,w
  4090  066C  00F1               	movwf	___wmul@multiplier+1
  4091  066D  0833               	movf	iniciarControlador@erro,w
  4092  066E  00F0               	movwf	___wmul@multiplier
  4093  066F  300A               	movlw	10
  4094  0670  00F2               	movwf	___wmul@multiplicand
  4095  0671  3000               	movlw	0
  4096  0672  00F3               	movwf	___wmul@multiplicand+1
  4097  0673  120A  158A  254C  120A  118A  	fcall	___wmul
  4098  0678  0870               	movf	?___wmul,w
  4099  0679  1283               	bcf	3,5	;RP0=0, select bank0
  4100  067A  1303               	bcf	3,6	;RP1=0, select bank0
  4101  067B  00A9               	movwf	??_iniciarControlador
  4102  067C  0871               	movf	?___wmul+1,w
  4103  067D  00AA               	movwf	??_iniciarControlador+1
  4104  067E  3000               	movlw	0
  4105  067F  1BAA               	btfsc	??_iniciarControlador+1,7
  4106  0680  30FF               	movlw	255
  4107  0681  00AB               	movwf	??_iniciarControlador+2
  4108  0682  00AC               	movwf	??_iniciarControlador+3
  4109  0683  0829               	movf	??_iniciarControlador,w
  4110  0684  07DA               	addwf	_pi,f
  4111  0685  082A               	movf	??_iniciarControlador+1,w
  4112  0686  1103               	clrz
  4113  0687  1803               	skipnc
  4114  0688  3E01               	addlw	1
  4115  0689  1903               	skipnz
  4116  068A  2E8C               	goto	u1231
  4117  068B  07DB               	addwf	_pi+1,f
  4118  068C                     u1231:
  4119  068C  082B               	movf	??_iniciarControlador+2,w
  4120  068D  1103               	clrz
  4121  068E  1803               	skipnc
  4122  068F  3E01               	addlw	1
  4123  0690  1903               	skipnz
  4124  0691  2E93               	goto	u1232
  4125  0692  07DC               	addwf	_pi+2,f
  4126  0693                     u1232:
  4127  0693  082C               	movf	??_iniciarControlador+3,w
  4128  0694  1103               	clrz
  4129  0695  1803               	skipnc
  4130  0696  3E01               	addlw	1
  4131  0697  1903               	skipnz
  4132  0698  2E9A               	goto	u1233
  4133  0699  07DD               	addwf	_pi+3,f
  4134  069A                     u1233:
  4135                           
  4136                           ;./function.h: 188:     }
  4137  069A  2EA5               	goto	l1844
  4138  069B                     l1842:
  4139                           
  4140                           ;./function.h: 190:         pi = 100000;
  4141  069B  3000               	movlw	0
  4142  069C  1283               	bcf	3,5	;RP0=0, select bank0
  4143  069D  1303               	bcf	3,6	;RP1=0, select bank0
  4144  069E  00DD               	movwf	_pi+3
  4145  069F  3001               	movlw	1
  4146  06A0  00DC               	movwf	_pi+2
  4147  06A1  3086               	movlw	134
  4148  06A2  00DB               	movwf	_pi+1
  4149  06A3  30A0               	movlw	160
  4150  06A4  00DA               	movwf	_pi
  4151  06A5                     l1844:
  4152                           
  4153                           ;./function.h: 193:     num_dac = (int)((pi + kp*erro)/100);
  4154  06A5  3000               	movlw	0
  4155  06A6  00F9               	movwf	___aldiv@divisor+3
  4156  06A7  3000               	movlw	0
  4157  06A8  00F8               	movwf	___aldiv@divisor+2
  4158  06A9  3000               	movlw	0
  4159  06AA  00F7               	movwf	___aldiv@divisor+1
  4160  06AB  3064               	movlw	100
  4161  06AC  00F6               	movwf	___aldiv@divisor
  4162  06AD  085A               	movf	_pi,w
  4163  06AE  00A9               	movwf	??_iniciarControlador
  4164  06AF  085B               	movf	_pi+1,w
  4165  06B0  00AA               	movwf	??_iniciarControlador+1
  4166  06B1  085C               	movf	_pi+2,w
  4167  06B2  00AB               	movwf	??_iniciarControlador+2
  4168  06B3  085D               	movf	_pi+3,w
  4169  06B4  00AC               	movwf	??_iniciarControlador+3
  4170  06B5  303C               	movlw	60
  4171  06B6  00F0               	movwf	___wmul@multiplier
  4172  06B7  3000               	movlw	0
  4173  06B8  00F1               	movwf	___wmul@multiplier+1
  4174  06B9  0834               	movf	iniciarControlador@erro+1,w
  4175  06BA  00F3               	movwf	___wmul@multiplicand+1
  4176  06BB  0833               	movf	iniciarControlador@erro,w
  4177  06BC  00F2               	movwf	___wmul@multiplicand
  4178  06BD  120A  158A  254C  120A  118A  	fcall	___wmul
  4179  06C2  0870               	movf	?___wmul,w
  4180  06C3  1283               	bcf	3,5	;RP0=0, select bank0
  4181  06C4  1303               	bcf	3,6	;RP1=0, select bank0
  4182  06C5  00AD               	movwf	??_iniciarControlador+4
  4183  06C6  0871               	movf	?___wmul+1,w
  4184  06C7  00AE               	movwf	??_iniciarControlador+5
  4185  06C8  3000               	movlw	0
  4186  06C9  1BAE               	btfsc	??_iniciarControlador+5,7
  4187  06CA  30FF               	movlw	255
  4188  06CB  00AF               	movwf	??_iniciarControlador+6
  4189  06CC  00B0               	movwf	??_iniciarControlador+7
  4190  06CD  082D               	movf	??_iniciarControlador+4,w
  4191  06CE  07A9               	addwf	??_iniciarControlador,f
  4192  06CF  082E               	movf	??_iniciarControlador+5,w
  4193  06D0  1803               	skipnc
  4194  06D1  0F2E               	incfsz	??_iniciarControlador+5,w
  4195  06D2  2ED4               	goto	u1240
  4196  06D3  2ED5               	goto	u1241
  4197  06D4                     u1240:
  4198  06D4  07AA               	addwf	??_iniciarControlador+1,f
  4199  06D5                     u1241:
  4200  06D5  082F               	movf	??_iniciarControlador+6,w
  4201  06D6  1803               	skipnc
  4202  06D7  0F2F               	incfsz	??_iniciarControlador+6,w
  4203  06D8  2EDA               	goto	u1242
  4204  06D9  2EDB               	goto	u1243
  4205  06DA                     u1242:
  4206  06DA  07AB               	addwf	??_iniciarControlador+2,f
  4207  06DB                     u1243:
  4208  06DB  0830               	movf	??_iniciarControlador+7,w
  4209  06DC  1803               	skipnc
  4210  06DD  0A30               	incf	??_iniciarControlador+7,w
  4211  06DE  07AC               	addwf	??_iniciarControlador+3,f
  4212  06DF  082C               	movf	??_iniciarControlador+3,w
  4213  06E0  00FD               	movwf	___aldiv@dividend+3
  4214  06E1  082B               	movf	??_iniciarControlador+2,w
  4215  06E2  00FC               	movwf	___aldiv@dividend+2
  4216  06E3  082A               	movf	??_iniciarControlador+1,w
  4217  06E4  00FB               	movwf	___aldiv@dividend+1
  4218  06E5  0829               	movf	??_iniciarControlador,w
  4219  06E6  00FA               	movwf	___aldiv@dividend
  4220  06E7  120A  158A  2763  120A  118A  	fcall	___aldiv
  4221  06EC  0876               	movf	?___aldiv,w
  4222  06ED  1283               	bcf	3,5	;RP0=0, select bank0
  4223  06EE  1303               	bcf	3,6	;RP1=0, select bank0
  4224  06EF  00B5               	movwf	iniciarControlador@num_dac
  4225  06F0  0877               	movf	?___aldiv+1,w
  4226  06F1  00B6               	movwf	iniciarControlador@num_dac+1
  4227  06F2  3000               	movlw	0
  4228  06F3  1BB6               	btfsc	iniciarControlador@num_dac+1,7
  4229  06F4  30FF               	movlw	255
  4230  06F5  00B7               	movwf	iniciarControlador@num_dac+2
  4231  06F6  00B8               	movwf	iniciarControlador@num_dac+3
  4232  06F7                     l1846:
  4233                           
  4234                           ;./function.h: 195:     if(num_dac < 0){
  4235  06F7  1FB8               	btfss	iniciarControlador@num_dac+3,7
  4236  06F8  2EFA               	goto	u1251
  4237  06F9  2EFB               	goto	u1250
  4238  06FA                     u1251:
  4239  06FA  2F04               	goto	l1850
  4240  06FB                     u1250:
  4241  06FB                     l1848:
  4242                           
  4243                           ;./function.h: 196:         num_dac = 0;
  4244  06FB  3000               	movlw	0
  4245  06FC  00B8               	movwf	iniciarControlador@num_dac+3
  4246  06FD  3000               	movlw	0
  4247  06FE  00B7               	movwf	iniciarControlador@num_dac+2
  4248  06FF  3000               	movlw	0
  4249  0700  00B6               	movwf	iniciarControlador@num_dac+1
  4250  0701  3000               	movlw	0
  4251  0702  00B5               	movwf	iniciarControlador@num_dac
  4252                           
  4253                           ;./function.h: 197:     }
  4254  0703  2F22               	goto	l1854
  4255  0704                     l1850:
  4256  0704  1BB8               	btfsc	iniciarControlador@num_dac+3,7
  4257  0705  2F17               	goto	u1261
  4258  0706  0838               	movf	iniciarControlador@num_dac+3,w
  4259  0707  1D03               	btfss	3,2
  4260  0708  2F18               	goto	u1260
  4261  0709  0837               	movf	iniciarControlador@num_dac+2,w
  4262  070A  1D03               	btfss	3,2
  4263  070B  2F18               	goto	u1260
  4264  070C  3004               	movlw	4
  4265  070D  0236               	subwf	iniciarControlador@num_dac+1,w
  4266  070E  1D03               	skipz
  4267  070F  2F14               	goto	u1263
  4268  0710  3000               	movlw	0
  4269  0711  0235               	subwf	iniciarControlador@num_dac,w
  4270  0712  1D03               	skipz
  4271  0713  2F14               	goto	u1263
  4272  0714                     u1263:
  4273  0714  1C03               	btfss	3,0
  4274  0715  2F17               	goto	u1261
  4275  0716  2F18               	goto	u1260
  4276  0717                     u1261:
  4277  0717  2F22               	goto	l1854
  4278  0718                     u1260:
  4279  0718                     l1852:
  4280                           
  4281                           ;./function.h: 199:         num_dac = 1023;
  4282  0718  3000               	movlw	0
  4283  0719  1283               	bcf	3,5	;RP0=0, select bank0
  4284  071A  1303               	bcf	3,6	;RP1=0, select bank0
  4285  071B  00B8               	movwf	iniciarControlador@num_dac+3
  4286  071C  3000               	movlw	0
  4287  071D  00B7               	movwf	iniciarControlador@num_dac+2
  4288  071E  3003               	movlw	3
  4289  071F  00B6               	movwf	iniciarControlador@num_dac+1
  4290  0720  30FF               	movlw	255
  4291  0721  00B5               	movwf	iniciarControlador@num_dac
  4292  0722                     l1854:
  4293                           
  4294                           ;./function.h: 203:     if (verificarTemperatura() < setPoint*10-1) {
  4295  0722  1283               	bcf	3,5	;RP0=0, select bank0
  4296  0723  1303               	bcf	3,6	;RP1=0, select bank0
  4297  0724  086B               	movf	_setPoint+1,w
  4298  0725  00F1               	movwf	___wmul@multiplier+1
  4299  0726  086A               	movf	_setPoint,w
  4300  0727  00F0               	movwf	___wmul@multiplier
  4301  0728  300A               	movlw	10
  4302  0729  00F2               	movwf	___wmul@multiplicand
  4303  072A  3000               	movlw	0
  4304  072B  00F3               	movwf	___wmul@multiplicand+1
  4305  072C  120A  158A  254C  120A  118A  	fcall	___wmul
  4306  0731  0870               	movf	?___wmul,w
  4307  0732  3EFF               	addlw	255
  4308  0733  1283               	bcf	3,5	;RP0=0, select bank0
  4309  0734  1303               	bcf	3,6	;RP1=0, select bank0
  4310  0735  00A9               	movwf	??_iniciarControlador
  4311  0736  0871               	movf	?___wmul+1,w
  4312  0737  1803               	skipnc
  4313  0738  3E01               	addlw	1
  4314  0739  3EFF               	addlw	255
  4315  073A  00AA               	movwf	??_iniciarControlador+1
  4316  073B  120A  158A  25EA  120A  118A  	fcall	_verificarTemperatura
  4317  0740  1283               	bcf	3,5	;RP0=0, select bank0
  4318  0741  1303               	bcf	3,6	;RP1=0, select bank0
  4319  0742  082A               	movf	??_iniciarControlador+1,w
  4320  0743  0277               	subwf	?_verificarTemperatura+1,w
  4321  0744  1D03               	skipz
  4322  0745  2F48               	goto	u1275
  4323  0746  0829               	movf	??_iniciarControlador,w
  4324  0747  0276               	subwf	?_verificarTemperatura,w
  4325  0748                     u1275:
  4326  0748  1803               	skipnc
  4327  0749  2F4B               	goto	u1271
  4328  074A  2F4C               	goto	u1270
  4329  074B                     u1271:
  4330  074B  2F9E               	goto	l1866
  4331  074C                     u1270:
  4332  074C                     l1856:
  4333                           
  4334                           ;./function.h: 204:             RC1 = 0;
  4335  074C  1087               	bcf	7,1	;volatile
  4336  074D                     l1858:
  4337                           
  4338                           ;./function.h: 205:             _delay((unsigned long)((500)*(4000000/4000.0)));
  4339  074D  3003               	movlw	3
  4340  074E  1283               	bcf	3,5	;RP0=0, select bank0
  4341  074F  1303               	bcf	3,6	;RP1=0, select bank0
  4342  0750  00AB               	movwf	??_iniciarControlador+2
  4343  0751  308A               	movlw	138
  4344  0752  00AA               	movwf	??_iniciarControlador+1
  4345  0753  3055               	movlw	85
  4346  0754  00A9               	movwf	??_iniciarControlador
  4347  0755                     u1817:
  4348  0755  0BA9               	decfsz	??_iniciarControlador,f
  4349  0756  2F55               	goto	u1817
  4350  0757  0BAA               	decfsz	??_iniciarControlador+1,f
  4351  0758  2F55               	goto	u1817
  4352  0759  0BAB               	decfsz	??_iniciarControlador+2,f
  4353  075A  2F55               	goto	u1817
  4354  075B                     l1860:
  4355                           
  4356                           ;./function.h: 208:             CCPR1L = (dutyCycle & 0x3FC) >> 2;
  4357  075B  1283               	bcf	3,5	;RP0=0, select bank0
  4358  075C  1303               	bcf	3,6	;RP1=0, select bank0
  4359  075D  0839               	movf	iniciarControlador@dutyCycle,w
  4360  075E  00A9               	movwf	??_iniciarControlador
  4361  075F  083A               	movf	iniciarControlador@dutyCycle+1,w
  4362  0760  00AA               	movwf	??_iniciarControlador+1
  4363  0761  083B               	movf	iniciarControlador@dutyCycle+2,w
  4364  0762  00AB               	movwf	??_iniciarControlador+2
  4365  0763  083C               	movf	iniciarControlador@dutyCycle+3,w
  4366  0764  00AC               	movwf	??_iniciarControlador+3
  4367  0765  3002               	movlw	2
  4368  0766  00AD               	movwf	??_iniciarControlador+4
  4369  0767                     u1285:
  4370  0767  0D2C               	rlf	??_iniciarControlador+3,w
  4371  0768  0CAC               	rrf	??_iniciarControlador+3,f
  4372  0769  0CAB               	rrf	??_iniciarControlador+2,f
  4373  076A  0CAA               	rrf	??_iniciarControlador+1,f
  4374  076B  0CA9               	rrf	??_iniciarControlador,f
  4375  076C                     u1280:
  4376  076C  0BAD               	decfsz	??_iniciarControlador+4,f
  4377  076D  2F67               	goto	u1285
  4378  076E  0829               	movf	??_iniciarControlador,w
  4379  076F  0095               	movwf	21	;volatile
  4380  0770                     l1862:
  4381                           
  4382                           ;./function.h: 209:             CCP1X = ((dutyCycle & 0x002) >> 1);
  4383  0770  0839               	movf	iniciarControlador@dutyCycle,w
  4384  0771  00A9               	movwf	??_iniciarControlador
  4385  0772  083A               	movf	iniciarControlador@dutyCycle+1,w
  4386  0773  00AA               	movwf	??_iniciarControlador+1
  4387  0774  083B               	movf	iniciarControlador@dutyCycle+2,w
  4388  0775  00AB               	movwf	??_iniciarControlador+2
  4389  0776  083C               	movf	iniciarControlador@dutyCycle+3,w
  4390  0777  00AC               	movwf	??_iniciarControlador+3
  4391  0778  3001               	movlw	1
  4392  0779  00AD               	movwf	??_iniciarControlador+4
  4393  077A                     u1295:
  4394  077A  0D2C               	rlf	??_iniciarControlador+3,w
  4395  077B  0CAC               	rrf	??_iniciarControlador+3,f
  4396  077C  0CAB               	rrf	??_iniciarControlador+2,f
  4397  077D  0CAA               	rrf	??_iniciarControlador+1,f
  4398  077E  0CA9               	rrf	??_iniciarControlador,f
  4399  077F                     u1290:
  4400  077F  0BAD               	decfsz	??_iniciarControlador+4,f
  4401  0780  2F7A               	goto	u1295
  4402  0781  1829               	btfsc	??_iniciarControlador,0
  4403  0782  2F84               	goto	u1301
  4404  0783  2F88               	goto	u1300
  4405  0784                     u1301:
  4406  0784  1283               	bcf	3,5	;RP0=0, select bank0
  4407  0785  1303               	bcf	3,6	;RP1=0, select bank0
  4408  0786  1697               	bsf	23,5	;volatile
  4409  0787  2F8B               	goto	u1314
  4410  0788                     u1300:
  4411  0788  1283               	bcf	3,5	;RP0=0, select bank0
  4412  0789  1303               	bcf	3,6	;RP1=0, select bank0
  4413  078A  1297               	bcf	23,5	;volatile
  4414  078B                     u1314:
  4415  078B                     l1864:
  4416                           
  4417                           ;./function.h: 210:             CCP1Y = (dutyCycle & 0x001);
  4418  078B  1839               	btfsc	iniciarControlador@dutyCycle,0
  4419  078C  2F8E               	goto	u1321
  4420  078D  2F92               	goto	u1320
  4421  078E                     u1321:
  4422  078E  1283               	bcf	3,5	;RP0=0, select bank0
  4423  078F  1303               	bcf	3,6	;RP1=0, select bank0
  4424  0790  1617               	bsf	23,4	;volatile
  4425  0791  2F95               	goto	u1334
  4426  0792                     u1320:
  4427  0792  1283               	bcf	3,5	;RP0=0, select bank0
  4428  0793  1303               	bcf	3,6	;RP1=0, select bank0
  4429  0794  1217               	bcf	23,4	;volatile
  4430  0795                     u1334:
  4431                           
  4432                           ;./function.h: 211:             dutyCycle = num_dac;
  4433  0795  0838               	movf	iniciarControlador@num_dac+3,w
  4434  0796  00BC               	movwf	iniciarControlador@dutyCycle+3
  4435  0797  0837               	movf	iniciarControlador@num_dac+2,w
  4436  0798  00BB               	movwf	iniciarControlador@dutyCycle+2
  4437  0799  0836               	movf	iniciarControlador@num_dac+1,w
  4438  079A  00BA               	movwf	iniciarControlador@dutyCycle+1
  4439  079B  0835               	movf	iniciarControlador@num_dac,w
  4440  079C  00B9               	movwf	iniciarControlador@dutyCycle
  4441                           
  4442                           ;./function.h: 212:         } else if(verificarTemperatura() > setPoint*10 +3){
  4443  079D  2FD7               	goto	l1872
  4444  079E                     l1866:
  4445  079E  086B               	movf	_setPoint+1,w
  4446  079F  00F1               	movwf	___wmul@multiplier+1
  4447  07A0  086A               	movf	_setPoint,w
  4448  07A1  00F0               	movwf	___wmul@multiplier
  4449  07A2  300A               	movlw	10
  4450  07A3  00F2               	movwf	___wmul@multiplicand
  4451  07A4  3000               	movlw	0
  4452  07A5  00F3               	movwf	___wmul@multiplicand+1
  4453  07A6  120A  158A  254C  120A  118A  	fcall	___wmul
  4454  07AB  0870               	movf	?___wmul,w
  4455  07AC  3E03               	addlw	3
  4456  07AD  1283               	bcf	3,5	;RP0=0, select bank0
  4457  07AE  1303               	bcf	3,6	;RP1=0, select bank0
  4458  07AF  00A9               	movwf	??_iniciarControlador
  4459  07B0  0871               	movf	?___wmul+1,w
  4460  07B1  1803               	skipnc
  4461  07B2  3E01               	addlw	1
  4462  07B3  3E00               	addlw	0
  4463  07B4  00AA               	movwf	??_iniciarControlador+1
  4464  07B5  120A  158A  25EA  120A  118A  	fcall	_verificarTemperatura
  4465  07BA  0877               	movf	?_verificarTemperatura+1,w
  4466  07BB  1283               	bcf	3,5	;RP0=0, select bank0
  4467  07BC  1303               	bcf	3,6	;RP1=0, select bank0
  4468  07BD  022A               	subwf	??_iniciarControlador+1,w
  4469  07BE  1D03               	skipz
  4470  07BF  2FC2               	goto	u1345
  4471  07C0  0876               	movf	?_verificarTemperatura,w
  4472  07C1  0229               	subwf	??_iniciarControlador,w
  4473  07C2                     u1345:
  4474  07C2  1803               	skipnc
  4475  07C3  2FC5               	goto	u1341
  4476  07C4  2FC6               	goto	u1340
  4477  07C5                     u1341:
  4478  07C5  2FD7               	goto	l1872
  4479  07C6                     u1340:
  4480  07C6                     l1868:
  4481                           
  4482                           ;./function.h: 213:             dutyCycle = 0;
  4483  07C6  3000               	movlw	0
  4484  07C7  00BC               	movwf	iniciarControlador@dutyCycle+3
  4485  07C8  3000               	movlw	0
  4486  07C9  00BB               	movwf	iniciarControlador@dutyCycle+2
  4487  07CA  3000               	movlw	0
  4488  07CB  00BA               	movwf	iniciarControlador@dutyCycle+1
  4489  07CC  3000               	movlw	0
  4490  07CD  00B9               	movwf	iniciarControlador@dutyCycle
  4491                           
  4492                           ;./function.h: 215:             pi = 0;
  4493  07CE  3000               	movlw	0
  4494  07CF  00DD               	movwf	_pi+3
  4495  07D0  3000               	movlw	0
  4496  07D1  00DC               	movwf	_pi+2
  4497  07D2  3000               	movlw	0
  4498  07D3  00DB               	movwf	_pi+1
  4499  07D4  3000               	movlw	0
  4500  07D5  00DA               	movwf	_pi
  4501  07D6                     l1870:
  4502                           
  4503                           ;./function.h: 216:             RC1 = 1;
  4504  07D6  1487               	bsf	7,1	;volatile
  4505  07D7                     l1872:
  4506                           
  4507                           ;./function.h: 218:         if(verificarTemperatura() <= 278){
  4508  07D7  120A  158A  25EA  120A  118A  	fcall	_verificarTemperatura
  4509  07DC  0877               	movf	?_verificarTemperatura+1,w
  4510  07DD  3A80               	xorlw	128
  4511  07DE  00FF               	movwf	btemp+1
  4512  07DF  3081               	movlw	129
  4513  07E0  027F               	subwf	btemp+1,w
  4514  07E1  1D03               	skipz
  4515  07E2  2FE5               	goto	u1355
  4516  07E3  3017               	movlw	23
  4517  07E4  0276               	subwf	?_verificarTemperatura,w
  4518  07E5                     u1355:
  4519  07E5  1803               	skipnc
  4520  07E6  2FE8               	goto	u1351
  4521  07E7  2FE9               	goto	u1350
  4522  07E8                     u1351:
  4523  07E8  2FEC               	goto	l1876
  4524  07E9                     u1350:
  4525  07E9                     l1874:
  4526                           
  4527                           ;./function.h: 219:             RC1 = 0;
  4528  07E9  1283               	bcf	3,5	;RP0=0, select bank0
  4529  07EA  1303               	bcf	3,6	;RP1=0, select bank0
  4530  07EB  1087               	bcf	7,1	;volatile
  4531  07EC                     l1876:
  4532                           
  4533                           ;./function.h: 221:     return dutyCycle;
  4534  07EC  1283               	bcf	3,5	;RP0=0, select bank0
  4535  07ED  1303               	bcf	3,6	;RP1=0, select bank0
  4536  07EE  083A               	movf	iniciarControlador@dutyCycle+1,w
  4537  07EF  00A8               	movwf	?_iniciarControlador+1
  4538  07F0  0839               	movf	iniciarControlador@dutyCycle,w
  4539  07F1  00A7               	movwf	?_iniciarControlador
  4540  07F2                     l143:
  4541  07F2  0008               	return
  4542  07F3                     __end_of_iniciarControlador:
  4543                           
  4544                           	psect	text16
  4545  0DEA                     __ptext16:	
  4546 ;; *************** function _verificarTemperatura *****************
  4547 ;; Defined at:
  4548 ;;		line 5 in file "./function.h"
  4549 ;; Parameters:    Size  Location     Type
  4550 ;;		None
  4551 ;; Auto vars:     Size  Location     Type
  4552 ;;  temp            2   10[COMMON] unsigned int 
  4553 ;; Return value:  Size  Location     Type
  4554 ;;                  2    6[COMMON] int 
  4555 ;; Registers used:
  4556 ;;		wreg, status,2, status,0, pclath, cstack
  4557 ;; Tracked objects:
  4558 ;;		On entry : 0/0
  4559 ;;		On exit  : 0/0
  4560 ;;		Unchanged: 0/0
  4561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4562 ;;      Params:         2       0       0       0       0
  4563 ;;      Locals:         2       0       0       0       0
  4564 ;;      Temps:          2       0       0       0       0
  4565 ;;      Totals:         6       0       0       0       0
  4566 ;;Total ram usage:        6 bytes
  4567 ;; Hardware stack levels used: 1
  4568 ;; Hardware stack levels required when called: 1
  4569 ;; This function calls:
  4570 ;;		___wmul
  4571 ;; This function is called by:
  4572 ;;		_telaInicio
  4573 ;;		_iniciarControlador
  4574 ;;		_telaControlador
  4575 ;; This function uses a non-reentrant model
  4576 ;;
  4577                           
  4578                           
  4579                           ;psect for function _verificarTemperatura
  4580  0DEA                     _verificarTemperatura:
  4581  0DEA                     l1700:	
  4582                           ;incstack = 0
  4583                           ; Regs used in _verificarTemperatura: [wreg+status,2+status,0+pclath+cstack]
  4584                           
  4585                           
  4586                           ;./function.h: 6:     unsigned int temp;;./function.h: 7:     ADCON0bits.GO = 1;
  4587  0DEA  1283               	bcf	3,5	;RP0=0, select bank0
  4588  0DEB  1303               	bcf	3,6	;RP1=0, select bank0
  4589  0DEC  151F               	bsf	31,2	;volatile
  4590  0DED                     l75:	
  4591                           ;./function.h: 8:     while(ADCON0bits.GO == 1);
  4592                           
  4593  0DED  191F               	btfsc	31,2	;volatile
  4594  0DEE  2DF0               	goto	u1061
  4595  0DEF  2DF1               	goto	u1060
  4596  0DF0                     u1061:
  4597  0DF0  2DED               	goto	l75
  4598  0DF1                     u1060:
  4599  0DF1                     l1702:
  4600                           
  4601                           ;./function.h: 9:     temp = (unsigned int) (ADRESH<<8 | ADRESL);
  4602  0DF1  081E               	movf	30,w	;volatile
  4603  0DF2  00FB               	movwf	verificarTemperatura@temp+1
  4604  0DF3  1683               	bsf	3,5	;RP0=1, select bank1
  4605  0DF4  1303               	bcf	3,6	;RP1=0, select bank1
  4606  0DF5  081E               	movf	30,w	;volatile
  4607  0DF6  00FA               	movwf	verificarTemperatura@temp
  4608  0DF7                     l1704:
  4609                           
  4610                           ;./function.h: 10:     temp= temp*10/8-150;
  4611  0DF7  087B               	movf	verificarTemperatura@temp+1,w
  4612  0DF8  00F1               	movwf	___wmul@multiplier+1
  4613  0DF9  087A               	movf	verificarTemperatura@temp,w
  4614  0DFA  00F0               	movwf	___wmul@multiplier
  4615  0DFB  300A               	movlw	10
  4616  0DFC  00F2               	movwf	___wmul@multiplicand
  4617  0DFD  3000               	movlw	0
  4618  0DFE  00F3               	movwf	___wmul@multiplicand+1
  4619  0DFF  120A  158A  254C  120A  158A  	fcall	___wmul
  4620  0E04  0870               	movf	?___wmul,w
  4621  0E05  00F8               	movwf	??_verificarTemperatura
  4622  0E06  0871               	movf	?___wmul+1,w
  4623  0E07  00F9               	movwf	??_verificarTemperatura+1
  4624  0E08  1003               	clrc
  4625  0E09  0CF9               	rrf	??_verificarTemperatura+1,f
  4626  0E0A  0CF8               	rrf	??_verificarTemperatura,f
  4627  0E0B  1003               	clrc
  4628  0E0C  0CF9               	rrf	??_verificarTemperatura+1,f
  4629  0E0D  0CF8               	rrf	??_verificarTemperatura,f
  4630  0E0E  1003               	clrc
  4631  0E0F  0CF9               	rrf	??_verificarTemperatura+1,f
  4632  0E10  0CF8               	rrf	??_verificarTemperatura,f
  4633  0E11  0878               	movf	??_verificarTemperatura,w
  4634  0E12  3E6A               	addlw	106
  4635  0E13  00FA               	movwf	verificarTemperatura@temp
  4636  0E14  0879               	movf	??_verificarTemperatura+1,w
  4637  0E15  1803               	skipnc
  4638  0E16  3E01               	addlw	1
  4639  0E17  3EFF               	addlw	255
  4640  0E18  00FB               	movwf	verificarTemperatura@temp+1
  4641  0E19                     l1706:
  4642                           
  4643                           ;./function.h: 11:     return temp;
  4644  0E19  087B               	movf	verificarTemperatura@temp+1,w
  4645  0E1A  00F7               	movwf	?_verificarTemperatura+1
  4646  0E1B  087A               	movf	verificarTemperatura@temp,w
  4647  0E1C  00F6               	movwf	?_verificarTemperatura
  4648  0E1D                     l78:
  4649  0E1D  0008               	return
  4650  0E1E                     __end_of_verificarTemperatura:
  4651                           
  4652                           	psect	text17
  4653  0D4C                     __ptext17:	
  4654 ;; *************** function ___wmul *****************
  4655 ;; Defined at:
  4656 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  4657 ;; Parameters:    Size  Location     Type
  4658 ;;  multiplier      2    0[COMMON] unsigned int 
  4659 ;;  multiplicand    2    2[COMMON] unsigned int 
  4660 ;; Auto vars:     Size  Location     Type
  4661 ;;  product         2    4[COMMON] unsigned int 
  4662 ;; Return value:  Size  Location     Type
  4663 ;;                  2    0[COMMON] unsigned int 
  4664 ;; Registers used:
  4665 ;;		wreg, status,2, status,0
  4666 ;; Tracked objects:
  4667 ;;		On entry : 0/0
  4668 ;;		On exit  : 0/0
  4669 ;;		Unchanged: 0/0
  4670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4671 ;;      Params:         4       0       0       0       0
  4672 ;;      Locals:         2       0       0       0       0
  4673 ;;      Temps:          0       0       0       0       0
  4674 ;;      Totals:         6       0       0       0       0
  4675 ;;Total ram usage:        6 bytes
  4676 ;; Hardware stack levels used: 1
  4677 ;; This function calls:
  4678 ;;		Nothing
  4679 ;; This function is called by:
  4680 ;;		_verificarTemperatura
  4681 ;;		_armazenarSet
  4682 ;;		_iniciarControlador
  4683 ;; This function uses a non-reentrant model
  4684 ;;
  4685                           
  4686                           
  4687                           ;psect for function ___wmul
  4688  0D4C                     ___wmul:
  4689  0D4C                     l1638:	
  4690                           ;incstack = 0
  4691                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4692                           
  4693  0D4C  01F4               	clrf	___wmul@product
  4694  0D4D  01F5               	clrf	___wmul@product+1
  4695  0D4E                     l1640:
  4696  0D4E  1C70               	btfss	___wmul@multiplier,0
  4697  0D4F  2D51               	goto	u891
  4698  0D50  2D52               	goto	u890
  4699  0D51                     u891:
  4700  0D51  2D58               	goto	l400
  4701  0D52                     u890:
  4702  0D52                     l1642:
  4703  0D52  0872               	movf	___wmul@multiplicand,w
  4704  0D53  07F4               	addwf	___wmul@product,f
  4705  0D54  1803               	skipnc
  4706  0D55  0AF5               	incf	___wmul@product+1,f
  4707  0D56  0873               	movf	___wmul@multiplicand+1,w
  4708  0D57  07F5               	addwf	___wmul@product+1,f
  4709  0D58                     l400:
  4710  0D58  3001               	movlw	1
  4711  0D59                     u905:
  4712  0D59  1003               	clrc
  4713  0D5A  0DF2               	rlf	___wmul@multiplicand,f
  4714  0D5B  0DF3               	rlf	___wmul@multiplicand+1,f
  4715  0D5C  3EFF               	addlw	-1
  4716  0D5D  1D03               	skipz
  4717  0D5E  2D59               	goto	u905
  4718  0D5F                     l1644:
  4719  0D5F  3001               	movlw	1
  4720  0D60                     u915:
  4721  0D60  1003               	clrc
  4722  0D61  0CF1               	rrf	___wmul@multiplier+1,f
  4723  0D62  0CF0               	rrf	___wmul@multiplier,f
  4724  0D63  3EFF               	addlw	-1
  4725  0D64  1D03               	skipz
  4726  0D65  2D60               	goto	u915
  4727  0D66                     l1646:
  4728  0D66  0870               	movf	___wmul@multiplier,w
  4729  0D67  0471               	iorwf	___wmul@multiplier+1,w
  4730  0D68  1D03               	btfss	3,2
  4731  0D69  2D6B               	goto	u921
  4732  0D6A  2D6C               	goto	u920
  4733  0D6B                     u921:
  4734  0D6B  2D4E               	goto	l1640
  4735  0D6C                     u920:
  4736  0D6C                     l1648:
  4737  0D6C  0875               	movf	___wmul@product+1,w
  4738  0D6D  00F1               	movwf	?___wmul+1
  4739  0D6E  0874               	movf	___wmul@product,w
  4740  0D6F  00F0               	movwf	?___wmul
  4741  0D70                     l402:
  4742  0D70  0008               	return
  4743  0D71                     __end_of___wmul:
  4744                           
  4745                           	psect	text18
  4746  0F63                     __ptext18:	
  4747 ;; *************** function ___aldiv *****************
  4748 ;; Defined at:
  4749 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\aldiv.c"
  4750 ;; Parameters:    Size  Location     Type
  4751 ;;  divisor         4    6[COMMON] long 
  4752 ;;  dividend        4   10[COMMON] long 
  4753 ;; Auto vars:     Size  Location     Type
  4754 ;;  quotient        4    3[BANK0 ] long 
  4755 ;;  sign            1    2[BANK0 ] unsigned char 
  4756 ;;  counter         1    1[BANK0 ] unsigned char 
  4757 ;; Return value:  Size  Location     Type
  4758 ;;                  4    6[COMMON] long 
  4759 ;; Registers used:
  4760 ;;		wreg, status,2, status,0
  4761 ;; Tracked objects:
  4762 ;;		On entry : 0/0
  4763 ;;		On exit  : 0/0
  4764 ;;		Unchanged: 0/0
  4765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4766 ;;      Params:         8       0       0       0       0
  4767 ;;      Locals:         0       6       0       0       0
  4768 ;;      Temps:          0       1       0       0       0
  4769 ;;      Totals:         8       7       0       0       0
  4770 ;;Total ram usage:       15 bytes
  4771 ;; Hardware stack levels used: 1
  4772 ;; This function calls:
  4773 ;;		Nothing
  4774 ;; This function is called by:
  4775 ;;		_iniciarControlador
  4776 ;; This function uses a non-reentrant model
  4777 ;;
  4778                           
  4779                           
  4780                           ;psect for function ___aldiv
  4781  0F63                     ___aldiv:
  4782  0F63                     l1738:	
  4783                           ;incstack = 0
  4784                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  4785                           
  4786  0F63  1283               	bcf	3,5	;RP0=0, select bank0
  4787  0F64  1303               	bcf	3,6	;RP1=0, select bank0
  4788  0F65  01A2               	clrf	___aldiv@sign
  4789  0F66                     l1740:
  4790  0F66  1FF9               	btfss	___aldiv@divisor+3,7
  4791  0F67  2F69               	goto	u1081
  4792  0F68  2F6A               	goto	u1080
  4793  0F69                     u1081:
  4794  0F69  2F77               	goto	l465
  4795  0F6A                     u1080:
  4796  0F6A                     l1742:
  4797  0F6A  09F6               	comf	___aldiv@divisor,f
  4798  0F6B  09F7               	comf	___aldiv@divisor+1,f
  4799  0F6C  09F8               	comf	___aldiv@divisor+2,f
  4800  0F6D  09F9               	comf	___aldiv@divisor+3,f
  4801  0F6E  0AF6               	incf	___aldiv@divisor,f
  4802  0F6F  1903               	skipnz
  4803  0F70  0AF7               	incf	___aldiv@divisor+1,f
  4804  0F71  1903               	skipnz
  4805  0F72  0AF8               	incf	___aldiv@divisor+2,f
  4806  0F73  1903               	skipnz
  4807  0F74  0AF9               	incf	___aldiv@divisor+3,f
  4808  0F75  01A2               	clrf	___aldiv@sign
  4809  0F76  0AA2               	incf	___aldiv@sign,f
  4810  0F77                     l465:
  4811  0F77  1FFD               	btfss	___aldiv@dividend+3,7
  4812  0F78  2F7A               	goto	u1091
  4813  0F79  2F7B               	goto	u1090
  4814  0F7A                     u1091:
  4815  0F7A  2F8A               	goto	l1748
  4816  0F7B                     u1090:
  4817  0F7B                     l1744:
  4818  0F7B  09FA               	comf	___aldiv@dividend,f
  4819  0F7C  09FB               	comf	___aldiv@dividend+1,f
  4820  0F7D  09FC               	comf	___aldiv@dividend+2,f
  4821  0F7E  09FD               	comf	___aldiv@dividend+3,f
  4822  0F7F  0AFA               	incf	___aldiv@dividend,f
  4823  0F80  1903               	skipnz
  4824  0F81  0AFB               	incf	___aldiv@dividend+1,f
  4825  0F82  1903               	skipnz
  4826  0F83  0AFC               	incf	___aldiv@dividend+2,f
  4827  0F84  1903               	skipnz
  4828  0F85  0AFD               	incf	___aldiv@dividend+3,f
  4829  0F86                     l1746:
  4830  0F86  3001               	movlw	1
  4831  0F87  00A0               	movwf	??___aldiv
  4832  0F88  0820               	movf	??___aldiv,w
  4833  0F89  06A2               	xorwf	___aldiv@sign,f
  4834  0F8A                     l1748:
  4835  0F8A  3000               	movlw	0
  4836  0F8B  00A6               	movwf	___aldiv@quotient+3
  4837  0F8C  3000               	movlw	0
  4838  0F8D  00A5               	movwf	___aldiv@quotient+2
  4839  0F8E  3000               	movlw	0
  4840  0F8F  00A4               	movwf	___aldiv@quotient+1
  4841  0F90  3000               	movlw	0
  4842  0F91  00A3               	movwf	___aldiv@quotient
  4843  0F92                     l1750:
  4844  0F92  0879               	movf	___aldiv@divisor+3,w
  4845  0F93  0478               	iorwf	___aldiv@divisor+2,w
  4846  0F94  0477               	iorwf	___aldiv@divisor+1,w
  4847  0F95  0476               	iorwf	___aldiv@divisor,w
  4848  0F96  1903               	skipnz
  4849  0F97  2F99               	goto	u1101
  4850  0F98  2F9A               	goto	u1100
  4851  0F99                     u1101:
  4852  0F99  2FE7               	goto	l1770
  4853  0F9A                     u1100:
  4854  0F9A                     l1752:
  4855  0F9A  01A1               	clrf	___aldiv@counter
  4856  0F9B  0AA1               	incf	___aldiv@counter,f
  4857  0F9C  2FAA               	goto	l1756
  4858  0F9D                     l1754:
  4859  0F9D  3001               	movlw	1
  4860  0F9E  00A0               	movwf	??___aldiv
  4861  0F9F                     u1115:
  4862  0F9F  1003               	clrc
  4863  0FA0  0DF6               	rlf	___aldiv@divisor,f
  4864  0FA1  0DF7               	rlf	___aldiv@divisor+1,f
  4865  0FA2  0DF8               	rlf	___aldiv@divisor+2,f
  4866  0FA3  0DF9               	rlf	___aldiv@divisor+3,f
  4867  0FA4  0BA0               	decfsz	??___aldiv,f
  4868  0FA5  2F9F               	goto	u1115
  4869  0FA6  3001               	movlw	1
  4870  0FA7  00A0               	movwf	??___aldiv
  4871  0FA8  0820               	movf	??___aldiv,w
  4872  0FA9  07A1               	addwf	___aldiv@counter,f
  4873  0FAA                     l1756:
  4874  0FAA  1FF9               	btfss	___aldiv@divisor+3,7
  4875  0FAB  2FAD               	goto	u1121
  4876  0FAC  2FAE               	goto	u1120
  4877  0FAD                     u1121:
  4878  0FAD  2F9D               	goto	l1754
  4879  0FAE                     u1120:
  4880  0FAE                     l1758:
  4881  0FAE  3001               	movlw	1
  4882  0FAF  00A0               	movwf	??___aldiv
  4883  0FB0                     u1135:
  4884  0FB0  1003               	clrc
  4885  0FB1  0DA3               	rlf	___aldiv@quotient,f
  4886  0FB2  0DA4               	rlf	___aldiv@quotient+1,f
  4887  0FB3  0DA5               	rlf	___aldiv@quotient+2,f
  4888  0FB4  0DA6               	rlf	___aldiv@quotient+3,f
  4889  0FB5  0BA0               	decfsz	??___aldiv,f
  4890  0FB6  2FB0               	goto	u1135
  4891  0FB7                     l1760:
  4892  0FB7  0879               	movf	___aldiv@divisor+3,w
  4893  0FB8  027D               	subwf	___aldiv@dividend+3,w
  4894  0FB9  1D03               	skipz
  4895  0FBA  2FC5               	goto	u1145
  4896  0FBB  0878               	movf	___aldiv@divisor+2,w
  4897  0FBC  027C               	subwf	___aldiv@dividend+2,w
  4898  0FBD  1D03               	skipz
  4899  0FBE  2FC5               	goto	u1145
  4900  0FBF  0877               	movf	___aldiv@divisor+1,w
  4901  0FC0  027B               	subwf	___aldiv@dividend+1,w
  4902  0FC1  1D03               	skipz
  4903  0FC2  2FC5               	goto	u1145
  4904  0FC3  0876               	movf	___aldiv@divisor,w
  4905  0FC4  027A               	subwf	___aldiv@dividend,w
  4906  0FC5                     u1145:
  4907  0FC5  1C03               	skipc
  4908  0FC6  2FC8               	goto	u1141
  4909  0FC7  2FC9               	goto	u1140
  4910  0FC8                     u1141:
  4911  0FC8  2FD8               	goto	l1766
  4912  0FC9                     u1140:
  4913  0FC9                     l1762:
  4914  0FC9  0876               	movf	___aldiv@divisor,w
  4915  0FCA  02FA               	subwf	___aldiv@dividend,f
  4916  0FCB  0877               	movf	___aldiv@divisor+1,w
  4917  0FCC  1C03               	skipc
  4918  0FCD  0F77               	incfsz	___aldiv@divisor+1,w
  4919  0FCE  02FB               	subwf	___aldiv@dividend+1,f
  4920  0FCF  0878               	movf	___aldiv@divisor+2,w
  4921  0FD0  1C03               	skipc
  4922  0FD1  0F78               	incfsz	___aldiv@divisor+2,w
  4923  0FD2  02FC               	subwf	___aldiv@dividend+2,f
  4924  0FD3  0879               	movf	___aldiv@divisor+3,w
  4925  0FD4  1C03               	skipc
  4926  0FD5  0F79               	incfsz	___aldiv@divisor+3,w
  4927  0FD6  02FD               	subwf	___aldiv@dividend+3,f
  4928  0FD7                     l1764:
  4929  0FD7  1423               	bsf	___aldiv@quotient,0
  4930  0FD8                     l1766:
  4931  0FD8  3001               	movlw	1
  4932  0FD9                     u1155:
  4933  0FD9  1003               	clrc
  4934  0FDA  0CF9               	rrf	___aldiv@divisor+3,f
  4935  0FDB  0CF8               	rrf	___aldiv@divisor+2,f
  4936  0FDC  0CF7               	rrf	___aldiv@divisor+1,f
  4937  0FDD  0CF6               	rrf	___aldiv@divisor,f
  4938  0FDE  3EFF               	addlw	-1
  4939  0FDF  1D03               	skipz
  4940  0FE0  2FD9               	goto	u1155
  4941  0FE1                     l1768:
  4942  0FE1  3001               	movlw	1
  4943  0FE2  02A1               	subwf	___aldiv@counter,f
  4944  0FE3  1D03               	btfss	3,2
  4945  0FE4  2FE6               	goto	u1161
  4946  0FE5  2FE7               	goto	u1160
  4947  0FE6                     u1161:
  4948  0FE6  2FAE               	goto	l1758
  4949  0FE7                     u1160:
  4950  0FE7                     l1770:
  4951  0FE7  0822               	movf	___aldiv@sign,w
  4952  0FE8  1903               	btfsc	3,2
  4953  0FE9  2FEB               	goto	u1171
  4954  0FEA  2FEC               	goto	u1170
  4955  0FEB                     u1171:
  4956  0FEB  2FF7               	goto	l1774
  4957  0FEC                     u1170:
  4958  0FEC                     l1772:
  4959  0FEC  09A3               	comf	___aldiv@quotient,f
  4960  0FED  09A4               	comf	___aldiv@quotient+1,f
  4961  0FEE  09A5               	comf	___aldiv@quotient+2,f
  4962  0FEF  09A6               	comf	___aldiv@quotient+3,f
  4963  0FF0  0AA3               	incf	___aldiv@quotient,f
  4964  0FF1  1903               	skipnz
  4965  0FF2  0AA4               	incf	___aldiv@quotient+1,f
  4966  0FF3  1903               	skipnz
  4967  0FF4  0AA5               	incf	___aldiv@quotient+2,f
  4968  0FF5  1903               	skipnz
  4969  0FF6  0AA6               	incf	___aldiv@quotient+3,f
  4970  0FF7                     l1774:
  4971  0FF7  0826               	movf	___aldiv@quotient+3,w
  4972  0FF8  00F9               	movwf	?___aldiv+3
  4973  0FF9  0825               	movf	___aldiv@quotient+2,w
  4974  0FFA  00F8               	movwf	?___aldiv+2
  4975  0FFB  0824               	movf	___aldiv@quotient+1,w
  4976  0FFC  00F7               	movwf	?___aldiv+1
  4977  0FFD  0823               	movf	___aldiv@quotient,w
  4978  0FFE  00F6               	movwf	?___aldiv
  4979  0FFF                     l475:
  4980  0FFF  0008               	return
  4981  1000                     __end_of___aldiv:
  4982                           
  4983                           	psect	text19
  4984  0F13                     __ptext19:	
  4985 ;; *************** function _lcd_init *****************
  4986 ;; Defined at:
  4987 ;;		line 51 in file "lcd.c"
  4988 ;; Parameters:    Size  Location     Type
  4989 ;;		None
  4990 ;; Auto vars:     Size  Location     Type
  4991 ;;		None
  4992 ;; Return value:  Size  Location     Type
  4993 ;;                  1    wreg      void 
  4994 ;; Registers used:
  4995 ;;		wreg, status,2, status,0, pclath, cstack
  4996 ;; Tracked objects:
  4997 ;;		On entry : 0/0
  4998 ;;		On exit  : 0/0
  4999 ;;		Unchanged: 0/0
  5000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5001 ;;      Params:         0       0       0       0       0
  5002 ;;      Locals:         0       0       0       0       0
  5003 ;;      Temps:          2       0       0       0       0
  5004 ;;      Totals:         2       0       0       0       0
  5005 ;;Total ram usage:        2 bytes
  5006 ;; Hardware stack levels used: 1
  5007 ;; Hardware stack levels required when called: 2
  5008 ;; This function calls:
  5009 ;;		_lcd_cmd
  5010 ;; This function is called by:
  5011 ;;		_main
  5012 ;; This function uses a non-reentrant model
  5013 ;;
  5014                           
  5015                           
  5016                           ;psect for function _lcd_init
  5017  0F13                     _lcd_init:
  5018  0F13                     l2128:	
  5019                           ;incstack = 0
  5020                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  5021                           
  5022                           
  5023                           ;lcd.c: 53:  PORTEbits.RE1=0;
  5024  0F13  1283               	bcf	3,5	;RP0=0, select bank0
  5025  0F14  1303               	bcf	3,6	;RP1=0, select bank0
  5026  0F15  1089               	bcf	9,1	;volatile
  5027                           
  5028                           ;lcd.c: 54:  PORTEbits.RE0=0;
  5029  0F16  1009               	bcf	9,0	;volatile
  5030  0F17                     l2130:
  5031                           
  5032                           ;lcd.c: 55:  _delay((unsigned long)((20)*(4000000/4000.0)));
  5033  0F17  301A               	movlw	26
  5034  0F18  00F5               	movwf	??_lcd_init+1
  5035  0F19  30F8               	movlw	248
  5036  0F1A  00F4               	movwf	??_lcd_init
  5037  0F1B                     u1827:
  5038  0F1B  0BF4               	decfsz	??_lcd_init,f
  5039  0F1C  2F1B               	goto	u1827
  5040  0F1D  0BF5               	decfsz	??_lcd_init+1,f
  5041  0F1E  2F1B               	goto	u1827
  5042  0F1F  0000               	nop
  5043  0F20                     l2132:
  5044                           
  5045                           ;lcd.c: 56:  PORTEbits.RE1=1;
  5046  0F20  1283               	bcf	3,5	;RP0=0, select bank0
  5047  0F21  1303               	bcf	3,6	;RP1=0, select bank0
  5048  0F22  1489               	bsf	9,1	;volatile
  5049  0F23                     l2134:
  5050                           
  5051                           ;lcd.c: 58:  lcd_cmd(0x38);
  5052  0F23  3038               	movlw	56
  5053  0F24  120A  158A  2571  120A  158A  	fcall	_lcd_cmd
  5054  0F29                     l2136:
  5055                           
  5056                           ;lcd.c: 59:  _delay((unsigned long)((5)*(4000000/4000.0)));
  5057  0F29  3007               	movlw	7
  5058  0F2A  00F5               	movwf	??_lcd_init+1
  5059  0F2B  307D               	movlw	125
  5060  0F2C  00F4               	movwf	??_lcd_init
  5061  0F2D                     u1837:
  5062  0F2D  0BF4               	decfsz	??_lcd_init,f
  5063  0F2E  2F2D               	goto	u1837
  5064  0F2F  0BF5               	decfsz	??_lcd_init+1,f
  5065  0F30  2F2D               	goto	u1837
  5066                           
  5067                           ;lcd.c: 60:  lcd_cmd(0x38);
  5068  0F31  3038               	movlw	56
  5069  0F32  120A  158A  2571  120A  158A  	fcall	_lcd_cmd
  5070  0F37                     l2138:
  5071                           
  5072                           ;lcd.c: 61:     _delay((unsigned long)((1)*(4000000/4000.0)));
  5073  0F37  30C7               	movlw	199
  5074  0F38  00F4               	movwf	??_lcd_init
  5075  0F39                     u1847:
  5076  0F39  2F3A               	nop2
  5077  0F3A  0BF4               	decfsz	??_lcd_init,f
  5078  0F3B  2F39               	goto	u1847
  5079  0F3C  2F3D               	nop2
  5080  0F3D  2F3E               	nop2
  5081  0F3E                     l2140:
  5082                           
  5083                           ;lcd.c: 62:  lcd_cmd(0x38);
  5084  0F3E  3038               	movlw	56
  5085  0F3F  120A  158A  2571  120A  158A  	fcall	_lcd_cmd
  5086  0F44                     l2142:
  5087                           
  5088                           ;lcd.c: 63:  lcd_cmd(0x08);
  5089  0F44  3008               	movlw	8
  5090  0F45  120A  158A  2571  120A  158A  	fcall	_lcd_cmd
  5091  0F4A                     l2144:
  5092                           
  5093                           ;lcd.c: 64:  lcd_cmd(0x0F);
  5094  0F4A  300F               	movlw	15
  5095  0F4B  120A  158A  2571  120A  158A  	fcall	_lcd_cmd
  5096  0F50                     l2146:
  5097                           
  5098                           ;lcd.c: 65:  lcd_cmd(0x01);
  5099  0F50  3001               	movlw	1
  5100  0F51  120A  158A  2571  120A  158A  	fcall	_lcd_cmd
  5101  0F56                     l2148:
  5102                           
  5103                           ;lcd.c: 66:  lcd_cmd(0x38);
  5104  0F56  3038               	movlw	56
  5105  0F57  120A  158A  2571  120A  158A  	fcall	_lcd_cmd
  5106  0F5C                     l2150:
  5107                           
  5108                           ;lcd.c: 67:     lcd_cmd(0x80);
  5109  0F5C  3080               	movlw	128
  5110  0F5D  120A  158A  2571  120A  158A  	fcall	_lcd_cmd
  5111  0F62                     l188:
  5112  0F62  0008               	return
  5113  0F63                     __end_of_lcd_init:
  5114                           
  5115                           	psect	text20
  5116  0D71                     __ptext20:	
  5117 ;; *************** function _lcd_cmd *****************
  5118 ;; Defined at:
  5119 ;;		line 29 in file "lcd.c"
  5120 ;; Parameters:    Size  Location     Type
  5121 ;;  val             1    wreg     unsigned char 
  5122 ;; Auto vars:     Size  Location     Type
  5123 ;;  val             1    3[COMMON] unsigned char 
  5124 ;; Return value:  Size  Location     Type
  5125 ;;                  1    wreg      void 
  5126 ;; Registers used:
  5127 ;;		wreg, status,2, status,0, pclath, cstack
  5128 ;; Tracked objects:
  5129 ;;		On entry : 0/0
  5130 ;;		On exit  : 0/0
  5131 ;;		Unchanged: 0/0
  5132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5133 ;;      Params:         0       0       0       0       0
  5134 ;;      Locals:         1       0       0       0       0
  5135 ;;      Temps:          2       0       0       0       0
  5136 ;;      Totals:         3       0       0       0       0
  5137 ;;Total ram usage:        3 bytes
  5138 ;; Hardware stack levels used: 1
  5139 ;; Hardware stack levels required when called: 1
  5140 ;; This function calls:
  5141 ;;		_lcd_wr
  5142 ;; This function is called by:
  5143 ;;		_imprimirTemp
  5144 ;;		_telaInicio
  5145 ;;		_alterarSetPoint
  5146 ;;		_telaSetPoint
  5147 ;;		_telaGravarEEPROM
  5148 ;;		_telaControlador
  5149 ;;		_main
  5150 ;;		_lcd_init
  5151 ;; This function uses a non-reentrant model
  5152 ;;
  5153                           
  5154                           
  5155                           ;psect for function _lcd_cmd
  5156  0D71                     _lcd_cmd:
  5157                           
  5158                           ;incstack = 0
  5159                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
  5160                           ;lcd_cmd@val stored from wreg
  5161  0D71  00F3               	movwf	lcd_cmd@val
  5162  0D72                     l1714:
  5163                           
  5164                           ;lcd.c: 29: void lcd_cmd(unsigned char val);lcd.c: 30: {;lcd.c: 31:  PORTEbits.RE1=1;
  5165  0D72  1283               	bcf	3,5	;RP0=0, select bank0
  5166  0D73  1303               	bcf	3,6	;RP1=0, select bank0
  5167  0D74  1489               	bsf	9,1	;volatile
  5168  0D75                     l1716:
  5169                           
  5170                           ;lcd.c: 32:         lcd_wr(val);
  5171  0D75  0873               	movf	lcd_cmd@val,w
  5172  0D76  120A  118A  20C3  120A  158A  	fcall	_lcd_wr
  5173  0D7B                     l1718:
  5174                           
  5175                           ;lcd.c: 33:         PORTEbits.RE0=0;
  5176  0D7B  1283               	bcf	3,5	;RP0=0, select bank0
  5177  0D7C  1303               	bcf	3,6	;RP1=0, select bank0
  5178  0D7D  1009               	bcf	9,0	;volatile
  5179  0D7E                     l1720:
  5180                           
  5181                           ;lcd.c: 34:         _delay((unsigned long)((3)*(4000000/4000.0)));
  5182  0D7E  3004               	movlw	4
  5183  0D7F  00F2               	movwf	??_lcd_cmd+1
  5184  0D80  30E4               	movlw	228
  5185  0D81  00F1               	movwf	??_lcd_cmd
  5186  0D82                     u1857:
  5187  0D82  0BF1               	decfsz	??_lcd_cmd,f
  5188  0D83  2D82               	goto	u1857
  5189  0D84  0BF2               	decfsz	??_lcd_cmd+1,f
  5190  0D85  2D82               	goto	u1857
  5191  0D86  0000               	nop
  5192  0D87                     l1722:
  5193                           
  5194                           ;lcd.c: 35:         PORTEbits.RE1=0;
  5195  0D87  1283               	bcf	3,5	;RP0=0, select bank0
  5196  0D88  1303               	bcf	3,6	;RP1=0, select bank0
  5197  0D89  1089               	bcf	9,1	;volatile
  5198  0D8A                     l1724:
  5199                           
  5200                           ;lcd.c: 36:         _delay((unsigned long)((3)*(4000000/4000.0)));
  5201  0D8A  3004               	movlw	4
  5202  0D8B  00F2               	movwf	??_lcd_cmd+1
  5203  0D8C  30E4               	movlw	228
  5204  0D8D  00F1               	movwf	??_lcd_cmd
  5205  0D8E                     u1867:
  5206  0D8E  0BF1               	decfsz	??_lcd_cmd,f
  5207  0D8F  2D8E               	goto	u1867
  5208  0D90  0BF2               	decfsz	??_lcd_cmd+1,f
  5209  0D91  2D8E               	goto	u1867
  5210  0D92  0000               	nop
  5211  0D93                     l1726:
  5212                           
  5213                           ;lcd.c: 37:  PORTEbits.RE1=1;
  5214  0D93  1283               	bcf	3,5	;RP0=0, select bank0
  5215  0D94  1303               	bcf	3,6	;RP1=0, select bank0
  5216  0D95  1489               	bsf	9,1	;volatile
  5217  0D96                     l182:
  5218  0D96  0008               	return
  5219  0D97                     __end_of_lcd_cmd:
  5220                           
  5221                           	psect	text21
  5222  00C3                     __ptext21:	
  5223 ;; *************** function _lcd_wr *****************
  5224 ;; Defined at:
  5225 ;;		line 24 in file "lcd.c"
  5226 ;; Parameters:    Size  Location     Type
  5227 ;;  val             1    wreg     unsigned char 
  5228 ;; Auto vars:     Size  Location     Type
  5229 ;;  val             1    0[COMMON] unsigned char 
  5230 ;; Return value:  Size  Location     Type
  5231 ;;                  1    wreg      void 
  5232 ;; Registers used:
  5233 ;;		wreg
  5234 ;; Tracked objects:
  5235 ;;		On entry : 0/0
  5236 ;;		On exit  : 0/0
  5237 ;;		Unchanged: 0/0
  5238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5239 ;;      Params:         0       0       0       0       0
  5240 ;;      Locals:         1       0       0       0       0
  5241 ;;      Temps:          0       0       0       0       0
  5242 ;;      Totals:         1       0       0       0       0
  5243 ;;Total ram usage:        1 bytes
  5244 ;; Hardware stack levels used: 1
  5245 ;; This function calls:
  5246 ;;		Nothing
  5247 ;; This function is called by:
  5248 ;;		_lcd_cmd
  5249 ;;		_lcd_dat
  5250 ;; This function uses a non-reentrant model
  5251 ;;
  5252                           
  5253                           
  5254                           ;psect for function _lcd_wr
  5255  00C3                     _lcd_wr:
  5256                           
  5257                           ;incstack = 0
  5258                           ; Regs used in _lcd_wr: [wreg]
  5259                           ;lcd_wr@val stored from wreg
  5260  00C3  00F0               	movwf	lcd_wr@val
  5261  00C4                     l1618:
  5262                           
  5263                           ;lcd.c: 24: void lcd_wr(unsigned char val);lcd.c: 25: {;lcd.c: 26:   PORTD=val;
  5264  00C4  0870               	movf	lcd_wr@val,w
  5265  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  5266  00C6  1303               	bcf	3,6	;RP1=0, select bank0
  5267  00C7  0088               	movwf	8	;volatile
  5268  00C8                     l179:
  5269  00C8  0008               	return
  5270  00C9                     __end_of_lcd_wr:
  5271  007E                     btemp	set	126	;btemp
  5272  007E                     wtemp0	set	126
  5273                           
  5274                           	psect	config
  5275                           
  5276                           ;Config register CONFIG @ 0x2007
  5277                           ;	Oscillator Selection bits
  5278                           ;	FOSC = XT, XT oscillator
  5279                           ;	Watchdog Timer Enable bit
  5280                           ;	WDTE = OFF, WDT disabled
  5281                           ;	Power-up Timer Enable bit
  5282                           ;	PWRTE = OFF, PWRT disabled
  5283                           ;	Brown-out Reset Enable bit
  5284                           ;	BOREN = OFF, BOR disabled
  5285                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  5286                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  5287                           ;	Data EEPROM Memory Code Protection bit
  5288                           ;	CPD = OFF, Data EEPROM code protection off
  5289                           ;	Flash Program Memory Write Enable bits
  5290                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  5291                           ;	In-Circuit Debugger Mode bit
  5292                           ;	DEBUG = 0x1, unprogrammed default
  5293                           ;	Flash Program Memory Code Protection bit
  5294                           ;	CP = OFF, Code protection off
  5295  2007                     	org	8199
  5296  2007  3F39               	dw	16185

Data Sizes:
    Strings     186
    Constant    0
    Data        0
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     58      76
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    itoa@str	PTR unsigned char  size(1) Largest target is 6
		 -> telaControlador@strDC(BANK0[6]), telaControlador@str(BANK0[6]), imprimirTemp@str(BANK0[6]), 

    lcd_str@str	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_20(CODE[13]), STR_19(CODE[15]), STR_18(CODE[4]), STR_17(CODE[4]), 
		 -> STR_16(CODE[14]), STR_15(CODE[9]), STR_14(CODE[9]), STR_13(CODE[11]), 
		 -> STR_12(CODE[15]), STR_11(CODE[13]), STR_10(CODE[16]), STR_9(CODE[9]), 
		 -> STR_8(CODE[9]), STR_7(CODE[11]), STR_6(CODE[15]), STR_5(CODE[11]), 
		 -> STR_4(CODE[17]), STR_3(CODE[15]), STR_2(CODE[15]), STR_1(CODE[7]), 


Critical Paths under _main in COMMON

    _main->___lwdiv
    _telaSetPoint->_alterarSetPoint
    _telaGravarEEPROM->_alterarSetPoint
    _alterarSetPoint->_lcd_str
    _armazenarSet->___wmul
    _lcd_str->_lcd_dat
    _lcd_dat->_lcd_wr
    _itoa->___lwdiv
    ___lwdiv->___lwmod
    _iniciarControlador->___aldiv
    _verificarTemperatura->___wmul
    ___aldiv->___wmul
    _lcd_init->_lcd_cmd
    _lcd_cmd->_lcd_wr

Critical Paths under _main in BANK0

    _main->_telaControlador
    _telaInicio->_imprimirTemp
    _imprimirTemp->_itoa
    _telaControlador->_iniciarControlador
    _iniciarControlador->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0   26051
                                             52 BANK0      6     6      0
                            ___lwdiv
                            ___lwmod
                       _armazenarSet
                            _lcd_cmd
                           _lcd_init
                            _lcd_str
                    _telaControlador
                   _telaGravarEEPROM
                         _telaInicio
                       _telaSetPoint
 ---------------------------------------------------------------------------------
 (1) _telaSetPoint                                         9     9      0    3477
                                             10 COMMON     3     3      0
                                              0 BANK0      6     6      0
                    _alterarSetPoint
                       _eeprom_write
                            _lcd_cmd
                            _lcd_dat
                            _lcd_str
 ---------------------------------------------------------------------------------
 (1) _telaInicio                                           7     5      2    7029
                                             17 BANK0      7     5      2
                       _armazenarSet
                       _imprimirTemp
                            _lcd_cmd
                            _lcd_dat
                            _lcd_str
               _verificarTemperatura
 ---------------------------------------------------------------------------------
 (2) _imprimirTemp                                        13     9      4    3720
                                              4 BANK0     13     9      4
                               _itoa
                            _lcd_cmd
                            _lcd_dat
                            _lcd_str
               _verificarTemperatura (ARG)
 ---------------------------------------------------------------------------------
 (1) _telaGravarEEPROM                                    11     9      2    3522
                                             10 COMMON     2     0      2
                                              0 BANK0      9     9      0
                    _alterarSetPoint
                       _eeprom_write
                            _lcd_cmd
                            _lcd_dat
                            _lcd_str
 ---------------------------------------------------------------------------------
 (2) _eeprom_write                                         3     2      1     348
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (2) _alterarSetPoint                                      3     3      0    2060
                                              7 COMMON     3     3      0
                       _armazenarSet
                            _lcd_cmd
                            _lcd_dat
                            _lcd_str
 ---------------------------------------------------------------------------------
 (3) _armazenarSet                                         0     0      0    1178
                             ___wmul
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (4) _eeprom_read                                          2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _telaControlador                                     23    21      2    8005
                                             29 BANK0     23    21      2
                 _iniciarControlador
                               _itoa
                            _lcd_cmd
                            _lcd_dat
                            _lcd_str
               _verificarTemperatura
 ---------------------------------------------------------------------------------
 (2) _lcd_str                                              3     3      0     794
                                              4 COMMON     3     3      0
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (3) _lcd_dat                                              3     3      0      44
                                              1 COMMON     3     3      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (3) _itoa                                                 4     1      3    2539
                                              0 BANK0      4     1      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     919
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     922
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _iniciarControlador                                  26    24      2    3084
                                              7 BANK0     22    20      2
                            ___aldiv
                             ___wmul
               _verificarTemperatura
 ---------------------------------------------------------------------------------
 (2) _verificarTemperatura                                 6     4      2    1202
                                              6 COMMON     6     4      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1156
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             15     7      8     452
                                              6 COMMON     8     0      8
                                              0 BANK0      7     7      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0      44
                                              4 COMMON     2     2      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              3     3      0      44
                                              1 COMMON     3     3      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (4) _lcd_wr                                               1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lwdiv
     ___lwmod (ARG)
   ___lwmod
   _armazenarSet
     ___wmul
     _eeprom_read
   _lcd_cmd
     _lcd_wr
   _lcd_init
     _lcd_cmd
   _lcd_str
     _lcd_dat
       _lcd_wr
   _telaControlador
     _iniciarControlador
       ___aldiv
         ___wmul (ARG)
       ___wmul
       _verificarTemperatura
         ___wmul
     _itoa
       ___lwdiv
       ___lwmod
     _lcd_cmd
     _lcd_dat
     _lcd_str
     _verificarTemperatura
   _telaGravarEEPROM
     _alterarSetPoint
       _armazenarSet
       _lcd_cmd
       _lcd_dat
       _lcd_str
     _eeprom_write
     _lcd_cmd
     _lcd_dat
     _lcd_str
   _telaInicio
     _armazenarSet
     _imprimirTemp
       _itoa
       _lcd_cmd
       _lcd_dat
       _lcd_str
       _verificarTemperatura (ARG)
     _lcd_cmd
     _lcd_dat
     _lcd_str
     _verificarTemperatura
   _telaSetPoint
     _alterarSetPoint
     _eeprom_write
     _lcd_cmd
     _lcd_dat
     _lcd_str

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      5A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3A      4C       5       95.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      5A      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Aug 27 21:39:54 2021

                            pc 0002                             l75 0DED                             l83 012D  
                           l78 0E1D                             l86 0E51                             l94 0276  
                           l97 0ECE                             _pi 005A              ??_alterarSetPoint 0077  
                           fsr 0004            ___wmul@multiplicand 0072                            l112 0425  
                          l131 0631                            l108 03EE                            l125 05E7  
                          l150 033C                            l143 07F2                            l400 0D58  
                          l402 0D70                            l146 0336                            l164 0510  
                          l157 04B4                            l182 0D96                            l185 0DBC  
                          l194 0D4B                            l370 0D14                            l179 00C8  
                          l188 0F62                            l372 0D29                            l197 01D1  
                          l390 0DBE                            l465 0F77                            l393 0DD8  
                          l475 0FFF                            l396 0DE9                            l389 0DBE  
                          l672 0F12                            l682 0E8B                            _RB1 0031  
                          _RB2 0032                            _RC1 0039                            _PR2 0092  
                          u920 0D6C                            u921 0D6B                            u905 0D59  
                          u930 0ED7                            u915 0D60                            u931 0ED6  
                          u950 0EE9                            u951 0EE8                            u880 0D1B  
                          u945 0EDB                            u881 0D1A                            u890 0D52  
                          u970 0EFA                            u891 0D51                            u971 0EF9  
                          u965 0EEA                            u990 0F0E                            u991 0F0D  
                          u975 0EF6                            u985 0F02                            fsr0 0004  
                          indf 0000         iniciarControlador@erro 0033                           l2000 052E  
                         l2010 055C                           l2002 0534                           l2100 02E3  
                         l2020 0584                           l2012 0562                           l2004 053A  
                         l2110 02FF                           l2102 02EB                           l2030 059F  
                         l2022 058A                           l2014 0568                           l2006 0549  
                         l2120 032B                           l2112 0307                           l2104 02F1  
                         l2040 05B8                           l2032 05A6                           l2024 0590  
                         l2016 0571                           l2008 0555                           l2200 046F  
                         l2130 0F17                           l2122 0331                           l2114 030F  
                         l2106 02F8                           l2050 05D2                           l2042 05BA  
                         l2026 0597                           l2034 05A8                           l2018 057A  
                         l2210 047C                           l2202 0472                           l2140 0F3E  
                         l2132 0F20                           l2124 0332                           l2116 0317  
                         l2108 02F9                           l2060 05FA                           l2052 05D8  
                         l2044 05C0                           l2036 05AC                           l2028 0599  
                         l2220 048A                           l2212 047F                           l2204 0473  
                         l2150 0F5C                           l2142 0F44                           l2134 0F23  
                         l2118 031D                           l2070 0617                           l2054 05EB  
                         l2062 05FE                           l2046 05C6                           l2038 05B0  
                         l2230 04BE                           l2222 0497                           l2214 0481  
                         l2206 0475                           l2144 0F4A                           l2136 0F29  
                         l2128 0F13                           l2080 0289                           l2072 062F  
                         l2064 0606                           l2056 05F0                           l2048 05CC  
                         l2240 04EA                           l2232 04C6                           l2224 049D  
                         l2216 0485                           l2208 0478                           l2160 0453  
                         l2152 0426                           l2146 0F50                           l2138 0F37  
                         l2090 02C1                           l2082 0299                           l2066 060D  
                         l2058 05F6                           l2250 0504                           l2242 04EF  
                         l2234 04D1                           l2226 04A9                           l2218 0488  
                         l2170 0458                           l2162 0454                           l2154 042C  
                         l2148 0F56                           l1700 0DEA                           l1620 0D98  
                         l2092 02C7                           l2084 02A6                           l2076 0277  
                         l2068 060F                           l2244 04F3                           l2236 04D7  
                         l2228 04BA                           l2180 045D                           l2172 0459  
                         l2164 0455                           l2156 043F                           l1702 0DF1  
                         l1710 012E                           l1630 0DB0                           l1622 0D9B  
                         l2094 02CD                           l2086 02B5                           l2078 027E  
                         l2246 04F9                           l2238 04E3                           l2190 0464  
                         l2182 045E                           l2174 045A                           l2166 0456  
                         l2158 0450                           l1720 0D7E                           l1640 0D4E  
                         l1704 0DF7                           l1712 01CD                           l1632 0DB9  
                         l1624 0DA1                           l2096 02D5                           l2088 02BB  
                         l1800 0E8C                           l2248 04FF                           l2192 0465  
                         l2184 045F                           l2176 045B                           l2168 0457  
                         l1618 00C4                           l1722 0D87                           l1714 0D72  
                         l1642 0D52                           l1706 0E19                           l1626 0DA4  
                         l1730 0D2D                           l2098 02DD                           l1634 0D1B  
                         l1810 0EC1                           l1802 0E9D                           l2194 0466  
                         l2186 0460                           l2178 045C                           l1724 0D8A  
                         l1716 0D75                           l1740 0F66                           l1644 0D5F  
                         l1660 0EE1                           l1652 0ECF                           l1628 0DAD  
                         l1732 0D3A                           l1804 0EA3                           l1820 0DD7  
                         l1812 0DC4                           l1900 0219                           l2196 0467  
                         l2188 0461                           l1726 0D93                           l1718 0D7B  
                         l1750 0F92                           l1742 0F6A                           l1646 0D66  
                         l1638 0D4C                           l1670 0F01                           l1662 0EE5  
                         l1654 0ED1                           l1734 0D3E                           l1806 0EAF  
                         l1830 0DE8                           l1822 0DDC                           l1814 0DCA  
                         l1910 024E                           l1902 0227                           l2198 046C  
                         l1760 0FB7                           l1752 0F9A                           l1744 0F7B  
                         l1648 0D6C                           l1840 0669                           l1832 0632  
                         l1672 0F08                           l1664 0EE9                           l1656 0ED7  
                         l1680 0E58                           l1728 0D2B                           l1736 0E1E  
                         l1808 0EB8                           l1824 0DE0                           l1816 0DD0  
                         l1912 0258                           l1904 022E                           l1920 026A  
                         l1762 0FC9                           l1754 0F9D                           l1770 0FE7  
                         l1746 0F86                           l1738 0F63                           l1850 0704  
                         l1842 069B                           l1834 063D                           l1666 0EFA  
                         l1658 0EDA                           l1674 0F0E                           l1690 0E74  
                         l1682 0E5B                           l1826 0DE1                           l1818 0DD3  
                         l1922 0272                           l1914 025E                           l1906 0242  
                         l1930 034B                           l1772 0FEC                           l1764 0FD7  
                         l1756 0FAA                           l1748 0F8A                           l1860 075B  
                         l1852 0718                           l1844 06A5                           l1836 063D  
                         l1668 0F00                           l1692 0E7A                           l1684 0E62  
                         l1828 0DE2                           l1780 00E0                           l1916 0262  
                         l1908 0248                           l1940 0371                           l1932 0351  
                         l1774 0FF7                           l1766 0FD8                           l1758 0FAE  
                         l1870 07D6                           l1862 0770                           l1854 0722  
                         l1846 06F7                           l1838 0654                           l1694 0E81  
                         l1686 0E66                           l1678 0E52                           l1790 0103  
                         l1782 00E8                           l1918 0266                           l1950 0398  
                         l1942 037A                           l1934 0357                           l1926 033D  
                         l1768 0FE1                           l1872 07D7                           l1864 078B  
                         l1856 074C                           l1848 06FB                           l1688 0E6A  
                         l1696 0E87                           l1792 010B                           l1784 00EF  
                         l1880 01D2                           l1952 039F                           l1960 03B0  
                         l1944 0383                           l1936 0365                           l1928 0345  
                         l1874 07E9                           l1858 074D                           l1866 079E  
                         l1794 0111                           l1786 00F5                           l1778 00D1  
                         l1890 01F0                           l1882 01D6                           l1970 03C8  
                         l1962 03B4                           l1954 03A1                           l1946 038C  
                         l1938 036B                           l1876 07EC                           l1868 07C6  
                         l1796 0119                           l1788 00FB                           l1892 01F9  
                         l1884 01DB                           l1980 03F2                           l1972 03CE  
                         l1956 03A7                           l1948 0392                           l1964 03B8  
                         l1798 011F                           l1894 0207                           l1886 01E1  
                         l1982 040A                           l1990 041D                           l1974 03D4  
                         l1966 03C0                           l1958 03AE                           l1992 0514  
                         l1896 020D                           l1888 01E7                           l1984 040F  
                         l1976 03DA                           l1968 03C2                           l1994 051C  
                         l1898 0213                           l1986 0415                           l1978 03E0  
                         l1996 0522                           l1988 0419                           l1998 0528  
                         STR_1 00B4                           STR_2 002A                           STR_3 0048  
                         STR_4 0009                           STR_5 008E                           STR_6 0057  
                         STR_7 008E                           STR_8 00AB                           STR_9 0099  
                         u1000 0E58                           u1001 0E57                           u1100 0F9A  
                         u1020 0E6A                           u1101 0F99                           u1021 0E69  
                         u1030 0E74                           u1031 0E73                           u1015 0E5C  
                         u1120 0FAE                           u1200 0DD7                           u1121 0FAD  
                         u1201 0DD6                           u1050 0E87                           u1210 0DE8  
                         u1115 0F9F                           u1051 0E86                           u1035 0E70  
                         u1211 0DE7                           u1140 0FC9                           u1060 0DF1  
                         u1300 0788                           u1220 0669                           u1141 0FC8  
                         u1061 0DF0                           u1301 0784                           u1221 0668  
                         u1045 0E7B                           u1070 0D4B                           u1135 0FB0  
                         u1231 068C                           u1223 0665                           u1071 0D4A  
                         u1160 0FE7                           u1080 0F6A                           u1320 0792  
                         u1240 06D4                           u1232 0693                           u1400 039F  
                         u1161 0FE6                           u1145 0FC5                           u1081 0F69  
                         u1321 078E                           u1241 06D5                           u1233 069A  
                         u1401 039E                           u1170 0FEC                           u1090 0F7B  
                         u1314 078B                           u1250 06FB                           u1242 06DA  
                         u1410 03AE                           u1171 0FEB                           u1155 0FD9  
                         u1091 0F7A                           u1251 06FA                           u1243 06DB  
                         u1411 03AD                           u1340 07C6                           u1260 0718  
                         u1500 05AC                           u1180 00E8                           u1420 03B4  
                         u1341 07C5                           u1261 0717                           u1501 05AB  
                         u1181 00E7                           u1421 03B3                           u1350 07E9  
                         u1334 0795                           u1270 074C                           u1190 0DC4  
                         u1510 05B8                           u1430 03C0                           u1351 07E8  
                         u1271 074B                           u1263 0714                           u1191 0DC3  
                         u1511 05B7                           u1431 03BF                           u1280 076C  
                         u1520 05EB                           u1360 025E                           u1440 03F2  
                         u1600 04BA                           u1345 07C2                           u1521 05EA  
                         u1361 025D                           u1441 03F1                           u1601 04B9  
                         u1290 077F                           u1530 05FA                           u1370 0266  
                         u1450 0419                           u1610 04BE                           u1355 07E5  
                         u1275 0748                           u1531 05F9                           u1371 0265  
                         u1451 0418                           u1611 04BD                           u1540 0606  
                         u1380 0272                           u1460 0425                           u1620 04C6  
                         u1285 0767                           u1541 0605                           u1381 0271  
                         u1461 0424                           u1621 04C5                           u1550 060D  
                         u1470 058A                           u1390 0392                           u1630 04D7  
                         u1295 077A                           u1551 060C                           u1471 0589  
                         u1391 0391                           u1631 04D6                           u1560 0617  
                         u1480 0597                           u1640 04EA                           u1561 0616  
                         u1481 0596                           u1641 04E9                           u1570 02F8  
                         u1490 05A6                           u1650 04FF                           u1571 02F7  
                         u1491 05A5                           u1707 0201                           u1651 04FE  
                         u1580 0331                           u1581 0330                           u1717 0221  
                         u1590 033C                           u1807 0DB4                           u1591 033B  
                         u1727 0254                           u1817 0755                           u1737 0127  
                         u1827 0F1B                           u1747 0542                           u1667 04AF  
                         u1837 0F2D                           u1757 0580                           u1677 035D  
                         u1847 0F39                           u1767 05E0                           u1687 0387  
                         u1857 0D82                           u1777 0EC7                           u1697 03E6  
                         u1867 0D8E                           u1787 0325                           u1797 0DA8  
               ??_eeprom_write 0071                 ??_armazenarSet 0076           telaGravarEEPROM@flag 0027  
                         _main 0426                           _itoa 012E                           btemp 007E  
                         start 0000                __end_of___aldiv 1000                          ?_main 0070  
                        _CCP1X 00BD                          _CCP1Y 00BC                          ?_itoa 0020  
                        _EEADR 010D                          STR_10 001A                          STR_11 0081  
                        STR_12 0057                          STR_20 0074                          STR_13 008E  
                        STR_14 00AB                          STR_15 00A2                          STR_16 0066  
                        STR_17 00BB                          STR_18 00BF                          STR_19 0039  
                        _T2CON 0012                __end_of___lwdiv 0F13                __end_of___lwmod 0E8C  
                        _RCREG 001A                          _SPBRG 0099                          _PORTD 0008  
                        _TRISD 0088    __size_of_iniciarControlador 01C1                          _TXREG 0019  
              __end_of_lcd_dat 0DBD                __end_of_lcd_cmd 0D97                __end_of_lcd_str 0D4C  
        telaGravarEEPROM@contD 0023          telaGravarEEPROM@contU 0025  __size_of_verificarTemperatura 0034  
                        pclath 000A                          status 0003                          wtemp0 007E  
              __initialization 07F3                   __end_of_main 0514                   __end_of_itoa 01D2  
                       ??_main 0054                         ??_itoa 0023      __size_of_telaGravarEEPROM 011E  
              _telaControlador 0277                         _ADCON0 001F                         _ADCON1 009F  
                       _ADRESH 001E                         _ADRESL 009E                         _EEDATA 010C  
                       _CCPR1L 0015                         _EECON1 018C                         _EECON2 018D  
                       _TMR2ON 0092           __size_of_eeprom_read 0017               __end_of_lcd_init 0F63  
                    ??___aldiv 0020                         ___wmul 0D4C                      ??___lwdiv 007A  
                       _dezena 0068                      ??___lwmod 0074                         _lcd_wr 00C3  
         __end_of_eeprom_write 0DEA                      ??_lcd_dat 0071                      ??_lcd_cmd 0071  
         __end_of_armazenarSet 0E52                      ??_lcd_str 0074                  ?_imprimirTemp 0024  
      __end_of__initialization 07FC                eeprom_read@addr 0071                _alterarSetPoint 0E8C  
               __pcstackCOMMON 0070        __end_of_telaControlador 033D              eeprom_write@value 0070  
               ??_imprimirTemp 0028                     __pbssBANK0 005A                  ?_telaSetPoint 0070  
                   __pmaintext 0426                        ?___wmul 0070                        ?_lcd_wr 0070  
                      _CCP1CON 0017               _telaGravarEEPROM 0514               telaSetPoint@flag 0020  
           telaControlador@str 0042        __end_of_alterarSetPoint 0ECF                      ?_lcd_init 0070  
                   __stringtab 0003                 ??_telaSetPoint 007A   __end_of_verificarTemperatura 0E1E  
        __size_of_eeprom_write 002D                        ___aldiv 0F63          __size_of_armazenarSet 0034  
              __size_of___wmul 0025                        ___lwdiv 0ECF                        ___lwmod 0E52  
                    _CMCONbits 009C                __size_of_lcd_wr 0006     __end_of_iniciarControlador 07F3  
                      __ptext1 033D                        __ptext2 01D2                        __ptext3 00D1  
                      __ptext4 0514                        __ptext5 0DBD                        __ptext6 0E8C  
                      __ptext7 0E1E                        __ptext8 0D13                        __ptext9 0277  
                      _lcd_dat 0D97                        _lcd_cmd 0D71                        _lcd_str 0D2A  
             ?_telaControlador 003D               ___aldiv@dividend 007A                        _num_dac 0062  
                      _unidade 0066                        clrloop0 00CA                     ??_lcd_init 0074  
                   _telaInicio 01D2           end_of_initialization 07FC                imprimirTemp@str 002B  
                      itoa@val 0020                        itoa@str 0022                   _eeprom_write 0DBD  
                 _armazenarSet 0E1E       verificarTemperatura@temp 007A                      _RCSTAbits 0018  
             ___aldiv@quotient 0023           __end_of_imprimirTemp 012E           telaControlador@strDC 004E  
                    _PORTBbits 0006                      _PORTCbits 0007                      _PORTEbits 0009  
                    _TRISAbits 0085                      _TRISBbits 0086                      _TRISCbits 0087  
                    _TRISEbits 0089                     lcd_dat@val 0073                     lcd_cmd@val 0073  
  iniciarControlador@dutyCycle 0039               ?_alterarSetPoint 0070                  ??_eeprom_read 0070  
                    _TXSTAbits 0098                     lcd_str@str 0076    iniciarControlador@tempAtual 0031  
               __end_of___wmul 0D71                 __end_of_lcd_wr 00C9           __end_of_telaSetPoint 0426  
          start_initialization 07F3           _verificarTemperatura 0DEA                    ?_telaInicio 0031  
     __end_of_telaGravarEEPROM 0632                       ??___wmul 0074            __end_of_eeprom_read 0D2A  
                     ??_lcd_wr 0070                      ___latbits 0002                  __pcstackBANK0 0020  
        ?_verificarTemperatura 0076               eeprom_write@addr 0072              __size_of_lcd_init 0050  
        __size_of_imprimirTemp 005D               ___lwdiv@dividend 0078                       ?___aldiv 0076  
                     ?___lwdiv 0076                       ?___lwmod 0070            __size_of_telaInicio 00A5  
                    __pstrings 0003              telaControlador@dc 0048                       ?_lcd_dat 0070  
                     ?_lcd_cmd 0070                       ?_lcd_str 0070               ___lwdiv@quotient 007B  
                    _dutyCycle 005E                   _imprimirTemp 00D1             _iniciarControlador 0632  
              ___aldiv@divisor 0076                ___aldiv@counter 0021                 ___wmul@product 0074  
            telaSetPoint@contD 0022              telaSetPoint@contU 0024                      clear_ram0 00C9  
                  _eeprom_read 0D13                 telaInicio@flag 0036            ?_iniciarControlador 0027  
                     _PIR1bits 000C          __size_of_telaSetPoint 00E9            telaControlador@temp 004C  
                   _ADCON0bits 001F                    __stringbase 0008                     _ADCON1bits 009F  
            ___wmul@multiplier 0070           ??_iniciarControlador 0029                      lcd_wr@val 0070  
       ??_verificarTemperatura 0078       __size_of_telaControlador 00C6                   _telaSetPoint 033D  
                   _EECON1bits 018C              imprimirTemp@linha 0026               __size_of___aldiv 009D  
             __size_of___lwdiv 0044               __size_of___lwmod 003A             __end_of__stringtab 0009  
             __size_of_lcd_dat 0026               __size_of_lcd_cmd 0026               __size_of_lcd_str 0022  
              ___lwdiv@divisor 0076                ___lwdiv@counter 007D                       __ptext10 0D2A  
                     __ptext11 0D97                       __ptext20 0D71                       __ptext12 012E  
                     __ptext21 00C3                       __ptext13 0E52                       __ptext14 0ECF  
                     __ptext15 0632                       __ptext16 0DEA                       __ptext17 0D4C  
                     __ptext18 0F63                       __ptext19 0F13      iniciarControlador@num_dac 0035  
                     _lcd_init 0F13                   ??_telaInicio 0033                  __size_of_main 00EE  
                __size_of_itoa 00A4       __size_of_alterarSetPoint 0043              ?_telaGravarEEPROM 007A  
                     _setPoint 006A             ??_telaGravarEEPROM 0020                       main@flag 0058  
                     lcd_str@i 0075                       main@setU 0056             __end_of_telaInicio 0277  
                   _INTCONbits 000B               imprimirTemp@temp 0024               ___lwmod@dividend 0072  
            ??_telaControlador 003F                      stringcode 0003                ___lwmod@divisor 0070  
              ___lwmod@counter 0075                       stringdir 0003                       stringtab 0003  
                 ___aldiv@sign 0022                  ?_eeprom_write 0070                     _STATUSbits 0003  
                ?_armazenarSet 0070                   ?_eeprom_read 0070  
